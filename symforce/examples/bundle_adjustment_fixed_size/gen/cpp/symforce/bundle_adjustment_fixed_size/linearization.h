// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>
#include <Eigen/SparseCore>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const sym::LinearCameraCal<Scalar>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const sym::LinearCameraCal<Scalar>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 10322

  // Unused inputs
  (void)priors_0_0_target_T_src;
  (void)priors_0_0_sqrt_info;
  (void)priors_1_1_target_T_src;
  (void)priors_1_1_sqrt_info;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _views_0_calibration = views_0_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _views_1_calibration = views_1_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();

  // Intermediate terms (2291)
  const Scalar _tmp0 = 2 * _views_0_pose[3];
  const Scalar _tmp1 = _tmp0 * _views_0_pose[2];
  const Scalar _tmp2 = 2 * _views_0_pose[0];
  const Scalar _tmp3 = _tmp2 * _views_0_pose[1];
  const Scalar _tmp4 = _tmp1 + _tmp3;
  const Scalar _tmp5 = -2 * std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp6 = -2 * std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp7 = _tmp5 + _tmp6 + 1;
  const Scalar _tmp8 = _tmp2 * _views_0_pose[2];
  const Scalar _tmp9 = _tmp0 * _views_0_pose[1];
  const Scalar _tmp10 = _tmp8 - _tmp9;
  const Scalar _tmp11 = -_priors_0_1_target_T_src[4] - _tmp10 * _views_0_pose[6] +
                        _tmp10 * _views_1_pose[6] - _tmp4 * _views_0_pose[5] +
                        _tmp4 * _views_1_pose[5] - _tmp7 * _views_0_pose[4] +
                        _tmp7 * _views_1_pose[4];
  const Scalar _tmp12 = -_tmp1 + _tmp3;
  const Scalar _tmp13 = 1 - 2 * std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp14 = _tmp13 + _tmp5;
  const Scalar _tmp15 = 2 * _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp16 = _tmp0 * _views_0_pose[0];
  const Scalar _tmp17 = _tmp15 + _tmp16;
  const Scalar _tmp18 = -_priors_0_1_target_T_src[5] - _tmp12 * _views_0_pose[4] +
                        _tmp12 * _views_1_pose[4] - _tmp14 * _views_0_pose[5] +
                        _tmp14 * _views_1_pose[5] - _tmp17 * _views_0_pose[6] +
                        _tmp17 * _views_1_pose[6];
  const Scalar _tmp19 = _views_0_pose[0] * _views_1_pose[0];
  const Scalar _tmp20 = _views_0_pose[2] * _views_1_pose[2];
  const Scalar _tmp21 = _views_0_pose[1] * _views_1_pose[1];
  const Scalar _tmp22 = _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp23 = _tmp19 + _tmp20 + _tmp21 + _tmp22;
  const Scalar _tmp24 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp25 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp26 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp27 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp28 = -_tmp24 + _tmp25 - _tmp26 + _tmp27;
  const Scalar _tmp29 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp30 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp31 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp32 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp33 = -_tmp29 - _tmp30 + _tmp31 + _tmp32;
  const Scalar _tmp34 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp35 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp36 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp37 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp38 = -_tmp34 + _tmp35 + _tmp36 - _tmp37;
  const Scalar _tmp39 = -_priors_0_1_target_T_src[0] * _tmp23 -
                        _priors_0_1_target_T_src[1] * _tmp38 +
                        _priors_0_1_target_T_src[2] * _tmp33 + _priors_0_1_target_T_src[3] * _tmp28;
  const Scalar _tmp40 = _priors_0_1_target_T_src[0] * _tmp28 +
                        _priors_0_1_target_T_src[1] * _tmp33 +
                        _priors_0_1_target_T_src[2] * _tmp38 + _priors_0_1_target_T_src[3] * _tmp23;
  const Scalar _tmp41 = std::fabs(_tmp40);
  const Scalar _tmp42 = -epsilon;
  const Scalar _tmp43 = _tmp42 + 1;
  const Scalar _tmp44 = std::min<Scalar>(_tmp41, _tmp43);
  const Scalar _tmp45 = 1 - std::pow(_tmp44, Scalar(2));
  const Scalar _tmp46 = 2 / std::sqrt(_tmp45);
  const Scalar _tmp47 = std::copysign(Scalar(1.0), _tmp40);
  const Scalar _tmp48 = std::acos(_tmp44);
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp46 * _tmp49;
  const Scalar _tmp51 = _tmp39 * _tmp50;
  const Scalar _tmp52 = _priors_0_1_target_T_src[0] * _tmp38 -
                        _priors_0_1_target_T_src[1] * _tmp23 -
                        _priors_0_1_target_T_src[2] * _tmp28 + _priors_0_1_target_T_src[3] * _tmp33;
  const Scalar _tmp53 = _tmp50 * _tmp52;
  const Scalar _tmp54 = _tmp13 + _tmp6;
  const Scalar _tmp55 = _tmp8 + _tmp9;
  const Scalar _tmp56 = _tmp15 - _tmp16;
  const Scalar _tmp57 = -_priors_0_1_target_T_src[6] - _tmp54 * _views_0_pose[6] +
                        _tmp54 * _views_1_pose[6] - _tmp55 * _views_0_pose[4] +
                        _tmp55 * _views_1_pose[4] - _tmp56 * _views_0_pose[5] +
                        _tmp56 * _views_1_pose[5];
  const Scalar _tmp58 = -_priors_0_1_target_T_src[0] * _tmp33 +
                        _priors_0_1_target_T_src[1] * _tmp28 -
                        _priors_0_1_target_T_src[2] * _tmp23 + _priors_0_1_target_T_src[3] * _tmp38;
  const Scalar _tmp59 = _tmp50 * _tmp58;
  const Scalar _tmp60 = _tmp11 * priors_0_1_sqrt_info(0, 3) + _tmp18 * priors_0_1_sqrt_info(0, 4) +
                        _tmp51 * priors_0_1_sqrt_info(0, 0) + _tmp53 * priors_0_1_sqrt_info(0, 1) +
                        _tmp57 * priors_0_1_sqrt_info(0, 5) + _tmp59 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp61 = _tmp50 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp62 = _tmp11 * priors_0_1_sqrt_info(1, 3) + _tmp18 * priors_0_1_sqrt_info(1, 4) +
                        _tmp51 * priors_0_1_sqrt_info(1, 0) + _tmp52 * _tmp61 +
                        _tmp57 * priors_0_1_sqrt_info(1, 5) + _tmp59 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp63 = _tmp11 * priors_0_1_sqrt_info(2, 3) + _tmp18 * priors_0_1_sqrt_info(2, 4) +
                        _tmp51 * priors_0_1_sqrt_info(2, 0) + _tmp53 * priors_0_1_sqrt_info(2, 1) +
                        _tmp57 * priors_0_1_sqrt_info(2, 5) + _tmp59 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp64 = _tmp39 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp65 = _tmp47 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp66 = _tmp48 * _tmp65;
  const Scalar _tmp67 = _tmp46 * _tmp66;
  const Scalar _tmp68 = _tmp11 * priors_0_1_sqrt_info(3, 3) + _tmp18 * priors_0_1_sqrt_info(3, 4) +
                        _tmp50 * _tmp64 + _tmp53 * priors_0_1_sqrt_info(3, 1) +
                        _tmp57 * priors_0_1_sqrt_info(3, 5) + _tmp58 * _tmp67;
  const Scalar _tmp69 = _tmp11 * priors_0_1_sqrt_info(4, 3) + _tmp18 * priors_0_1_sqrt_info(4, 4) +
                        _tmp51 * priors_0_1_sqrt_info(4, 0) + _tmp53 * priors_0_1_sqrt_info(4, 1) +
                        _tmp57 * priors_0_1_sqrt_info(4, 5) + _tmp59 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp70 = _tmp11 * priors_0_1_sqrt_info(5, 3) + _tmp18 * priors_0_1_sqrt_info(5, 4) +
                        _tmp51 * priors_0_1_sqrt_info(5, 0) + _tmp53 * priors_0_1_sqrt_info(5, 1) +
                        _tmp57 * priors_0_1_sqrt_info(5, 5) + _tmp59 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp71 = _tmp34 - _tmp35 - _tmp36 + _tmp37;
  const Scalar _tmp72 = _tmp29 + _tmp30 - _tmp31 - _tmp32;
  const Scalar _tmp73 = _tmp24 - _tmp25 + _tmp26 - _tmp27;
  const Scalar _tmp74 = _priors_1_0_target_T_src[0] * _tmp71 -
                        _priors_1_0_target_T_src[1] * _tmp23 -
                        _priors_1_0_target_T_src[2] * _tmp73 + _priors_1_0_target_T_src[3] * _tmp72;
  const Scalar _tmp75 = _priors_1_0_target_T_src[3] * _tmp23;
  const Scalar _tmp76 = _priors_1_0_target_T_src[2] * _tmp71;
  const Scalar _tmp77 = _priors_1_0_target_T_src[1] * _tmp72;
  const Scalar _tmp78 = _priors_1_0_target_T_src[0] * _tmp73;
  const Scalar _tmp79 = _tmp75 + _tmp76 + _tmp77 + _tmp78;
  const Scalar _tmp80 = std::copysign(Scalar(1.0), _tmp79);
  const Scalar _tmp81 = 2 * _tmp80;
  const Scalar _tmp82 = _tmp81 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp83 = std::min<Scalar>(_tmp43, std::fabs(_tmp79));
  const Scalar _tmp84 = std::acos(_tmp83) / std::sqrt(Scalar(1 - std::pow(_tmp83, Scalar(2))));
  const Scalar _tmp85 = -_priors_1_0_target_T_src[0] * _tmp72 +
                        _priors_1_0_target_T_src[1] * _tmp73 -
                        _priors_1_0_target_T_src[2] * _tmp23 + _priors_1_0_target_T_src[3] * _tmp71;
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp81 * _tmp86;
  const Scalar _tmp88 = -_priors_1_0_target_T_src[0] * _tmp23 -
                        _priors_1_0_target_T_src[1] * _tmp71 +
                        _priors_1_0_target_T_src[2] * _tmp72 + _priors_1_0_target_T_src[3] * _tmp73;
  const Scalar _tmp89 = _tmp81 * _tmp84;
  const Scalar _tmp90 = _tmp88 * _tmp89;
  const Scalar _tmp91 = 2 * _views_1_pose[0];
  const Scalar _tmp92 = _tmp91 * _views_1_pose[3];
  const Scalar _tmp93 = 2 * _views_1_pose[2];
  const Scalar _tmp94 = _tmp93 * _views_1_pose[1];
  const Scalar _tmp95 = _tmp92 + _tmp94;
  const Scalar _tmp96 = _tmp95 * _views_1_pose[6];
  const Scalar _tmp97 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp98 = 2 * _tmp97;
  const Scalar _tmp99 = -_tmp98;
  const Scalar _tmp100 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp101 = 2 * _tmp100;
  const Scalar _tmp102 = -_tmp101;
  const Scalar _tmp103 = _tmp102 + _tmp99 + 1;
  const Scalar _tmp104 = _tmp91 * _views_1_pose[1];
  const Scalar _tmp105 = _tmp93 * _views_1_pose[3];
  const Scalar _tmp106 = -_tmp105;
  const Scalar _tmp107 = _tmp104 + _tmp106;
  const Scalar _tmp108 = _tmp107 * _views_1_pose[4];
  const Scalar _tmp109 = _tmp107 * _views_0_pose[4] + _tmp95 * _views_0_pose[6];
  const Scalar _tmp110 = -_priors_1_0_target_T_src[5] + _tmp103 * _views_0_pose[5] -
                         _tmp103 * _views_1_pose[5] - _tmp108 + _tmp109 - _tmp96;
  const Scalar _tmp111 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp112 = 2 * _tmp111;
  const Scalar _tmp113 = 1 - _tmp112;
  const Scalar _tmp114 = _tmp102 + _tmp113;
  const Scalar _tmp115 = _tmp91 * _views_1_pose[2];
  const Scalar _tmp116 = 2 * _views_1_pose[1] * _views_1_pose[3];
  const Scalar _tmp117 = -_tmp116;
  const Scalar _tmp118 = _tmp115 + _tmp117;
  const Scalar _tmp119 = _tmp118 * _views_1_pose[6];
  const Scalar _tmp120 = _tmp104 + _tmp105;
  const Scalar _tmp121 = _tmp120 * _views_1_pose[5];
  const Scalar _tmp122 = _tmp118 * _views_0_pose[6] + _tmp120 * _views_0_pose[5];
  const Scalar _tmp123 = -_priors_1_0_target_T_src[4] + _tmp114 * _views_0_pose[4] -
                         _tmp114 * _views_1_pose[4] - _tmp119 - _tmp121 + _tmp122;
  const Scalar _tmp124 = -_tmp92;
  const Scalar _tmp125 = _tmp124 + _tmp94;
  const Scalar _tmp126 = _tmp125 * _views_1_pose[5];
  const Scalar _tmp127 = _tmp113 + _tmp99;
  const Scalar _tmp128 = _tmp115 + _tmp116;
  const Scalar _tmp129 = _tmp128 * _views_1_pose[4];
  const Scalar _tmp130 = _tmp125 * _views_0_pose[5] + _tmp128 * _views_0_pose[4];
  const Scalar _tmp131 = -_priors_1_0_target_T_src[6] - _tmp126 + _tmp127 * _views_0_pose[6] -
                         _tmp127 * _views_1_pose[6] - _tmp129 + _tmp130;
  const Scalar _tmp132 = _tmp110 * priors_1_0_sqrt_info(0, 4) +
                         _tmp123 * priors_1_0_sqrt_info(0, 3) +
                         _tmp131 * priors_1_0_sqrt_info(0, 5) + _tmp74 * _tmp82 * _tmp84 +
                         _tmp87 * priors_1_0_sqrt_info(0, 2) + _tmp90 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp133 = _tmp74 * _tmp89;
  const Scalar _tmp134 =
      _tmp110 * priors_1_0_sqrt_info(1, 4) + _tmp123 * priors_1_0_sqrt_info(1, 3) +
      _tmp131 * priors_1_0_sqrt_info(1, 5) + _tmp133 * priors_1_0_sqrt_info(1, 1) +
      _tmp87 * priors_1_0_sqrt_info(1, 2) + _tmp90 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp135 =
      _tmp110 * priors_1_0_sqrt_info(2, 4) + _tmp123 * priors_1_0_sqrt_info(2, 3) +
      _tmp131 * priors_1_0_sqrt_info(2, 5) + _tmp133 * priors_1_0_sqrt_info(2, 1) +
      _tmp87 * priors_1_0_sqrt_info(2, 2) + _tmp90 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp136 = _tmp81 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp137 = _tmp74 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp138 = _tmp110 * priors_1_0_sqrt_info(3, 4) +
                         _tmp123 * priors_1_0_sqrt_info(3, 3) +
                         _tmp131 * priors_1_0_sqrt_info(3, 5) + _tmp136 * _tmp86 +
                         _tmp137 * _tmp89 + _tmp90 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp139 =
      _tmp110 * priors_1_0_sqrt_info(4, 4) + _tmp123 * priors_1_0_sqrt_info(4, 3) +
      _tmp131 * priors_1_0_sqrt_info(4, 5) + _tmp133 * priors_1_0_sqrt_info(4, 1) +
      _tmp87 * priors_1_0_sqrt_info(4, 2) + _tmp90 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp140 =
      _tmp110 * priors_1_0_sqrt_info(5, 4) + _tmp123 * priors_1_0_sqrt_info(5, 3) +
      _tmp131 * priors_1_0_sqrt_info(5, 5) + _tmp133 * priors_1_0_sqrt_info(5, 1) +
      _tmp87 * priors_1_0_sqrt_info(5, 2) + _tmp90 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp141 = Scalar(1.0) / (_views_0_calibration[0]);
  const Scalar _tmp142 = _tmp141 * _tmp7;
  const Scalar _tmp143 = -_views_0_calibration[3];
  const Scalar _tmp144 = _tmp143 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp145 = std::pow(_views_0_calibration[1], Scalar(-2));
  const Scalar _tmp146 = -_views_0_calibration[2];
  const Scalar _tmp147 = _tmp146 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp148 = std::pow(_views_0_calibration[0], Scalar(-2));
  const Scalar _tmp149 = epsilon + 1;
  const Scalar _tmp150 = std::pow(Scalar(std::pow(_tmp144, Scalar(2)) * _tmp145 +
                                         std::pow(_tmp147, Scalar(2)) * _tmp148 + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp151 = _tmp147 * _tmp150;
  const Scalar _tmp152 = _tmp144 * _tmp150;
  const Scalar _tmp153 = Scalar(1.0) / (_views_0_calibration[1]);
  const Scalar _tmp154 = _tmp12 * _tmp153;
  const Scalar _tmp155 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp156 =
      _tmp142 * _tmp151 + _tmp150 * _tmp55 + _tmp152 * _tmp154 + _tmp155 * landmarks_0_;
  const Scalar _tmp157 = _tmp153 * _tmp17;
  const Scalar _tmp158 = _tmp10 * _tmp141;
  const Scalar _tmp159 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp160 =
      _tmp150 * _tmp54 + _tmp151 * _tmp158 + _tmp152 * _tmp157 + _tmp159 * landmarks_0_;
  const Scalar _tmp161 = _tmp141 * _tmp4;
  const Scalar _tmp162 = _tmp14 * _tmp153;
  const Scalar _tmp163 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp164 =
      _tmp150 * _tmp56 + _tmp151 * _tmp161 + _tmp152 * _tmp162 + _tmp163 * landmarks_0_;
  const Scalar _tmp165 = _tmp118 * _tmp160 + _tmp120 * _tmp164;
  const Scalar _tmp166 = _tmp114 * _tmp156 + _tmp165;
  const Scalar _tmp167 = _tmp125 * _tmp164 + _tmp128 * _tmp156;
  const Scalar _tmp168 = _tmp127 * _tmp160 + _tmp167;
  const Scalar _tmp169 = std::max<Scalar>(_tmp168, epsilon);
  const Scalar _tmp170 = Scalar(1.0) / (_tmp169);
  const Scalar _tmp171 = _tmp170 * _views_1_calibration[0];
  const Scalar _tmp172 =
      _tmp166 * _tmp171 + _views_1_calibration[2] - matches_0_0_target_coords(0, 0);
  const Scalar _tmp173 = _tmp107 * _tmp156 + _tmp160 * _tmp95;
  const Scalar _tmp174 = _tmp103 * _tmp164 + _tmp173;
  const Scalar _tmp175 = _tmp170 * _views_1_calibration[1];
  const Scalar _tmp176 =
      _tmp174 * _tmp175 + _views_1_calibration[3] - matches_0_0_target_coords(1, 0);
  const Scalar _tmp177 = std::pow(_tmp172, Scalar(2)) + std::pow(_tmp176, Scalar(2)) + epsilon;
  const Scalar _tmp178 = std::pow(_tmp177, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp179 = std::max<Scalar>(0, (((_tmp168) > 0) - ((_tmp168) < 0)));
  const Scalar _tmp180 = std::sqrt(matches_0_0_weight);
  const Scalar _tmp181 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp182 = Scalar(1.0) / (_tmp149 - costs_reprojection_error_gnc_mu);
  const Scalar _tmp183 = epsilon + std::fabs(_tmp182);
  const Scalar _tmp184 = _tmp181 / _tmp183;
  const Scalar _tmp185 = _tmp177 * _tmp184 + 1;
  const Scalar _tmp186 = 2 - _tmp182;
  const Scalar _tmp187 = _tmp186 + epsilon * std::copysign(Scalar(1.0), _tmp186);
  const Scalar _tmp188 = (Scalar(1) / Scalar(2)) * _tmp187;
  const Scalar _tmp189 = 2 * _tmp183 / _tmp187;
  const Scalar _tmp190 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp185, _tmp188) - 1)));
  const Scalar _tmp191 = _tmp179 * _tmp180 * _tmp190;
  const Scalar _tmp192 = _tmp178 * _tmp191;
  const Scalar _tmp193 = _tmp172 * _tmp192;
  const Scalar _tmp194 = _tmp176 * _tmp192;
  const Scalar _tmp195 = _tmp146 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp196 = _tmp143 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp197 = std::pow(Scalar(_tmp145 * std::pow(_tmp196, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp195, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp198 = _tmp195 * _tmp197;
  const Scalar _tmp199 = _tmp196 * _tmp197;
  const Scalar _tmp200 =
      _tmp142 * _tmp198 + _tmp154 * _tmp199 + _tmp155 * landmarks_1_ + _tmp197 * _tmp55;
  const Scalar _tmp201 =
      _tmp157 * _tmp199 + _tmp158 * _tmp198 + _tmp159 * landmarks_1_ + _tmp197 * _tmp54;
  const Scalar _tmp202 =
      _tmp161 * _tmp198 + _tmp162 * _tmp199 + _tmp163 * landmarks_1_ + _tmp197 * _tmp56;
  const Scalar _tmp203 = _tmp118 * _tmp201 + _tmp120 * _tmp202;
  const Scalar _tmp204 = _tmp114 * _tmp200 + _tmp203;
  const Scalar _tmp205 = _tmp125 * _tmp202 + _tmp128 * _tmp200;
  const Scalar _tmp206 = _tmp127 * _tmp201 + _tmp205;
  const Scalar _tmp207 = std::max<Scalar>(_tmp206, epsilon);
  const Scalar _tmp208 = Scalar(1.0) / (_tmp207);
  const Scalar _tmp209 = _tmp208 * _views_1_calibration[0];
  const Scalar _tmp210 =
      _tmp204 * _tmp209 + _views_1_calibration[2] - matches_0_1_target_coords(0, 0);
  const Scalar _tmp211 = _tmp107 * _tmp200 + _tmp201 * _tmp95;
  const Scalar _tmp212 = _tmp103 * _tmp202 + _tmp211;
  const Scalar _tmp213 = _tmp208 * _views_1_calibration[1];
  const Scalar _tmp214 =
      _tmp212 * _tmp213 + _views_1_calibration[3] - matches_0_1_target_coords(1, 0);
  const Scalar _tmp215 = std::pow(_tmp210, Scalar(2)) + std::pow(_tmp214, Scalar(2)) + epsilon;
  const Scalar _tmp216 = std::pow(_tmp215, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp217 = std::sqrt(matches_0_1_weight);
  const Scalar _tmp218 = std::max<Scalar>(0, (((_tmp206) > 0) - ((_tmp206) < 0)));
  const Scalar _tmp219 = _tmp184 * _tmp215 + 1;
  const Scalar _tmp220 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp219, _tmp188) - 1)));
  const Scalar _tmp221 = _tmp217 * _tmp218 * _tmp220;
  const Scalar _tmp222 = _tmp216 * _tmp221;
  const Scalar _tmp223 = _tmp210 * _tmp222;
  const Scalar _tmp224 = _tmp214 * _tmp222;
  const Scalar _tmp225 = _tmp143 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp226 = _tmp146 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp227 = std::pow(Scalar(_tmp145 * std::pow(_tmp225, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp226, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp228 = _tmp226 * _tmp227;
  const Scalar _tmp229 = _tmp225 * _tmp227;
  const Scalar _tmp230 =
      _tmp142 * _tmp228 + _tmp154 * _tmp229 + _tmp155 * landmarks_2_ + _tmp227 * _tmp55;
  const Scalar _tmp231 =
      _tmp157 * _tmp229 + _tmp158 * _tmp228 + _tmp159 * landmarks_2_ + _tmp227 * _tmp54;
  const Scalar _tmp232 =
      _tmp161 * _tmp228 + _tmp162 * _tmp229 + _tmp163 * landmarks_2_ + _tmp227 * _tmp56;
  const Scalar _tmp233 = _tmp118 * _tmp231 + _tmp120 * _tmp232;
  const Scalar _tmp234 = _tmp114 * _tmp230 + _tmp233;
  const Scalar _tmp235 = _tmp125 * _tmp232 + _tmp128 * _tmp230;
  const Scalar _tmp236 = _tmp127 * _tmp231 + _tmp235;
  const Scalar _tmp237 = std::max<Scalar>(_tmp236, epsilon);
  const Scalar _tmp238 = Scalar(1.0) / (_tmp237);
  const Scalar _tmp239 = _tmp238 * _views_1_calibration[0];
  const Scalar _tmp240 =
      _tmp234 * _tmp239 + _views_1_calibration[2] - matches_0_2_target_coords(0, 0);
  const Scalar _tmp241 = _tmp107 * _tmp230 + _tmp231 * _tmp95;
  const Scalar _tmp242 = _tmp103 * _tmp232 + _tmp241;
  const Scalar _tmp243 = _tmp238 * _views_1_calibration[1];
  const Scalar _tmp244 =
      _tmp242 * _tmp243 + _views_1_calibration[3] - matches_0_2_target_coords(1, 0);
  const Scalar _tmp245 = std::pow(_tmp240, Scalar(2)) + std::pow(_tmp244, Scalar(2)) + epsilon;
  const Scalar _tmp246 = std::pow(_tmp245, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp247 = _tmp184 * _tmp245 + 1;
  const Scalar _tmp248 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp247, _tmp188) - 1)));
  const Scalar _tmp249 = std::max<Scalar>(0, (((_tmp236) > 0) - ((_tmp236) < 0)));
  const Scalar _tmp250 = std::sqrt(matches_0_2_weight);
  const Scalar _tmp251 = _tmp248 * _tmp249 * _tmp250;
  const Scalar _tmp252 = _tmp246 * _tmp251;
  const Scalar _tmp253 = _tmp240 * _tmp252;
  const Scalar _tmp254 = _tmp244 * _tmp252;
  const Scalar _tmp255 = _tmp146 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp256 = _tmp143 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp257 = std::pow(Scalar(_tmp145 * std::pow(_tmp256, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp255, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp258 = _tmp256 * _tmp257;
  const Scalar _tmp259 = _tmp255 * _tmp257;
  const Scalar _tmp260 =
      _tmp142 * _tmp259 + _tmp154 * _tmp258 + _tmp155 * landmarks_3_ + _tmp257 * _tmp55;
  const Scalar _tmp261 =
      _tmp161 * _tmp259 + _tmp162 * _tmp258 + _tmp163 * landmarks_3_ + _tmp257 * _tmp56;
  const Scalar _tmp262 =
      _tmp157 * _tmp258 + _tmp158 * _tmp259 + _tmp159 * landmarks_3_ + _tmp257 * _tmp54;
  const Scalar _tmp263 = _tmp118 * _tmp262 + _tmp120 * _tmp261;
  const Scalar _tmp264 = _tmp114 * _tmp260 + _tmp263;
  const Scalar _tmp265 = _tmp125 * _tmp261 + _tmp128 * _tmp260;
  const Scalar _tmp266 = _tmp127 * _tmp262 + _tmp265;
  const Scalar _tmp267 = std::max<Scalar>(_tmp266, epsilon);
  const Scalar _tmp268 = Scalar(1.0) / (_tmp267);
  const Scalar _tmp269 = _tmp268 * _views_1_calibration[0];
  const Scalar _tmp270 =
      _tmp264 * _tmp269 + _views_1_calibration[2] - matches_0_3_target_coords(0, 0);
  const Scalar _tmp271 = _tmp107 * _tmp260 + _tmp262 * _tmp95;
  const Scalar _tmp272 = _tmp103 * _tmp261 + _tmp271;
  const Scalar _tmp273 = _tmp268 * _views_1_calibration[1];
  const Scalar _tmp274 =
      _tmp272 * _tmp273 + _views_1_calibration[3] - matches_0_3_target_coords(1, 0);
  const Scalar _tmp275 = std::pow(_tmp270, Scalar(2)) + std::pow(_tmp274, Scalar(2)) + epsilon;
  const Scalar _tmp276 = std::pow(_tmp275, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp277 = std::max<Scalar>(0, (((_tmp266) > 0) - ((_tmp266) < 0)));
  const Scalar _tmp278 = std::sqrt(matches_0_3_weight);
  const Scalar _tmp279 = _tmp184 * _tmp275 + 1;
  const Scalar _tmp280 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp279, _tmp188) - 1)));
  const Scalar _tmp281 = _tmp277 * _tmp278 * _tmp280;
  const Scalar _tmp282 = _tmp276 * _tmp281;
  const Scalar _tmp283 = _tmp270 * _tmp282;
  const Scalar _tmp284 = _tmp274 * _tmp282;
  const Scalar _tmp285 = _tmp146 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp286 = _tmp143 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp287 = std::pow(Scalar(_tmp145 * std::pow(_tmp286, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp285, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp288 = _tmp286 * _tmp287;
  const Scalar _tmp289 = _tmp285 * _tmp287;
  const Scalar _tmp290 =
      _tmp142 * _tmp289 + _tmp154 * _tmp288 + _tmp155 * landmarks_4_ + _tmp287 * _tmp55;
  const Scalar _tmp291 =
      _tmp157 * _tmp288 + _tmp158 * _tmp289 + _tmp159 * landmarks_4_ + _tmp287 * _tmp54;
  const Scalar _tmp292 =
      _tmp161 * _tmp289 + _tmp162 * _tmp288 + _tmp163 * landmarks_4_ + _tmp287 * _tmp56;
  const Scalar _tmp293 = _tmp118 * _tmp291 + _tmp120 * _tmp292;
  const Scalar _tmp294 = _tmp114 * _tmp290 + _tmp293;
  const Scalar _tmp295 = _tmp125 * _tmp292 + _tmp128 * _tmp290;
  const Scalar _tmp296 = _tmp127 * _tmp291 + _tmp295;
  const Scalar _tmp297 = std::max<Scalar>(_tmp296, epsilon);
  const Scalar _tmp298 = Scalar(1.0) / (_tmp297);
  const Scalar _tmp299 = _tmp298 * _views_1_calibration[0];
  const Scalar _tmp300 =
      _tmp294 * _tmp299 + _views_1_calibration[2] - matches_0_4_target_coords(0, 0);
  const Scalar _tmp301 = _tmp107 * _tmp290 + _tmp291 * _tmp95;
  const Scalar _tmp302 = _tmp103 * _tmp292 + _tmp301;
  const Scalar _tmp303 = _tmp298 * _views_1_calibration[1];
  const Scalar _tmp304 =
      _tmp302 * _tmp303 + _views_1_calibration[3] - matches_0_4_target_coords(1, 0);
  const Scalar _tmp305 = std::pow(_tmp300, Scalar(2)) + std::pow(_tmp304, Scalar(2)) + epsilon;
  const Scalar _tmp306 = std::pow(_tmp305, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp307 = std::sqrt(matches_0_4_weight);
  const Scalar _tmp308 = std::max<Scalar>(0, (((_tmp296) > 0) - ((_tmp296) < 0)));
  const Scalar _tmp309 = _tmp184 * _tmp305 + 1;
  const Scalar _tmp310 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp309, _tmp188) - 1)));
  const Scalar _tmp311 = _tmp307 * _tmp308 * _tmp310;
  const Scalar _tmp312 = _tmp306 * _tmp311;
  const Scalar _tmp313 = _tmp300 * _tmp312;
  const Scalar _tmp314 = _tmp304 * _tmp312;
  const Scalar _tmp315 = _tmp143 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp316 = _tmp146 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp317 = std::pow(Scalar(_tmp145 * std::pow(_tmp315, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp316, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp318 = _tmp316 * _tmp317;
  const Scalar _tmp319 = _tmp315 * _tmp317;
  const Scalar _tmp320 =
      _tmp142 * _tmp318 + _tmp154 * _tmp319 + _tmp155 * landmarks_5_ + _tmp317 * _tmp55;
  const Scalar _tmp321 =
      _tmp161 * _tmp318 + _tmp162 * _tmp319 + _tmp163 * landmarks_5_ + _tmp317 * _tmp56;
  const Scalar _tmp322 =
      _tmp157 * _tmp319 + _tmp158 * _tmp318 + _tmp159 * landmarks_5_ + _tmp317 * _tmp54;
  const Scalar _tmp323 = _tmp118 * _tmp322 + _tmp120 * _tmp321;
  const Scalar _tmp324 = _tmp114 * _tmp320 + _tmp323;
  const Scalar _tmp325 = _tmp125 * _tmp321 + _tmp128 * _tmp320;
  const Scalar _tmp326 = _tmp127 * _tmp322 + _tmp325;
  const Scalar _tmp327 = std::max<Scalar>(_tmp326, epsilon);
  const Scalar _tmp328 = Scalar(1.0) / (_tmp327);
  const Scalar _tmp329 = _tmp328 * _views_1_calibration[0];
  const Scalar _tmp330 =
      _tmp324 * _tmp329 + _views_1_calibration[2] - matches_0_5_target_coords(0, 0);
  const Scalar _tmp331 = _tmp107 * _tmp320 + _tmp322 * _tmp95;
  const Scalar _tmp332 = _tmp103 * _tmp321 + _tmp331;
  const Scalar _tmp333 = _tmp328 * _views_1_calibration[1];
  const Scalar _tmp334 =
      _tmp332 * _tmp333 + _views_1_calibration[3] - matches_0_5_target_coords(1, 0);
  const Scalar _tmp335 = std::pow(_tmp330, Scalar(2)) + std::pow(_tmp334, Scalar(2)) + epsilon;
  const Scalar _tmp336 = std::pow(_tmp335, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp337 = _tmp184 * _tmp335 + 1;
  const Scalar _tmp338 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp337, _tmp188) - 1)));
  const Scalar _tmp339 = std::max<Scalar>(0, (((_tmp326) > 0) - ((_tmp326) < 0)));
  const Scalar _tmp340 = std::sqrt(matches_0_5_weight);
  const Scalar _tmp341 = _tmp338 * _tmp339 * _tmp340;
  const Scalar _tmp342 = _tmp336 * _tmp341;
  const Scalar _tmp343 = _tmp330 * _tmp342;
  const Scalar _tmp344 = _tmp334 * _tmp342;
  const Scalar _tmp345 = _tmp146 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp346 = _tmp143 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp347 = std::pow(Scalar(_tmp145 * std::pow(_tmp346, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp345, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp348 = _tmp346 * _tmp347;
  const Scalar _tmp349 = _tmp345 * _tmp347;
  const Scalar _tmp350 =
      _tmp142 * _tmp349 + _tmp154 * _tmp348 + _tmp155 * landmarks_6_ + _tmp347 * _tmp55;
  const Scalar _tmp351 =
      _tmp157 * _tmp348 + _tmp158 * _tmp349 + _tmp159 * landmarks_6_ + _tmp347 * _tmp54;
  const Scalar _tmp352 =
      _tmp161 * _tmp349 + _tmp162 * _tmp348 + _tmp163 * landmarks_6_ + _tmp347 * _tmp56;
  const Scalar _tmp353 = _tmp118 * _tmp351 + _tmp120 * _tmp352;
  const Scalar _tmp354 = _tmp114 * _tmp350 + _tmp353;
  const Scalar _tmp355 = _tmp125 * _tmp352 + _tmp128 * _tmp350;
  const Scalar _tmp356 = _tmp127 * _tmp351 + _tmp355;
  const Scalar _tmp357 = std::max<Scalar>(_tmp356, epsilon);
  const Scalar _tmp358 = Scalar(1.0) / (_tmp357);
  const Scalar _tmp359 = _tmp358 * _views_1_calibration[0];
  const Scalar _tmp360 =
      _tmp354 * _tmp359 + _views_1_calibration[2] - matches_0_6_target_coords(0, 0);
  const Scalar _tmp361 = _tmp107 * _tmp350 + _tmp351 * _tmp95;
  const Scalar _tmp362 = _tmp103 * _tmp352 + _tmp361;
  const Scalar _tmp363 = _tmp358 * _views_1_calibration[1];
  const Scalar _tmp364 =
      _tmp362 * _tmp363 + _views_1_calibration[3] - matches_0_6_target_coords(1, 0);
  const Scalar _tmp365 = std::pow(_tmp360, Scalar(2)) + std::pow(_tmp364, Scalar(2)) + epsilon;
  const Scalar _tmp366 = std::pow(_tmp365, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp367 = std::sqrt(matches_0_6_weight);
  const Scalar _tmp368 = std::max<Scalar>(0, (((_tmp356) > 0) - ((_tmp356) < 0)));
  const Scalar _tmp369 = _tmp184 * _tmp365 + 1;
  const Scalar _tmp370 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp369, _tmp188) - 1)));
  const Scalar _tmp371 = _tmp367 * _tmp368 * _tmp370;
  const Scalar _tmp372 = _tmp366 * _tmp371;
  const Scalar _tmp373 = _tmp360 * _tmp372;
  const Scalar _tmp374 = _tmp364 * _tmp372;
  const Scalar _tmp375 = _tmp146 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp376 = _tmp143 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp377 = std::pow(Scalar(_tmp145 * std::pow(_tmp376, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp375, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp378 = _tmp375 * _tmp377;
  const Scalar _tmp379 = _tmp376 * _tmp377;
  const Scalar _tmp380 =
      _tmp142 * _tmp378 + _tmp154 * _tmp379 + _tmp155 * landmarks_7_ + _tmp377 * _tmp55;
  const Scalar _tmp381 =
      _tmp161 * _tmp378 + _tmp162 * _tmp379 + _tmp163 * landmarks_7_ + _tmp377 * _tmp56;
  const Scalar _tmp382 =
      _tmp157 * _tmp379 + _tmp158 * _tmp378 + _tmp159 * landmarks_7_ + _tmp377 * _tmp54;
  const Scalar _tmp383 = _tmp118 * _tmp382 + _tmp120 * _tmp381;
  const Scalar _tmp384 = _tmp114 * _tmp380 + _tmp383;
  const Scalar _tmp385 = _tmp125 * _tmp381 + _tmp128 * _tmp380;
  const Scalar _tmp386 = _tmp127 * _tmp382 + _tmp385;
  const Scalar _tmp387 = std::max<Scalar>(_tmp386, epsilon);
  const Scalar _tmp388 = Scalar(1.0) / (_tmp387);
  const Scalar _tmp389 = _tmp388 * _views_1_calibration[0];
  const Scalar _tmp390 =
      _tmp384 * _tmp389 + _views_1_calibration[2] - matches_0_7_target_coords(0, 0);
  const Scalar _tmp391 = _tmp107 * _tmp380 + _tmp382 * _tmp95;
  const Scalar _tmp392 = _tmp103 * _tmp381 + _tmp391;
  const Scalar _tmp393 = _tmp388 * _views_1_calibration[1];
  const Scalar _tmp394 =
      _tmp392 * _tmp393 + _views_1_calibration[3] - matches_0_7_target_coords(1, 0);
  const Scalar _tmp395 = std::pow(_tmp390, Scalar(2)) + std::pow(_tmp394, Scalar(2)) + epsilon;
  const Scalar _tmp396 = std::pow(_tmp395, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp397 = _tmp184 * _tmp395 + 1;
  const Scalar _tmp398 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp397, _tmp188) - 1)));
  const Scalar _tmp399 = std::sqrt(matches_0_7_weight);
  const Scalar _tmp400 = std::max<Scalar>(0, (((_tmp386) > 0) - ((_tmp386) < 0)));
  const Scalar _tmp401 = _tmp398 * _tmp399 * _tmp400;
  const Scalar _tmp402 = _tmp396 * _tmp401;
  const Scalar _tmp403 = _tmp390 * _tmp402;
  const Scalar _tmp404 = _tmp394 * _tmp402;
  const Scalar _tmp405 = _tmp146 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp406 = _tmp143 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp407 = std::pow(Scalar(_tmp145 * std::pow(_tmp406, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp405, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp408 = _tmp405 * _tmp407;
  const Scalar _tmp409 = _tmp406 * _tmp407;
  const Scalar _tmp410 =
      _tmp142 * _tmp408 + _tmp154 * _tmp409 + _tmp155 * landmarks_8_ + _tmp407 * _tmp55;
  const Scalar _tmp411 =
      _tmp157 * _tmp409 + _tmp158 * _tmp408 + _tmp159 * landmarks_8_ + _tmp407 * _tmp54;
  const Scalar _tmp412 =
      _tmp161 * _tmp408 + _tmp162 * _tmp409 + _tmp163 * landmarks_8_ + _tmp407 * _tmp56;
  const Scalar _tmp413 = _tmp118 * _tmp411 + _tmp120 * _tmp412;
  const Scalar _tmp414 = _tmp114 * _tmp410 + _tmp413;
  const Scalar _tmp415 = _tmp125 * _tmp412 + _tmp128 * _tmp410;
  const Scalar _tmp416 = _tmp127 * _tmp411 + _tmp415;
  const Scalar _tmp417 = std::max<Scalar>(_tmp416, epsilon);
  const Scalar _tmp418 = Scalar(1.0) / (_tmp417);
  const Scalar _tmp419 = _tmp418 * _views_1_calibration[0];
  const Scalar _tmp420 =
      _tmp414 * _tmp419 + _views_1_calibration[2] - matches_0_8_target_coords(0, 0);
  const Scalar _tmp421 = _tmp107 * _tmp410 + _tmp411 * _tmp95;
  const Scalar _tmp422 = _tmp103 * _tmp412 + _tmp421;
  const Scalar _tmp423 = _tmp418 * _views_1_calibration[1];
  const Scalar _tmp424 =
      _tmp422 * _tmp423 + _views_1_calibration[3] - matches_0_8_target_coords(1, 0);
  const Scalar _tmp425 = std::pow(_tmp420, Scalar(2)) + std::pow(_tmp424, Scalar(2)) + epsilon;
  const Scalar _tmp426 = std::pow(_tmp425, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp427 = std::sqrt(matches_0_8_weight);
  const Scalar _tmp428 = _tmp184 * _tmp425 + 1;
  const Scalar _tmp429 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp428, _tmp188) - 1)));
  const Scalar _tmp430 = std::max<Scalar>(0, (((_tmp416) > 0) - ((_tmp416) < 0)));
  const Scalar _tmp431 = _tmp427 * _tmp429 * _tmp430;
  const Scalar _tmp432 = _tmp426 * _tmp431;
  const Scalar _tmp433 = _tmp420 * _tmp432;
  const Scalar _tmp434 = _tmp424 * _tmp432;
  const Scalar _tmp435 = _tmp146 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp436 = _tmp143 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp437 = std::pow(Scalar(_tmp145 * std::pow(_tmp436, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp435, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp438 = _tmp435 * _tmp437;
  const Scalar _tmp439 = _tmp436 * _tmp437;
  const Scalar _tmp440 =
      _tmp142 * _tmp438 + _tmp154 * _tmp439 + _tmp155 * landmarks_9_ + _tmp437 * _tmp55;
  const Scalar _tmp441 =
      _tmp161 * _tmp438 + _tmp162 * _tmp439 + _tmp163 * landmarks_9_ + _tmp437 * _tmp56;
  const Scalar _tmp442 =
      _tmp157 * _tmp439 + _tmp158 * _tmp438 + _tmp159 * landmarks_9_ + _tmp437 * _tmp54;
  const Scalar _tmp443 = _tmp118 * _tmp442 + _tmp120 * _tmp441;
  const Scalar _tmp444 = _tmp114 * _tmp440 + _tmp443;
  const Scalar _tmp445 = _tmp125 * _tmp441 + _tmp128 * _tmp440;
  const Scalar _tmp446 = _tmp127 * _tmp442 + _tmp445;
  const Scalar _tmp447 = std::max<Scalar>(_tmp446, epsilon);
  const Scalar _tmp448 = Scalar(1.0) / (_tmp447);
  const Scalar _tmp449 = _tmp448 * _views_1_calibration[0];
  const Scalar _tmp450 =
      _tmp444 * _tmp449 + _views_1_calibration[2] - matches_0_9_target_coords(0, 0);
  const Scalar _tmp451 = _tmp107 * _tmp440 + _tmp442 * _tmp95;
  const Scalar _tmp452 = _tmp103 * _tmp441 + _tmp451;
  const Scalar _tmp453 = _tmp448 * _views_1_calibration[1];
  const Scalar _tmp454 =
      _tmp452 * _tmp453 + _views_1_calibration[3] - matches_0_9_target_coords(1, 0);
  const Scalar _tmp455 = std::pow(_tmp450, Scalar(2)) + std::pow(_tmp454, Scalar(2)) + epsilon;
  const Scalar _tmp456 = std::pow(_tmp455, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp457 = std::sqrt(matches_0_9_weight);
  const Scalar _tmp458 = _tmp184 * _tmp455 + 1;
  const Scalar _tmp459 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp458, _tmp188) - 1)));
  const Scalar _tmp460 = std::max<Scalar>(0, (((_tmp446) > 0) - ((_tmp446) < 0)));
  const Scalar _tmp461 = _tmp457 * _tmp459 * _tmp460;
  const Scalar _tmp462 = _tmp456 * _tmp461;
  const Scalar _tmp463 = _tmp450 * _tmp462;
  const Scalar _tmp464 = _tmp454 * _tmp462;
  const Scalar _tmp465 = _tmp146 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp466 = _tmp143 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp467 = std::pow(Scalar(_tmp145 * std::pow(_tmp466, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp465, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp468 = _tmp466 * _tmp467;
  const Scalar _tmp469 = _tmp465 * _tmp467;
  const Scalar _tmp470 =
      _tmp142 * _tmp469 + _tmp154 * _tmp468 + _tmp155 * landmarks_10_ + _tmp467 * _tmp55;
  const Scalar _tmp471 =
      _tmp157 * _tmp468 + _tmp158 * _tmp469 + _tmp159 * landmarks_10_ + _tmp467 * _tmp54;
  const Scalar _tmp472 =
      _tmp161 * _tmp469 + _tmp162 * _tmp468 + _tmp163 * landmarks_10_ + _tmp467 * _tmp56;
  const Scalar _tmp473 = _tmp118 * _tmp471 + _tmp120 * _tmp472;
  const Scalar _tmp474 = _tmp114 * _tmp470 + _tmp473;
  const Scalar _tmp475 = _tmp125 * _tmp472 + _tmp128 * _tmp470;
  const Scalar _tmp476 = _tmp127 * _tmp471 + _tmp475;
  const Scalar _tmp477 = std::max<Scalar>(_tmp476, epsilon);
  const Scalar _tmp478 = Scalar(1.0) / (_tmp477);
  const Scalar _tmp479 = _tmp478 * _views_1_calibration[0];
  const Scalar _tmp480 =
      _tmp474 * _tmp479 + _views_1_calibration[2] - matches_0_10_target_coords(0, 0);
  const Scalar _tmp481 = _tmp107 * _tmp470 + _tmp471 * _tmp95;
  const Scalar _tmp482 = _tmp103 * _tmp472 + _tmp481;
  const Scalar _tmp483 = _tmp478 * _views_1_calibration[1];
  const Scalar _tmp484 =
      _tmp482 * _tmp483 + _views_1_calibration[3] - matches_0_10_target_coords(1, 0);
  const Scalar _tmp485 = std::pow(_tmp480, Scalar(2)) + std::pow(_tmp484, Scalar(2)) + epsilon;
  const Scalar _tmp486 = std::pow(_tmp485, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp487 = _tmp184 * _tmp485 + 1;
  const Scalar _tmp488 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp487, _tmp188) - 1)));
  const Scalar _tmp489 = std::sqrt(matches_0_10_weight);
  const Scalar _tmp490 = std::max<Scalar>(0, (((_tmp476) > 0) - ((_tmp476) < 0)));
  const Scalar _tmp491 = _tmp488 * _tmp489 * _tmp490;
  const Scalar _tmp492 = _tmp486 * _tmp491;
  const Scalar _tmp493 = _tmp480 * _tmp492;
  const Scalar _tmp494 = _tmp484 * _tmp492;
  const Scalar _tmp495 = _tmp146 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp496 = _tmp143 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp497 = std::pow(Scalar(_tmp145 * std::pow(_tmp496, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp495, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp498 = _tmp496 * _tmp497;
  const Scalar _tmp499 = _tmp495 * _tmp497;
  const Scalar _tmp500 =
      _tmp142 * _tmp499 + _tmp154 * _tmp498 + _tmp155 * landmarks_11_ + _tmp497 * _tmp55;
  const Scalar _tmp501 =
      _tmp157 * _tmp498 + _tmp158 * _tmp499 + _tmp159 * landmarks_11_ + _tmp497 * _tmp54;
  const Scalar _tmp502 =
      _tmp161 * _tmp499 + _tmp162 * _tmp498 + _tmp163 * landmarks_11_ + _tmp497 * _tmp56;
  const Scalar _tmp503 = _tmp118 * _tmp501 + _tmp120 * _tmp502;
  const Scalar _tmp504 = _tmp114 * _tmp500 + _tmp503;
  const Scalar _tmp505 = _tmp125 * _tmp502 + _tmp128 * _tmp500;
  const Scalar _tmp506 = _tmp127 * _tmp501 + _tmp505;
  const Scalar _tmp507 = std::max<Scalar>(_tmp506, epsilon);
  const Scalar _tmp508 = Scalar(1.0) / (_tmp507);
  const Scalar _tmp509 = _tmp508 * _views_1_calibration[0];
  const Scalar _tmp510 =
      _tmp504 * _tmp509 + _views_1_calibration[2] - matches_0_11_target_coords(0, 0);
  const Scalar _tmp511 = _tmp107 * _tmp500 + _tmp501 * _tmp95;
  const Scalar _tmp512 = _tmp103 * _tmp502 + _tmp511;
  const Scalar _tmp513 = _tmp508 * _views_1_calibration[1];
  const Scalar _tmp514 =
      _tmp512 * _tmp513 + _views_1_calibration[3] - matches_0_11_target_coords(1, 0);
  const Scalar _tmp515 = std::pow(_tmp510, Scalar(2)) + std::pow(_tmp514, Scalar(2)) + epsilon;
  const Scalar _tmp516 = std::pow(_tmp515, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp517 = std::sqrt(matches_0_11_weight);
  const Scalar _tmp518 = _tmp184 * _tmp515 + 1;
  const Scalar _tmp519 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp518, _tmp188) - 1)));
  const Scalar _tmp520 = std::max<Scalar>(0, (((_tmp506) > 0) - ((_tmp506) < 0)));
  const Scalar _tmp521 = _tmp517 * _tmp519 * _tmp520;
  const Scalar _tmp522 = _tmp516 * _tmp521;
  const Scalar _tmp523 = _tmp510 * _tmp522;
  const Scalar _tmp524 = _tmp514 * _tmp522;
  const Scalar _tmp525 = _tmp143 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp526 = _tmp146 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp527 = std::pow(Scalar(_tmp145 * std::pow(_tmp525, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp526, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp528 = _tmp525 * _tmp527;
  const Scalar _tmp529 = _tmp526 * _tmp527;
  const Scalar _tmp530 =
      _tmp142 * _tmp529 + _tmp154 * _tmp528 + _tmp155 * landmarks_12_ + _tmp527 * _tmp55;
  const Scalar _tmp531 =
      _tmp161 * _tmp529 + _tmp162 * _tmp528 + _tmp163 * landmarks_12_ + _tmp527 * _tmp56;
  const Scalar _tmp532 =
      _tmp157 * _tmp528 + _tmp158 * _tmp529 + _tmp159 * landmarks_12_ + _tmp527 * _tmp54;
  const Scalar _tmp533 = _tmp118 * _tmp532 + _tmp120 * _tmp531;
  const Scalar _tmp534 = _tmp114 * _tmp530 + _tmp533;
  const Scalar _tmp535 = _tmp125 * _tmp531 + _tmp128 * _tmp530;
  const Scalar _tmp536 = _tmp127 * _tmp532 + _tmp535;
  const Scalar _tmp537 = std::max<Scalar>(_tmp536, epsilon);
  const Scalar _tmp538 = Scalar(1.0) / (_tmp537);
  const Scalar _tmp539 = _tmp538 * _views_1_calibration[0];
  const Scalar _tmp540 =
      _tmp534 * _tmp539 + _views_1_calibration[2] - matches_0_12_target_coords(0, 0);
  const Scalar _tmp541 = _tmp107 * _tmp530 + _tmp532 * _tmp95;
  const Scalar _tmp542 = _tmp103 * _tmp531 + _tmp541;
  const Scalar _tmp543 = _tmp538 * _views_1_calibration[1];
  const Scalar _tmp544 =
      _tmp542 * _tmp543 + _views_1_calibration[3] - matches_0_12_target_coords(1, 0);
  const Scalar _tmp545 = std::pow(_tmp540, Scalar(2)) + std::pow(_tmp544, Scalar(2)) + epsilon;
  const Scalar _tmp546 = std::pow(_tmp545, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp547 = _tmp184 * _tmp545 + 1;
  const Scalar _tmp548 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp547, _tmp188) - 1)));
  const Scalar _tmp549 = std::sqrt(matches_0_12_weight);
  const Scalar _tmp550 = std::max<Scalar>(0, (((_tmp536) > 0) - ((_tmp536) < 0)));
  const Scalar _tmp551 = _tmp548 * _tmp549 * _tmp550;
  const Scalar _tmp552 = _tmp546 * _tmp551;
  const Scalar _tmp553 = _tmp540 * _tmp552;
  const Scalar _tmp554 = _tmp544 * _tmp552;
  const Scalar _tmp555 = _tmp146 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp556 = _tmp143 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp557 = std::pow(Scalar(_tmp145 * std::pow(_tmp556, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp555, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp558 = _tmp556 * _tmp557;
  const Scalar _tmp559 = _tmp555 * _tmp557;
  const Scalar _tmp560 =
      _tmp142 * _tmp559 + _tmp154 * _tmp558 + _tmp155 * landmarks_13_ + _tmp55 * _tmp557;
  const Scalar _tmp561 =
      _tmp161 * _tmp559 + _tmp162 * _tmp558 + _tmp163 * landmarks_13_ + _tmp557 * _tmp56;
  const Scalar _tmp562 =
      _tmp157 * _tmp558 + _tmp158 * _tmp559 + _tmp159 * landmarks_13_ + _tmp54 * _tmp557;
  const Scalar _tmp563 = _tmp118 * _tmp562 + _tmp120 * _tmp561;
  const Scalar _tmp564 = _tmp114 * _tmp560 + _tmp563;
  const Scalar _tmp565 = _tmp125 * _tmp561 + _tmp128 * _tmp560;
  const Scalar _tmp566 = _tmp127 * _tmp562 + _tmp565;
  const Scalar _tmp567 = std::max<Scalar>(_tmp566, epsilon);
  const Scalar _tmp568 = Scalar(1.0) / (_tmp567);
  const Scalar _tmp569 = _tmp568 * _views_1_calibration[0];
  const Scalar _tmp570 =
      _tmp564 * _tmp569 + _views_1_calibration[2] - matches_0_13_target_coords(0, 0);
  const Scalar _tmp571 = _tmp107 * _tmp560 + _tmp562 * _tmp95;
  const Scalar _tmp572 = _tmp103 * _tmp561 + _tmp571;
  const Scalar _tmp573 = _tmp568 * _views_1_calibration[1];
  const Scalar _tmp574 =
      _tmp572 * _tmp573 + _views_1_calibration[3] - matches_0_13_target_coords(1, 0);
  const Scalar _tmp575 = std::pow(_tmp570, Scalar(2)) + std::pow(_tmp574, Scalar(2)) + epsilon;
  const Scalar _tmp576 = std::pow(_tmp575, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp577 = std::max<Scalar>(0, (((_tmp566) > 0) - ((_tmp566) < 0)));
  const Scalar _tmp578 = _tmp184 * _tmp575 + 1;
  const Scalar _tmp579 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp578, _tmp188) - 1)));
  const Scalar _tmp580 = std::sqrt(matches_0_13_weight);
  const Scalar _tmp581 = _tmp577 * _tmp579 * _tmp580;
  const Scalar _tmp582 = _tmp576 * _tmp581;
  const Scalar _tmp583 = _tmp570 * _tmp582;
  const Scalar _tmp584 = _tmp574 * _tmp582;
  const Scalar _tmp585 = _tmp146 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp586 = _tmp143 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp587 = std::pow(Scalar(_tmp145 * std::pow(_tmp586, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp585, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp588 = _tmp586 * _tmp587;
  const Scalar _tmp589 = _tmp585 * _tmp587;
  const Scalar _tmp590 =
      _tmp142 * _tmp589 + _tmp154 * _tmp588 + _tmp155 * landmarks_14_ + _tmp55 * _tmp587;
  const Scalar _tmp591 =
      _tmp161 * _tmp589 + _tmp162 * _tmp588 + _tmp163 * landmarks_14_ + _tmp56 * _tmp587;
  const Scalar _tmp592 =
      _tmp157 * _tmp588 + _tmp158 * _tmp589 + _tmp159 * landmarks_14_ + _tmp54 * _tmp587;
  const Scalar _tmp593 = _tmp118 * _tmp592 + _tmp120 * _tmp591;
  const Scalar _tmp594 = _tmp114 * _tmp590 + _tmp593;
  const Scalar _tmp595 = _tmp125 * _tmp591 + _tmp128 * _tmp590;
  const Scalar _tmp596 = _tmp127 * _tmp592 + _tmp595;
  const Scalar _tmp597 = std::max<Scalar>(_tmp596, epsilon);
  const Scalar _tmp598 = Scalar(1.0) / (_tmp597);
  const Scalar _tmp599 = _tmp598 * _views_1_calibration[0];
  const Scalar _tmp600 =
      _tmp594 * _tmp599 + _views_1_calibration[2] - matches_0_14_target_coords(0, 0);
  const Scalar _tmp601 = _tmp107 * _tmp590 + _tmp592 * _tmp95;
  const Scalar _tmp602 = _tmp103 * _tmp591 + _tmp601;
  const Scalar _tmp603 = _tmp598 * _views_1_calibration[1];
  const Scalar _tmp604 =
      _tmp602 * _tmp603 + _views_1_calibration[3] - matches_0_14_target_coords(1, 0);
  const Scalar _tmp605 = std::pow(_tmp600, Scalar(2)) + std::pow(_tmp604, Scalar(2)) + epsilon;
  const Scalar _tmp606 = std::pow(_tmp605, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp607 = std::max<Scalar>(0, (((_tmp596) > 0) - ((_tmp596) < 0)));
  const Scalar _tmp608 = _tmp184 * _tmp605 + 1;
  const Scalar _tmp609 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp608, _tmp188) - 1)));
  const Scalar _tmp610 = std::sqrt(matches_0_14_weight);
  const Scalar _tmp611 = _tmp607 * _tmp609 * _tmp610;
  const Scalar _tmp612 = _tmp606 * _tmp611;
  const Scalar _tmp613 = _tmp600 * _tmp612;
  const Scalar _tmp614 = _tmp604 * _tmp612;
  const Scalar _tmp615 = _tmp143 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp616 = _tmp146 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp617 = std::pow(Scalar(_tmp145 * std::pow(_tmp615, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp616, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp618 = _tmp615 * _tmp617;
  const Scalar _tmp619 = _tmp616 * _tmp617;
  const Scalar _tmp620 =
      _tmp142 * _tmp619 + _tmp154 * _tmp618 + _tmp155 * landmarks_15_ + _tmp55 * _tmp617;
  const Scalar _tmp621 =
      _tmp161 * _tmp619 + _tmp162 * _tmp618 + _tmp163 * landmarks_15_ + _tmp56 * _tmp617;
  const Scalar _tmp622 =
      _tmp157 * _tmp618 + _tmp158 * _tmp619 + _tmp159 * landmarks_15_ + _tmp54 * _tmp617;
  const Scalar _tmp623 = _tmp118 * _tmp622 + _tmp120 * _tmp621;
  const Scalar _tmp624 = _tmp114 * _tmp620 + _tmp623;
  const Scalar _tmp625 = _tmp125 * _tmp621 + _tmp128 * _tmp620;
  const Scalar _tmp626 = _tmp127 * _tmp622 + _tmp625;
  const Scalar _tmp627 = std::max<Scalar>(_tmp626, epsilon);
  const Scalar _tmp628 = Scalar(1.0) / (_tmp627);
  const Scalar _tmp629 = _tmp628 * _views_1_calibration[0];
  const Scalar _tmp630 =
      _tmp624 * _tmp629 + _views_1_calibration[2] - matches_0_15_target_coords(0, 0);
  const Scalar _tmp631 = _tmp107 * _tmp620 + _tmp622 * _tmp95;
  const Scalar _tmp632 = _tmp103 * _tmp621 + _tmp631;
  const Scalar _tmp633 = _tmp628 * _views_1_calibration[1];
  const Scalar _tmp634 =
      _tmp632 * _tmp633 + _views_1_calibration[3] - matches_0_15_target_coords(1, 0);
  const Scalar _tmp635 = std::pow(_tmp630, Scalar(2)) + std::pow(_tmp634, Scalar(2)) + epsilon;
  const Scalar _tmp636 = std::pow(_tmp635, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp637 = std::sqrt(matches_0_15_weight);
  const Scalar _tmp638 = _tmp184 * _tmp635 + 1;
  const Scalar _tmp639 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp638, _tmp188) - 1)));
  const Scalar _tmp640 = std::max<Scalar>(0, (((_tmp626) > 0) - ((_tmp626) < 0)));
  const Scalar _tmp641 = _tmp637 * _tmp639 * _tmp640;
  const Scalar _tmp642 = _tmp636 * _tmp641;
  const Scalar _tmp643 = _tmp630 * _tmp642;
  const Scalar _tmp644 = _tmp634 * _tmp642;
  const Scalar _tmp645 = _tmp146 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp646 = _tmp143 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp647 = std::pow(Scalar(_tmp145 * std::pow(_tmp646, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp645, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp648 = _tmp646 * _tmp647;
  const Scalar _tmp649 = _tmp645 * _tmp647;
  const Scalar _tmp650 =
      _tmp142 * _tmp649 + _tmp154 * _tmp648 + _tmp155 * landmarks_16_ + _tmp55 * _tmp647;
  const Scalar _tmp651 =
      _tmp161 * _tmp649 + _tmp162 * _tmp648 + _tmp163 * landmarks_16_ + _tmp56 * _tmp647;
  const Scalar _tmp652 =
      _tmp157 * _tmp648 + _tmp158 * _tmp649 + _tmp159 * landmarks_16_ + _tmp54 * _tmp647;
  const Scalar _tmp653 = _tmp118 * _tmp652 + _tmp120 * _tmp651;
  const Scalar _tmp654 = _tmp114 * _tmp650 + _tmp653;
  const Scalar _tmp655 = _tmp125 * _tmp651 + _tmp128 * _tmp650;
  const Scalar _tmp656 = _tmp127 * _tmp652 + _tmp655;
  const Scalar _tmp657 = std::max<Scalar>(_tmp656, epsilon);
  const Scalar _tmp658 = Scalar(1.0) / (_tmp657);
  const Scalar _tmp659 = _tmp658 * _views_1_calibration[0];
  const Scalar _tmp660 =
      _tmp654 * _tmp659 + _views_1_calibration[2] - matches_0_16_target_coords(0, 0);
  const Scalar _tmp661 = _tmp107 * _tmp650 + _tmp652 * _tmp95;
  const Scalar _tmp662 = _tmp103 * _tmp651 + _tmp661;
  const Scalar _tmp663 = _tmp658 * _views_1_calibration[1];
  const Scalar _tmp664 =
      _tmp662 * _tmp663 + _views_1_calibration[3] - matches_0_16_target_coords(1, 0);
  const Scalar _tmp665 = std::pow(_tmp660, Scalar(2)) + std::pow(_tmp664, Scalar(2)) + epsilon;
  const Scalar _tmp666 = std::pow(_tmp665, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp667 = std::max<Scalar>(0, (((_tmp656) > 0) - ((_tmp656) < 0)));
  const Scalar _tmp668 = _tmp184 * _tmp665 + 1;
  const Scalar _tmp669 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp668, _tmp188) - 1)));
  const Scalar _tmp670 = std::sqrt(matches_0_16_weight);
  const Scalar _tmp671 = _tmp667 * _tmp669 * _tmp670;
  const Scalar _tmp672 = _tmp666 * _tmp671;
  const Scalar _tmp673 = _tmp660 * _tmp672;
  const Scalar _tmp674 = _tmp664 * _tmp672;
  const Scalar _tmp675 = _tmp146 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp676 = _tmp143 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp677 = std::pow(Scalar(_tmp145 * std::pow(_tmp676, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp675, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp678 = _tmp676 * _tmp677;
  const Scalar _tmp679 = _tmp675 * _tmp677;
  const Scalar _tmp680 =
      _tmp142 * _tmp679 + _tmp154 * _tmp678 + _tmp155 * landmarks_17_ + _tmp55 * _tmp677;
  const Scalar _tmp681 =
      _tmp161 * _tmp679 + _tmp162 * _tmp678 + _tmp163 * landmarks_17_ + _tmp56 * _tmp677;
  const Scalar _tmp682 =
      _tmp157 * _tmp678 + _tmp158 * _tmp679 + _tmp159 * landmarks_17_ + _tmp54 * _tmp677;
  const Scalar _tmp683 = _tmp118 * _tmp682 + _tmp120 * _tmp681;
  const Scalar _tmp684 = _tmp114 * _tmp680 + _tmp683;
  const Scalar _tmp685 = _tmp125 * _tmp681 + _tmp128 * _tmp680;
  const Scalar _tmp686 = _tmp127 * _tmp682 + _tmp685;
  const Scalar _tmp687 = std::max<Scalar>(_tmp686, epsilon);
  const Scalar _tmp688 = Scalar(1.0) / (_tmp687);
  const Scalar _tmp689 = _tmp688 * _views_1_calibration[0];
  const Scalar _tmp690 =
      _tmp684 * _tmp689 + _views_1_calibration[2] - matches_0_17_target_coords(0, 0);
  const Scalar _tmp691 = _tmp107 * _tmp680 + _tmp682 * _tmp95;
  const Scalar _tmp692 = _tmp103 * _tmp681 + _tmp691;
  const Scalar _tmp693 = _tmp688 * _views_1_calibration[1];
  const Scalar _tmp694 =
      _tmp692 * _tmp693 + _views_1_calibration[3] - matches_0_17_target_coords(1, 0);
  const Scalar _tmp695 = std::pow(_tmp690, Scalar(2)) + std::pow(_tmp694, Scalar(2)) + epsilon;
  const Scalar _tmp696 = std::pow(_tmp695, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp697 = std::max<Scalar>(0, (((_tmp686) > 0) - ((_tmp686) < 0)));
  const Scalar _tmp698 = std::sqrt(matches_0_17_weight);
  const Scalar _tmp699 = _tmp184 * _tmp695 + 1;
  const Scalar _tmp700 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp699, _tmp188) - 1)));
  const Scalar _tmp701 = _tmp697 * _tmp698 * _tmp700;
  const Scalar _tmp702 = _tmp696 * _tmp701;
  const Scalar _tmp703 = _tmp690 * _tmp702;
  const Scalar _tmp704 = _tmp694 * _tmp702;
  const Scalar _tmp705 = _tmp143 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp706 = _tmp146 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp707 = std::pow(Scalar(_tmp145 * std::pow(_tmp705, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp706, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp708 = _tmp705 * _tmp707;
  const Scalar _tmp709 = _tmp706 * _tmp707;
  const Scalar _tmp710 =
      _tmp142 * _tmp709 + _tmp154 * _tmp708 + _tmp155 * landmarks_18_ + _tmp55 * _tmp707;
  const Scalar _tmp711 =
      _tmp157 * _tmp708 + _tmp158 * _tmp709 + _tmp159 * landmarks_18_ + _tmp54 * _tmp707;
  const Scalar _tmp712 =
      _tmp161 * _tmp709 + _tmp162 * _tmp708 + _tmp163 * landmarks_18_ + _tmp56 * _tmp707;
  const Scalar _tmp713 = _tmp118 * _tmp711 + _tmp120 * _tmp712;
  const Scalar _tmp714 = _tmp114 * _tmp710 + _tmp713;
  const Scalar _tmp715 = _tmp125 * _tmp712 + _tmp128 * _tmp710;
  const Scalar _tmp716 = _tmp127 * _tmp711 + _tmp715;
  const Scalar _tmp717 = std::max<Scalar>(_tmp716, epsilon);
  const Scalar _tmp718 = Scalar(1.0) / (_tmp717);
  const Scalar _tmp719 = _tmp718 * _views_1_calibration[0];
  const Scalar _tmp720 =
      _tmp714 * _tmp719 + _views_1_calibration[2] - matches_0_18_target_coords(0, 0);
  const Scalar _tmp721 = _tmp107 * _tmp710 + _tmp711 * _tmp95;
  const Scalar _tmp722 = _tmp103 * _tmp712 + _tmp721;
  const Scalar _tmp723 = _tmp718 * _views_1_calibration[1];
  const Scalar _tmp724 =
      _tmp722 * _tmp723 + _views_1_calibration[3] - matches_0_18_target_coords(1, 0);
  const Scalar _tmp725 = std::pow(_tmp720, Scalar(2)) + std::pow(_tmp724, Scalar(2)) + epsilon;
  const Scalar _tmp726 = std::pow(_tmp725, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp727 = std::sqrt(matches_0_18_weight);
  const Scalar _tmp728 = std::max<Scalar>(0, (((_tmp716) > 0) - ((_tmp716) < 0)));
  const Scalar _tmp729 = _tmp184 * _tmp725 + 1;
  const Scalar _tmp730 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp729, _tmp188) - 1)));
  const Scalar _tmp731 = _tmp727 * _tmp728 * _tmp730;
  const Scalar _tmp732 = _tmp726 * _tmp731;
  const Scalar _tmp733 = _tmp720 * _tmp732;
  const Scalar _tmp734 = _tmp724 * _tmp732;
  const Scalar _tmp735 = _tmp146 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp736 = _tmp143 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp737 = std::pow(Scalar(_tmp145 * std::pow(_tmp736, Scalar(2)) +
                                         _tmp148 * std::pow(_tmp735, Scalar(2)) + _tmp149),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp738 = _tmp736 * _tmp737;
  const Scalar _tmp739 = _tmp735 * _tmp737;
  const Scalar _tmp740 =
      _tmp142 * _tmp739 + _tmp154 * _tmp738 + _tmp155 * landmarks_19_ + _tmp55 * _tmp737;
  const Scalar _tmp741 =
      _tmp161 * _tmp739 + _tmp162 * _tmp738 + _tmp163 * landmarks_19_ + _tmp56 * _tmp737;
  const Scalar _tmp742 =
      _tmp157 * _tmp738 + _tmp158 * _tmp739 + _tmp159 * landmarks_19_ + _tmp54 * _tmp737;
  const Scalar _tmp743 = _tmp118 * _tmp742 + _tmp120 * _tmp741;
  const Scalar _tmp744 = _tmp114 * _tmp740 + _tmp743;
  const Scalar _tmp745 = _tmp125 * _tmp741 + _tmp128 * _tmp740;
  const Scalar _tmp746 = _tmp127 * _tmp742 + _tmp745;
  const Scalar _tmp747 = std::max<Scalar>(_tmp746, epsilon);
  const Scalar _tmp748 = Scalar(1.0) / (_tmp747);
  const Scalar _tmp749 = _tmp748 * _views_1_calibration[0];
  const Scalar _tmp750 =
      _tmp744 * _tmp749 + _views_1_calibration[2] - matches_0_19_target_coords(0, 0);
  const Scalar _tmp751 = _tmp107 * _tmp740 + _tmp742 * _tmp95;
  const Scalar _tmp752 = _tmp103 * _tmp741 + _tmp751;
  const Scalar _tmp753 = _tmp748 * _views_1_calibration[1];
  const Scalar _tmp754 =
      _tmp752 * _tmp753 + _views_1_calibration[3] - matches_0_19_target_coords(1, 0);
  const Scalar _tmp755 = std::pow(_tmp750, Scalar(2)) + std::pow(_tmp754, Scalar(2)) + epsilon;
  const Scalar _tmp756 = std::pow(_tmp755, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp757 = _tmp184 * _tmp755 + 1;
  const Scalar _tmp758 = std::sqrt(Scalar(_tmp189 * (std::pow(_tmp757, _tmp188) - 1)));
  const Scalar _tmp759 = std::max<Scalar>(0, (((_tmp746) > 0) - ((_tmp746) < 0)));
  const Scalar _tmp760 = std::sqrt(matches_0_19_weight);
  const Scalar _tmp761 = _tmp758 * _tmp759 * _tmp760;
  const Scalar _tmp762 = _tmp756 * _tmp761;
  const Scalar _tmp763 = _tmp750 * _tmp762;
  const Scalar _tmp764 = _tmp754 * _tmp762;
  const Scalar _tmp765 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp766 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp767 = matches_0_0_weight / _tmp766;
  const Scalar _tmp768 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp769 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp770 = matches_0_1_weight / _tmp769;
  const Scalar _tmp771 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp772 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp773 = matches_0_2_weight / _tmp772;
  const Scalar _tmp774 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp775 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp776 = matches_0_3_weight / _tmp775;
  const Scalar _tmp777 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp778 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp779 = matches_0_4_weight / _tmp778;
  const Scalar _tmp780 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp781 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp782 = matches_0_5_weight / _tmp781;
  const Scalar _tmp783 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp784 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp785 = matches_0_6_weight / _tmp784;
  const Scalar _tmp786 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp787 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp788 = matches_0_7_weight / _tmp787;
  const Scalar _tmp789 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp790 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp791 = matches_0_8_weight / _tmp790;
  const Scalar _tmp792 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp793 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp794 = matches_0_9_weight / _tmp793;
  const Scalar _tmp795 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp796 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp797 = matches_0_10_weight / _tmp796;
  const Scalar _tmp798 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp799 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp800 = matches_0_11_weight / _tmp799;
  const Scalar _tmp801 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp802 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp803 = matches_0_12_weight / _tmp802;
  const Scalar _tmp804 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp805 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp806 = matches_0_13_weight / _tmp805;
  const Scalar _tmp807 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp808 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp809 = matches_0_14_weight / _tmp808;
  const Scalar _tmp810 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp811 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp812 = matches_0_15_weight / _tmp811;
  const Scalar _tmp813 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp814 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp815 = matches_0_16_weight / _tmp814;
  const Scalar _tmp816 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp817 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp818 = matches_0_17_weight / _tmp817;
  const Scalar _tmp819 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp820 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp821 = matches_0_18_weight / _tmp820;
  const Scalar _tmp822 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp823 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp824 = matches_0_19_weight / _tmp823;
  const Scalar _tmp825 = -_tmp104;
  const Scalar _tmp826 = _tmp105 + _tmp825;
  const Scalar _tmp827 = -_tmp94;
  const Scalar _tmp828 = _tmp124 + _tmp827;
  const Scalar _tmp829 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp830 = -_tmp829;
  const Scalar _tmp831 = _tmp830 + _tmp97;
  const Scalar _tmp832 = -_tmp111;
  const Scalar _tmp833 = _tmp100 + _tmp832;
  const Scalar _tmp834 = _tmp831 + _tmp833;
  const Scalar _tmp835 = _tmp470 * _tmp826 + _tmp471 * _tmp828 + _tmp472 * _tmp834;
  const Scalar _tmp836 =
      ((((_tmp42 + _tmp476) > 0) - ((_tmp42 + _tmp476) < 0)) + 1) / std::pow(_tmp477, Scalar(2));
  const Scalar _tmp837 = _tmp474 * _tmp836;
  const Scalar _tmp838 = (Scalar(1) / Scalar(2)) * _views_1_calibration[1];
  const Scalar _tmp839 = _tmp482 * _tmp836;
  const Scalar _tmp840 = _tmp838 * _tmp839;
  const Scalar _tmp841 = -_tmp97;
  const Scalar _tmp842 = _tmp829 + _tmp841;
  const Scalar _tmp843 = _tmp833 + _tmp842;
  const Scalar _tmp844 = _tmp483 * (_tmp471 * _tmp843 + _tmp475) - _tmp835 * _tmp840;
  const Scalar _tmp845 = 2 * _tmp484;
  const Scalar _tmp846 = -_tmp480 * _tmp835 * _tmp837 * _views_1_calibration[0] + _tmp844 * _tmp845;
  const Scalar _tmp847 = _tmp491 / (_tmp485 * std::sqrt(_tmp485));
  const Scalar _tmp848 = (Scalar(1) / Scalar(2)) * _tmp480;
  const Scalar _tmp849 = _tmp847 * _tmp848;
  const Scalar _tmp850 = _tmp188 - 1;
  const Scalar _tmp851 =
      _tmp181 * _tmp486 * std::pow(_tmp487, _tmp850) * _tmp489 * _tmp490 / _tmp488;
  const Scalar _tmp852 = _tmp848 * _tmp851;
  const Scalar _tmp853 = (Scalar(1) / Scalar(2)) * _views_1_calibration[0];
  const Scalar _tmp854 = _tmp837 * _tmp853;
  const Scalar _tmp855 = -_tmp492 * _tmp835 * _tmp854 - _tmp846 * _tmp849 + _tmp846 * _tmp852;
  const Scalar _tmp856 = _tmp826 * _views_0_pose[4] - _tmp826 * _views_1_pose[4] +
                         _tmp828 * _views_0_pose[6] - _tmp828 * _views_1_pose[6] +
                         _tmp834 * _views_0_pose[5] - _tmp834 * _views_1_pose[5];
  const Scalar _tmp857 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp858 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp859 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp860 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp861 = -_tmp857 - _tmp858 - _tmp859 - _tmp860;
  const Scalar _tmp862 = _priors_1_0_target_T_src[2] * _tmp861;
  const Scalar _tmp863 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp864 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp865 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp866 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp867 = -_tmp863 - _tmp864 + _tmp865 + _tmp866;
  const Scalar _tmp868 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp869 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp870 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp871 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp872 = _tmp868 - _tmp869 + _tmp870 - _tmp871;
  const Scalar _tmp873 = -_priors_1_0_target_T_src[1] * _tmp872;
  const Scalar _tmp874 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp875 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp876 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp877 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp878 = _tmp874 - _tmp875 - _tmp876 + _tmp877;
  const Scalar _tmp879 = _priors_1_0_target_T_src[3] * _tmp878;
  const Scalar _tmp880 = _tmp75 + _tmp76 + _tmp77 + _tmp78;
  const Scalar _tmp881 = std::fabs(_tmp880);
  const Scalar _tmp882 = std::min<Scalar>(_tmp43, _tmp881);
  const Scalar _tmp883 = std::acos(_tmp882);
  const Scalar _tmp884 = 1 - std::pow(_tmp882, Scalar(2));
  const Scalar _tmp885 = _tmp883 / std::sqrt(_tmp884);
  const Scalar _tmp886 =
      _tmp885 * (_priors_1_0_target_T_src[0] * _tmp867 - _tmp862 + _tmp873 + _tmp879);
  const Scalar _tmp887 = _tmp81 * _tmp886;
  const Scalar _tmp888 =
      -_tmp126 - _tmp129 + _tmp130 + _tmp843 * _views_0_pose[6] - _tmp843 * _views_1_pose[6];
  const Scalar _tmp889 = _priors_1_0_target_T_src[3] * _tmp861;
  const Scalar _tmp890 = _priors_1_0_target_T_src[0] * _tmp872;
  const Scalar _tmp891 = _priors_1_0_target_T_src[2] * _tmp878;
  const Scalar _tmp892 = _tmp81 * _tmp885;
  const Scalar _tmp893 =
      _tmp892 * (-_priors_1_0_target_T_src[1] * _tmp867 + _tmp889 - _tmp890 + _tmp891);
  const Scalar _tmp894 = _priors_1_0_target_T_src[0] * _tmp861;
  const Scalar _tmp895 = _priors_1_0_target_T_src[3] * _tmp872;
  const Scalar _tmp896 = _priors_1_0_target_T_src[1] * _tmp878;
  const Scalar _tmp897 = _priors_1_0_target_T_src[2] * _tmp867 + _tmp894 + _tmp895 + _tmp896;
  const Scalar _tmp898 = _tmp80 * ((((_tmp43 - _tmp881) > 0) - ((_tmp43 - _tmp881) < 0)) + 1) *
                         (((_tmp880) > 0) - ((_tmp880) < 0));
  const Scalar _tmp899 = _tmp898 / _tmp884;
  const Scalar _tmp900 = _tmp897 * _tmp899;
  const Scalar _tmp901 = _tmp88 * _tmp900;
  const Scalar _tmp902 = _tmp85 * _tmp900;
  const Scalar _tmp903 = _priors_1_0_target_T_src[1] * _tmp861;
  const Scalar _tmp904 = _priors_1_0_target_T_src[2] * _tmp872;
  const Scalar _tmp905 = -_priors_1_0_target_T_src[0] * _tmp878;
  const Scalar _tmp906 = _priors_1_0_target_T_src[3] * _tmp867 + _tmp903 - _tmp904 + _tmp905;
  const Scalar _tmp907 = _tmp136 * _tmp885;
  const Scalar _tmp908 = _tmp882 * _tmp883 * _tmp898 / (_tmp884 * std::sqrt(_tmp884));
  const Scalar _tmp909 = _tmp897 * _tmp908;
  const Scalar _tmp910 = _tmp85 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp911 = _tmp88 * _tmp909;
  const Scalar _tmp912 =
      -_tmp137 * _tmp900 + _tmp137 * _tmp909 + _tmp856 * priors_1_0_sqrt_info(3, 5) +
      _tmp887 * priors_1_0_sqrt_info(3, 1) + _tmp888 * priors_1_0_sqrt_info(3, 4) +
      _tmp893 * priors_1_0_sqrt_info(3, 0) - _tmp901 * priors_1_0_sqrt_info(3, 0) -
      _tmp902 * priors_1_0_sqrt_info(3, 2) + _tmp906 * _tmp907 + _tmp909 * _tmp910 +
      _tmp911 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp913 = _tmp350 * _tmp826 + _tmp351 * _tmp828 + _tmp352 * _tmp834;
  const Scalar _tmp914 =
      ((((_tmp356 + _tmp42) > 0) - ((_tmp356 + _tmp42) < 0)) + 1) / std::pow(_tmp357, Scalar(2));
  const Scalar _tmp915 = _tmp354 * _tmp914;
  const Scalar _tmp916 = _tmp913 * _tmp915;
  const Scalar _tmp917 = _tmp362 * _tmp914;
  const Scalar _tmp918 = _tmp838 * _tmp917;
  const Scalar _tmp919 = _tmp363 * (_tmp351 * _tmp843 + _tmp355) - _tmp913 * _tmp918;
  const Scalar _tmp920 = 2 * _tmp364;
  const Scalar _tmp921 = -_tmp360 * _tmp916 * _views_1_calibration[0] + _tmp919 * _tmp920;
  const Scalar _tmp922 = (Scalar(1) / Scalar(2)) * _tmp360;
  const Scalar _tmp923 =
      _tmp181 * _tmp366 * _tmp367 * _tmp368 * std::pow(_tmp369, _tmp850) / _tmp370;
  const Scalar _tmp924 = _tmp922 * _tmp923;
  const Scalar _tmp925 = _tmp371 / (_tmp365 * std::sqrt(_tmp365));
  const Scalar _tmp926 = _tmp922 * _tmp925;
  const Scalar _tmp927 = -_tmp372 * _tmp853 * _tmp916 + _tmp921 * _tmp924 - _tmp921 * _tmp926;
  const Scalar _tmp928 = _tmp230 * _tmp826 + _tmp231 * _tmp828 + _tmp232 * _tmp834;
  const Scalar _tmp929 =
      ((((_tmp236 + _tmp42) > 0) - ((_tmp236 + _tmp42) < 0)) + 1) / std::pow(_tmp237, Scalar(2));
  const Scalar _tmp930 = _tmp242 * _tmp929;
  const Scalar _tmp931 = _tmp838 * _tmp930;
  const Scalar _tmp932 = _tmp243 * (_tmp231 * _tmp843 + _tmp235) - _tmp928 * _tmp931;
  const Scalar _tmp933 = 2 * _tmp244;
  const Scalar _tmp934 = _tmp234 * _tmp929;
  const Scalar _tmp935 = _tmp928 * _tmp934;
  const Scalar _tmp936 = -_tmp240 * _tmp935 * _views_1_calibration[0] + _tmp932 * _tmp933;
  const Scalar _tmp937 = (Scalar(1) / Scalar(2)) * _tmp244;
  const Scalar _tmp938 =
      _tmp181 * _tmp246 * std::pow(_tmp247, _tmp850) * _tmp249 * _tmp250 / _tmp248;
  const Scalar _tmp939 = _tmp937 * _tmp938;
  const Scalar _tmp940 = _tmp251 / (_tmp245 * std::sqrt(_tmp245));
  const Scalar _tmp941 = _tmp937 * _tmp940;
  const Scalar _tmp942 = _tmp252 * _tmp932 + _tmp936 * _tmp939 - _tmp936 * _tmp941;
  const Scalar _tmp943 = _tmp863 + _tmp864 - _tmp865 - _tmp866;
  const Scalar _tmp944 = _priors_0_1_target_T_src[2] * _tmp943;
  const Scalar _tmp945 = -_tmp874 + _tmp875 + _tmp876 - _tmp877;
  const Scalar _tmp946 = _tmp857 + _tmp858 + _tmp859 + _tmp860;
  const Scalar _tmp947 = _priors_0_1_target_T_src[0] * _tmp946;
  const Scalar _tmp948 = _priors_0_1_target_T_src[3] * _tmp872 + _tmp947;
  const Scalar _tmp949 = _priors_0_1_target_T_src[1] * _tmp945 + _tmp944 + _tmp948;
  const Scalar _tmp950 = ((((-_tmp41 + _tmp43) > 0) - ((-_tmp41 + _tmp43) < 0)) + 1) *
                         (((_tmp40) > 0) - ((_tmp40) < 0));
  const Scalar _tmp951 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp952 = _tmp47 * _tmp951;
  const Scalar _tmp953 = _tmp950 * _tmp952;
  const Scalar _tmp954 = _tmp949 * _tmp953;
  const Scalar _tmp955 = _tmp58 * _tmp954;
  const Scalar _tmp956 = _tmp949 * _tmp950;
  const Scalar _tmp957 = _tmp44 / (_tmp45 * std::sqrt(_tmp45));
  const Scalar _tmp958 = _tmp49 * _tmp957;
  const Scalar _tmp959 = _tmp39 * _tmp958;
  const Scalar _tmp960 = _tmp959 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp961 = _tmp52 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp962 = _tmp39 * _tmp954;
  const Scalar _tmp963 = _tmp58 * _tmp949;
  const Scalar _tmp964 = _tmp950 * _tmp963;
  const Scalar _tmp965 = _tmp958 * _tmp964;
  const Scalar _tmp966 = _tmp956 * _tmp958;
  const Scalar _tmp967 = _priors_0_1_target_T_src[2] * _tmp946;
  const Scalar _tmp968 = _priors_0_1_target_T_src[0] * _tmp943;
  const Scalar _tmp969 = _priors_0_1_target_T_src[1] * _tmp872;
  const Scalar _tmp970 = _priors_0_1_target_T_src[3] * _tmp945 - _tmp967 + _tmp968 - _tmp969;
  const Scalar _tmp971 = _tmp50 * _tmp970;
  const Scalar _tmp972 = _priors_0_1_target_T_src[2] * _tmp872;
  const Scalar _tmp973 = _priors_0_1_target_T_src[1] * _tmp946;
  const Scalar _tmp974 = _priors_0_1_target_T_src[3] * _tmp943 + _tmp973;
  const Scalar _tmp975 = -_priors_0_1_target_T_src[0] * _tmp945 - _tmp972 + _tmp974;
  const Scalar _tmp976 = _tmp50 * _tmp975;
  const Scalar _tmp977 = -_priors_0_1_target_T_src[1] * _tmp943;
  const Scalar _tmp978 = _priors_0_1_target_T_src[3] * _tmp946;
  const Scalar _tmp979 = -_priors_0_1_target_T_src[0] * _tmp872 + _tmp978;
  const Scalar _tmp980 = _tmp50 * (_priors_0_1_target_T_src[2] * _tmp945 + _tmp977 + _tmp979);
  const Scalar _tmp981 =
      -_tmp954 * _tmp961 - _tmp955 * priors_0_1_sqrt_info(2, 2) + _tmp956 * _tmp960 +
      _tmp961 * _tmp966 - _tmp962 * priors_0_1_sqrt_info(2, 0) +
      _tmp965 * priors_0_1_sqrt_info(2, 2) + _tmp971 * priors_0_1_sqrt_info(2, 1) +
      _tmp976 * priors_0_1_sqrt_info(2, 2) + _tmp980 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp982 = _tmp260 * _tmp826 + _tmp261 * _tmp834 + _tmp262 * _tmp828;
  const Scalar _tmp983 =
      ((((_tmp266 + _tmp42) > 0) - ((_tmp266 + _tmp42) < 0)) + 1) / std::pow(_tmp267, Scalar(2));
  const Scalar _tmp984 = _tmp264 * _tmp983;
  const Scalar _tmp985 = _tmp853 * _tmp984;
  const Scalar _tmp986 = _tmp272 * _tmp983;
  const Scalar _tmp987 = _tmp838 * _tmp986;
  const Scalar _tmp988 = _tmp273 * (_tmp262 * _tmp843 + _tmp265) - _tmp982 * _tmp987;
  const Scalar _tmp989 = 2 * _tmp274;
  const Scalar _tmp990 = -_tmp270 * _tmp982 * _tmp984 * _views_1_calibration[0] + _tmp988 * _tmp989;
  const Scalar _tmp991 = (Scalar(1) / Scalar(2)) * _tmp270;
  const Scalar _tmp992 =
      _tmp181 * _tmp276 * _tmp277 * _tmp278 * std::pow(_tmp279, _tmp850) / _tmp280;
  const Scalar _tmp993 = _tmp991 * _tmp992;
  const Scalar _tmp994 = _tmp281 / (_tmp275 * std::sqrt(_tmp275));
  const Scalar _tmp995 = _tmp991 * _tmp994;
  const Scalar _tmp996 = -_tmp282 * _tmp982 * _tmp985 + _tmp990 * _tmp993 - _tmp990 * _tmp995;
  const Scalar _tmp997 = _tmp680 * _tmp826 + _tmp681 * _tmp834 + _tmp682 * _tmp828;
  const Scalar _tmp998 =
      ((((_tmp42 + _tmp686) > 0) - ((_tmp42 + _tmp686) < 0)) + 1) / std::pow(_tmp687, Scalar(2));
  const Scalar _tmp999 = _tmp684 * _tmp998;
  const Scalar _tmp1000 = _tmp692 * _tmp998;
  const Scalar _tmp1001 = _tmp1000 * _tmp838;
  const Scalar _tmp1002 = -_tmp1001 * _tmp997 + _tmp693 * (_tmp682 * _tmp843 + _tmp685);
  const Scalar _tmp1003 = 2 * _tmp694;
  const Scalar _tmp1004 =
      _tmp1002 * _tmp1003 - _tmp690 * _tmp997 * _tmp999 * _views_1_calibration[0];
  const Scalar _tmp1005 = (Scalar(1) / Scalar(2)) * _tmp694;
  const Scalar _tmp1006 =
      _tmp181 * _tmp696 * _tmp697 * _tmp698 * std::pow(_tmp699, _tmp850) / _tmp700;
  const Scalar _tmp1007 = _tmp1005 * _tmp1006;
  const Scalar _tmp1008 = _tmp701 / (_tmp695 * std::sqrt(_tmp695));
  const Scalar _tmp1009 = _tmp1005 * _tmp1008;
  const Scalar _tmp1010 = _tmp1002 * _tmp702 + _tmp1004 * _tmp1007 - _tmp1004 * _tmp1009;
  const Scalar _tmp1011 = _tmp85 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp1012 = _tmp74 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1013 = _tmp892 * _tmp906;
  const Scalar _tmp1014 = _tmp74 * _tmp900;
  const Scalar _tmp1015 =
      _tmp1011 * _tmp909 + _tmp1012 * _tmp909 + _tmp1013 * priors_1_0_sqrt_info(4, 2) -
      _tmp1014 * priors_1_0_sqrt_info(4, 1) + _tmp856 * priors_1_0_sqrt_info(4, 5) +
      _tmp887 * priors_1_0_sqrt_info(4, 1) + _tmp888 * priors_1_0_sqrt_info(4, 4) +
      _tmp893 * priors_1_0_sqrt_info(4, 0) - _tmp901 * priors_1_0_sqrt_info(4, 0) -
      _tmp902 * priors_1_0_sqrt_info(4, 2) + _tmp911 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1016 = (Scalar(1) / Scalar(2)) * _tmp364;
  const Scalar _tmp1017 = _tmp1016 * _tmp925;
  const Scalar _tmp1018 = _tmp1016 * _tmp923;
  const Scalar _tmp1019 = -_tmp1017 * _tmp921 + _tmp1018 * _tmp921 + _tmp372 * _tmp919;
  const Scalar _tmp1020 =
      ((((_tmp42 + _tmp596) > 0) - ((_tmp42 + _tmp596) < 0)) + 1) / std::pow(_tmp597, Scalar(2));
  const Scalar _tmp1021 = _tmp1020 * (_tmp590 * _tmp826 + _tmp591 * _tmp834 + _tmp592 * _tmp828);
  const Scalar _tmp1022 = _tmp602 * _tmp838;
  const Scalar _tmp1023 = -_tmp1021 * _tmp1022 + _tmp603 * (_tmp592 * _tmp843 + _tmp595);
  const Scalar _tmp1024 = 2 * _tmp604;
  const Scalar _tmp1025 =
      -_tmp1021 * _tmp594 * _tmp600 * _views_1_calibration[0] + _tmp1023 * _tmp1024;
  const Scalar _tmp1026 = (Scalar(1) / Scalar(2)) * _tmp600;
  const Scalar _tmp1027 = _tmp611 / (_tmp605 * std::sqrt(_tmp605));
  const Scalar _tmp1028 = _tmp1026 * _tmp1027;
  const Scalar _tmp1029 =
      _tmp181 * _tmp606 * _tmp607 * std::pow(_tmp608, _tmp850) * _tmp610 / _tmp609;
  const Scalar _tmp1030 = _tmp1026 * _tmp1029;
  const Scalar _tmp1031 = _tmp594 * _tmp853;
  const Scalar _tmp1032 =
      -_tmp1021 * _tmp1031 * _tmp612 - _tmp1025 * _tmp1028 + _tmp1025 * _tmp1030;
  const Scalar _tmp1033 =
      ((((_tmp42 + _tmp656) > 0) - ((_tmp42 + _tmp656) < 0)) + 1) / std::pow(_tmp657, Scalar(2));
  const Scalar _tmp1034 = _tmp1033 * (_tmp650 * _tmp826 + _tmp651 * _tmp834 + _tmp652 * _tmp828);
  const Scalar _tmp1035 = _tmp662 * _tmp838;
  const Scalar _tmp1036 = -_tmp1034 * _tmp1035 + _tmp663 * (_tmp652 * _tmp843 + _tmp655);
  const Scalar _tmp1037 = 2 * _tmp664;
  const Scalar _tmp1038 = _tmp1034 * _tmp654;
  const Scalar _tmp1039 = _tmp1036 * _tmp1037 - _tmp1038 * _tmp660 * _views_1_calibration[0];
  const Scalar _tmp1040 = (Scalar(1) / Scalar(2)) * _tmp660;
  const Scalar _tmp1041 =
      _tmp181 * _tmp666 * _tmp667 * std::pow(_tmp668, _tmp850) * _tmp670 / _tmp669;
  const Scalar _tmp1042 = _tmp1040 * _tmp1041;
  const Scalar _tmp1043 = _tmp671 / (_tmp665 * std::sqrt(_tmp665));
  const Scalar _tmp1044 = _tmp1040 * _tmp1043;
  const Scalar _tmp1045 = -_tmp1038 * _tmp672 * _tmp853 + _tmp1039 * _tmp1042 - _tmp1039 * _tmp1044;
  const Scalar _tmp1046 = (Scalar(1) / Scalar(2)) * _tmp484;
  const Scalar _tmp1047 = _tmp1046 * _tmp851;
  const Scalar _tmp1048 = _tmp1046 * _tmp847;
  const Scalar _tmp1049 = _tmp1047 * _tmp846 - _tmp1048 * _tmp846 + _tmp492 * _tmp844;
  const Scalar _tmp1050 = _tmp740 * _tmp826 + _tmp741 * _tmp834 + _tmp742 * _tmp828;
  const Scalar _tmp1051 =
      ((((_tmp42 + _tmp746) > 0) - ((_tmp42 + _tmp746) < 0)) + 1) / std::pow(_tmp747, Scalar(2));
  const Scalar _tmp1052 = _tmp1051 * _tmp752;
  const Scalar _tmp1053 = _tmp1052 * _tmp838;
  const Scalar _tmp1054 = -_tmp1050 * _tmp1053 + _tmp753 * (_tmp742 * _tmp843 + _tmp745);
  const Scalar _tmp1055 = 2 * _tmp754;
  const Scalar _tmp1056 = _tmp1051 * _tmp744;
  const Scalar _tmp1057 =
      -_tmp1050 * _tmp1056 * _tmp750 * _views_1_calibration[0] + _tmp1054 * _tmp1055;
  const Scalar _tmp1058 = (Scalar(1) / Scalar(2)) * _tmp754;
  const Scalar _tmp1059 = _tmp1057 * _tmp1058;
  const Scalar _tmp1060 =
      _tmp181 * _tmp756 * std::pow(_tmp757, _tmp850) * _tmp759 * _tmp760 / _tmp758;
  const Scalar _tmp1061 = _tmp761 / (_tmp755 * std::sqrt(_tmp755));
  const Scalar _tmp1062 = _tmp1054 * _tmp762 + _tmp1059 * _tmp1060 - _tmp1059 * _tmp1061;
  const Scalar _tmp1063 = _tmp39 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1064 = _tmp52 * _tmp954;
  const Scalar _tmp1065 = _tmp52 * _tmp966;
  const Scalar _tmp1066 =
      _tmp1063 * _tmp966 - _tmp1064 * priors_0_1_sqrt_info(1, 1) +
      _tmp1065 * priors_0_1_sqrt_info(1, 1) + _tmp61 * _tmp970 -
      _tmp955 * priors_0_1_sqrt_info(1, 2) - _tmp962 * priors_0_1_sqrt_info(1, 0) +
      _tmp965 * priors_0_1_sqrt_info(1, 2) + _tmp976 * priors_0_1_sqrt_info(1, 2) +
      _tmp980 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1067 = _tmp710 * _tmp826 + _tmp711 * _tmp828 + _tmp712 * _tmp834;
  const Scalar _tmp1068 =
      ((((_tmp42 + _tmp716) > 0) - ((_tmp42 + _tmp716) < 0)) + 1) / std::pow(_tmp717, Scalar(2));
  const Scalar _tmp1069 = _tmp1068 * _tmp714;
  const Scalar _tmp1070 = _tmp1068 * _tmp722;
  const Scalar _tmp1071 = _tmp1070 * _tmp838;
  const Scalar _tmp1072 = -_tmp1067 * _tmp1071 + _tmp723 * (_tmp711 * _tmp843 + _tmp715);
  const Scalar _tmp1073 = 2 * _tmp724;
  const Scalar _tmp1074 =
      -_tmp1067 * _tmp1069 * _tmp720 * _views_1_calibration[0] + _tmp1072 * _tmp1073;
  const Scalar _tmp1075 = (Scalar(1) / Scalar(2)) * _tmp724;
  const Scalar _tmp1076 =
      _tmp181 * _tmp726 * _tmp727 * _tmp728 * std::pow(_tmp729, _tmp850) / _tmp730;
  const Scalar _tmp1077 = _tmp1075 * _tmp1076;
  const Scalar _tmp1078 = _tmp731 / (_tmp725 * std::sqrt(_tmp725));
  const Scalar _tmp1079 = _tmp1075 * _tmp1078;
  const Scalar _tmp1080 = _tmp1072 * _tmp732 + _tmp1074 * _tmp1077 - _tmp1074 * _tmp1079;
  const Scalar _tmp1081 = _tmp440 * _tmp826 + _tmp441 * _tmp834 + _tmp442 * _tmp828;
  const Scalar _tmp1082 =
      ((((_tmp42 + _tmp446) > 0) - ((_tmp42 + _tmp446) < 0)) + 1) / std::pow(_tmp447, Scalar(2));
  const Scalar _tmp1083 = _tmp1082 * _tmp444;
  const Scalar _tmp1084 = _tmp1083 * _tmp853;
  const Scalar _tmp1085 = _tmp1082 * _tmp452;
  const Scalar _tmp1086 = _tmp1085 * _tmp838;
  const Scalar _tmp1087 = -_tmp1081 * _tmp1086 + _tmp453 * (_tmp442 * _tmp843 + _tmp445);
  const Scalar _tmp1088 = 2 * _tmp454;
  const Scalar _tmp1089 =
      -_tmp1081 * _tmp1083 * _tmp450 * _views_1_calibration[0] + _tmp1087 * _tmp1088;
  const Scalar _tmp1090 = (Scalar(1) / Scalar(2)) * _tmp450;
  const Scalar _tmp1091 =
      _tmp181 * _tmp456 * _tmp457 * std::pow(_tmp458, _tmp850) * _tmp460 / _tmp459;
  const Scalar _tmp1092 = _tmp1090 * _tmp1091;
  const Scalar _tmp1093 = _tmp461 / (_tmp455 * std::sqrt(_tmp455));
  const Scalar _tmp1094 = _tmp1090 * _tmp1093;
  const Scalar _tmp1095 =
      -_tmp1081 * _tmp1084 * _tmp462 + _tmp1089 * _tmp1092 - _tmp1089 * _tmp1094;
  const Scalar _tmp1096 = _tmp320 * _tmp826 + _tmp321 * _tmp834 + _tmp322 * _tmp828;
  const Scalar _tmp1097 =
      ((((_tmp326 + _tmp42) > 0) - ((_tmp326 + _tmp42) < 0)) + 1) / std::pow(_tmp327, Scalar(2));
  const Scalar _tmp1098 = _tmp1097 * _tmp332;
  const Scalar _tmp1099 = _tmp1098 * _tmp838;
  const Scalar _tmp1100 = -_tmp1096 * _tmp1099 + _tmp333 * (_tmp322 * _tmp843 + _tmp325);
  const Scalar _tmp1101 = 2 * _tmp334;
  const Scalar _tmp1102 = _tmp1097 * _tmp324;
  const Scalar _tmp1103 =
      -_tmp1096 * _tmp1102 * _tmp330 * _views_1_calibration[0] + _tmp1100 * _tmp1101;
  const Scalar _tmp1104 = _tmp341 / (_tmp335 * std::sqrt(_tmp335));
  const Scalar _tmp1105 = (Scalar(1) / Scalar(2)) * _tmp334;
  const Scalar _tmp1106 = _tmp1104 * _tmp1105;
  const Scalar _tmp1107 =
      _tmp181 * _tmp336 * std::pow(_tmp337, _tmp850) * _tmp339 * _tmp340 / _tmp338;
  const Scalar _tmp1108 = _tmp1105 * _tmp1107;
  const Scalar _tmp1109 = _tmp1100 * _tmp342 - _tmp1103 * _tmp1106 + _tmp1103 * _tmp1108;
  const Scalar _tmp1110 = _tmp959 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1111 =
      -_tmp1064 * priors_0_1_sqrt_info(0, 1) + _tmp1065 * priors_0_1_sqrt_info(0, 1) +
      _tmp1110 * _tmp956 - _tmp955 * priors_0_1_sqrt_info(0, 2) -
      _tmp962 * priors_0_1_sqrt_info(0, 0) + _tmp965 * priors_0_1_sqrt_info(0, 2) +
      _tmp971 * priors_0_1_sqrt_info(0, 1) + _tmp976 * priors_0_1_sqrt_info(0, 2) +
      _tmp980 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1112 = (Scalar(1) / Scalar(2)) * _tmp690;
  const Scalar _tmp1113 = _tmp1008 * _tmp1112;
  const Scalar _tmp1114 = _tmp853 * _tmp999;
  const Scalar _tmp1115 = _tmp1006 * _tmp1112;
  const Scalar _tmp1116 = -_tmp1004 * _tmp1113 + _tmp1004 * _tmp1115 - _tmp1114 * _tmp702 * _tmp997;
  const Scalar _tmp1117 = _tmp620 * _tmp826 + _tmp621 * _tmp834 + _tmp622 * _tmp828;
  const Scalar _tmp1118 =
      ((((_tmp42 + _tmp626) > 0) - ((_tmp42 + _tmp626) < 0)) + 1) / std::pow(_tmp627, Scalar(2));
  const Scalar _tmp1119 = _tmp1118 * _tmp632;
  const Scalar _tmp1120 = _tmp1119 * _tmp838;
  const Scalar _tmp1121 = -_tmp1117 * _tmp1120 + _tmp633 * (_tmp622 * _tmp843 + _tmp625);
  const Scalar _tmp1122 = _tmp1118 * _tmp624;
  const Scalar _tmp1123 = 2 * _tmp634;
  const Scalar _tmp1124 =
      -_tmp1117 * _tmp1122 * _tmp630 * _views_1_calibration[0] + _tmp1121 * _tmp1123;
  const Scalar _tmp1125 = (Scalar(1) / Scalar(2)) * _tmp634;
  const Scalar _tmp1126 =
      _tmp181 * _tmp636 * _tmp637 * std::pow(_tmp638, _tmp850) * _tmp640 / _tmp639;
  const Scalar _tmp1127 = _tmp1125 * _tmp1126;
  const Scalar _tmp1128 = _tmp641 / (_tmp635 * std::sqrt(_tmp635));
  const Scalar _tmp1129 = _tmp1124 * _tmp1128;
  const Scalar _tmp1130 = _tmp1121 * _tmp642 + _tmp1124 * _tmp1127 - _tmp1125 * _tmp1129;
  const Scalar _tmp1131 = _tmp1122 * _tmp853;
  const Scalar _tmp1132 = (Scalar(1) / Scalar(2)) * _tmp630;
  const Scalar _tmp1133 = _tmp1126 * _tmp1132;
  const Scalar _tmp1134 =
      -_tmp1117 * _tmp1131 * _tmp642 + _tmp1124 * _tmp1133 - _tmp1129 * _tmp1132;
  const Scalar _tmp1135 = _tmp200 * _tmp826 + _tmp201 * _tmp828 + _tmp202 * _tmp834;
  const Scalar _tmp1136 =
      ((((_tmp206 + _tmp42) > 0) - ((_tmp206 + _tmp42) < 0)) + 1) / std::pow(_tmp207, Scalar(2));
  const Scalar _tmp1137 = _tmp1136 * _tmp212;
  const Scalar _tmp1138 = _tmp1137 * _tmp838;
  const Scalar _tmp1139 = -_tmp1135 * _tmp1138 + _tmp213 * (_tmp201 * _tmp843 + _tmp205);
  const Scalar _tmp1140 = 2 * _tmp214;
  const Scalar _tmp1141 = _tmp1136 * _tmp204;
  const Scalar _tmp1142 = _tmp1141 * _views_1_calibration[0];
  const Scalar _tmp1143 = _tmp1135 * _tmp1142;
  const Scalar _tmp1144 = _tmp1139 * _tmp1140 - _tmp1143 * _tmp210;
  const Scalar _tmp1145 = (Scalar(1) / Scalar(2)) * _tmp210;
  const Scalar _tmp1146 = _tmp221 / (_tmp215 * std::sqrt(_tmp215));
  const Scalar _tmp1147 = _tmp1145 * _tmp1146;
  const Scalar _tmp1148 =
      _tmp181 * _tmp216 * _tmp217 * _tmp218 * std::pow(_tmp219, _tmp850) / _tmp220;
  const Scalar _tmp1149 = _tmp1145 * _tmp1148;
  const Scalar _tmp1150 =
      -Scalar(1) / Scalar(2) * _tmp1143 * _tmp222 - _tmp1144 * _tmp1147 + _tmp1144 * _tmp1149;
  const Scalar _tmp1151 = _tmp380 * _tmp826 + _tmp381 * _tmp834 + _tmp382 * _tmp828;
  const Scalar _tmp1152 =
      ((((_tmp386 + _tmp42) > 0) - ((_tmp386 + _tmp42) < 0)) + 1) / std::pow(_tmp387, Scalar(2));
  const Scalar _tmp1153 = _tmp1152 * _tmp384;
  const Scalar _tmp1154 = _tmp1151 * _tmp1153;
  const Scalar _tmp1155 = _tmp1152 * _tmp392;
  const Scalar _tmp1156 = _tmp1155 * _tmp838;
  const Scalar _tmp1157 = -_tmp1151 * _tmp1156 + _tmp393 * (_tmp382 * _tmp843 + _tmp385);
  const Scalar _tmp1158 = 2 * _tmp394;
  const Scalar _tmp1159 = -_tmp1154 * _tmp390 * _views_1_calibration[0] + _tmp1157 * _tmp1158;
  const Scalar _tmp1160 = _tmp401 / (_tmp395 * std::sqrt(_tmp395));
  const Scalar _tmp1161 = _tmp1160 * _tmp394;
  const Scalar _tmp1162 = (Scalar(1) / Scalar(2)) * _tmp1161;
  const Scalar _tmp1163 = _tmp396 * std::pow(_tmp397, _tmp850) * _tmp399 * _tmp400 / _tmp398;
  const Scalar _tmp1164 = _tmp1163 * _tmp394;
  const Scalar _tmp1165 = (Scalar(1) / Scalar(2)) * _tmp181;
  const Scalar _tmp1166 = _tmp1159 * _tmp1165;
  const Scalar _tmp1167 = _tmp1157 * _tmp402 - _tmp1159 * _tmp1162 + _tmp1164 * _tmp1166;
  const Scalar _tmp1168 = _tmp85 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp1169 = _tmp74 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp1170 =
      _tmp1013 * priors_1_0_sqrt_info(5, 2) - _tmp1014 * priors_1_0_sqrt_info(5, 1) +
      _tmp1168 * _tmp909 + _tmp1169 * _tmp909 + _tmp856 * priors_1_0_sqrt_info(5, 5) +
      _tmp887 * priors_1_0_sqrt_info(5, 1) + _tmp888 * priors_1_0_sqrt_info(5, 4) +
      _tmp893 * priors_1_0_sqrt_info(5, 0) - _tmp901 * priors_1_0_sqrt_info(5, 0) -
      _tmp902 * priors_1_0_sqrt_info(5, 2) + _tmp911 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1171 = _tmp560 * _tmp826 + _tmp561 * _tmp834 + _tmp562 * _tmp828;
  const Scalar _tmp1172 =
      ((((_tmp42 + _tmp566) > 0) - ((_tmp42 + _tmp566) < 0)) + 1) / std::pow(_tmp567, Scalar(2));
  const Scalar _tmp1173 = _tmp1172 * _tmp564;
  const Scalar _tmp1174 = _tmp1173 * _tmp853;
  const Scalar _tmp1175 = _tmp1172 * _tmp572;
  const Scalar _tmp1176 = _tmp1175 * _tmp838;
  const Scalar _tmp1177 = -_tmp1171 * _tmp1176 + _tmp573 * (_tmp562 * _tmp843 + _tmp565);
  const Scalar _tmp1178 = 2 * _tmp574;
  const Scalar _tmp1179 =
      -_tmp1171 * _tmp1173 * _tmp570 * _views_1_calibration[0] + _tmp1177 * _tmp1178;
  const Scalar _tmp1180 = _tmp581 / (_tmp575 * std::sqrt(_tmp575));
  const Scalar _tmp1181 = (Scalar(1) / Scalar(2)) * _tmp1180;
  const Scalar _tmp1182 = _tmp1181 * _tmp570;
  const Scalar _tmp1183 = _tmp576 * _tmp577 * std::pow(_tmp578, _tmp850) * _tmp580 / _tmp579;
  const Scalar _tmp1184 = _tmp1165 * _tmp1183;
  const Scalar _tmp1185 = _tmp1184 * _tmp570;
  const Scalar _tmp1186 =
      -_tmp1171 * _tmp1174 * _tmp582 - _tmp1179 * _tmp1182 + _tmp1179 * _tmp1185;
  const Scalar _tmp1187 = (Scalar(1) / Scalar(2)) * _tmp604;
  const Scalar _tmp1188 = _tmp1029 * _tmp1187;
  const Scalar _tmp1189 = _tmp1027 * _tmp1187;
  const Scalar _tmp1190 = _tmp1023 * _tmp612 + _tmp1025 * _tmp1188 - _tmp1025 * _tmp1189;
  const Scalar _tmp1191 = _tmp290 * _tmp826 + _tmp291 * _tmp828 + _tmp292 * _tmp834;
  const Scalar _tmp1192 =
      ((((_tmp296 + _tmp42) > 0) - ((_tmp296 + _tmp42) < 0)) + 1) / std::pow(_tmp297, Scalar(2));
  const Scalar _tmp1193 = _tmp1192 * _tmp302;
  const Scalar _tmp1194 = _tmp1193 * _tmp838;
  const Scalar _tmp1195 = -_tmp1191 * _tmp1194 + _tmp303 * (_tmp291 * _tmp843 + _tmp295);
  const Scalar _tmp1196 = _tmp1192 * _tmp294;
  const Scalar _tmp1197 = 2 * _tmp304;
  const Scalar _tmp1198 =
      -_tmp1191 * _tmp1196 * _tmp300 * _views_1_calibration[0] + _tmp1195 * _tmp1197;
  const Scalar _tmp1199 = (Scalar(1) / Scalar(2)) * _tmp304;
  const Scalar _tmp1200 =
      _tmp181 * _tmp306 * _tmp307 * _tmp308 * std::pow(_tmp309, _tmp850) / _tmp310;
  const Scalar _tmp1201 = _tmp1199 * _tmp1200;
  const Scalar _tmp1202 = _tmp311 / (_tmp305 * std::sqrt(_tmp305));
  const Scalar _tmp1203 = _tmp1199 * _tmp1202;
  const Scalar _tmp1204 = _tmp1195 * _tmp312 + _tmp1198 * _tmp1201 - _tmp1198 * _tmp1203;
  const Scalar _tmp1205 = _tmp530 * _tmp826 + _tmp531 * _tmp834 + _tmp532 * _tmp828;
  const Scalar _tmp1206 =
      ((((_tmp42 + _tmp536) > 0) - ((_tmp42 + _tmp536) < 0)) + 1) / std::pow(_tmp537, Scalar(2));
  const Scalar _tmp1207 = _tmp1206 * _tmp534;
  const Scalar _tmp1208 = _tmp1205 * _tmp1207;
  const Scalar _tmp1209 = _tmp1206 * _tmp542;
  const Scalar _tmp1210 = _tmp1209 * _tmp838;
  const Scalar _tmp1211 = -_tmp1205 * _tmp1210 + _tmp543 * (_tmp532 * _tmp843 + _tmp535);
  const Scalar _tmp1212 = 2 * _tmp544;
  const Scalar _tmp1213 = -_tmp1208 * _tmp540 * _views_1_calibration[0] + _tmp1211 * _tmp1212;
  const Scalar _tmp1214 = (Scalar(1) / Scalar(2)) * _tmp540;
  const Scalar _tmp1215 =
      _tmp181 * _tmp546 * std::pow(_tmp547, _tmp850) * _tmp549 * _tmp550 / _tmp548;
  const Scalar _tmp1216 = _tmp1214 * _tmp1215;
  const Scalar _tmp1217 = _tmp551 / (_tmp545 * std::sqrt(_tmp545));
  const Scalar _tmp1218 = _tmp1213 * _tmp1217;
  const Scalar _tmp1219 = -_tmp1208 * _tmp552 * _tmp853 + _tmp1213 * _tmp1216 - _tmp1214 * _tmp1218;
  const Scalar _tmp1220 = (Scalar(1) / Scalar(2)) * _tmp544;
  const Scalar _tmp1221 = _tmp1215 * _tmp1220;
  const Scalar _tmp1222 = _tmp1211 * _tmp552 + _tmp1213 * _tmp1221 - _tmp1218 * _tmp1220;
  const Scalar _tmp1223 = _tmp959 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1224 = _tmp52 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp1225 =
      -_tmp1064 * priors_0_1_sqrt_info(4, 1) + _tmp1223 * _tmp956 + _tmp1224 * _tmp966 -
      _tmp955 * priors_0_1_sqrt_info(4, 2) - _tmp962 * priors_0_1_sqrt_info(4, 0) +
      _tmp965 * priors_0_1_sqrt_info(4, 2) + _tmp971 * priors_0_1_sqrt_info(4, 1) +
      _tmp976 * priors_0_1_sqrt_info(4, 2) + _tmp980 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1226 = (Scalar(1) / Scalar(2)) * _tmp330;
  const Scalar _tmp1227 = _tmp1104 * _tmp1226;
  const Scalar _tmp1228 = _tmp1107 * _tmp1226;
  const Scalar _tmp1229 = _tmp1102 * _tmp853;
  const Scalar _tmp1230 =
      -_tmp1096 * _tmp1229 * _tmp342 - _tmp1103 * _tmp1227 + _tmp1103 * _tmp1228;
  const Scalar _tmp1231 = _tmp1163 * _tmp390;
  const Scalar _tmp1232 = _tmp1160 * _tmp390;
  const Scalar _tmp1233 = (Scalar(1) / Scalar(2)) * _tmp1232;
  const Scalar _tmp1234 = -_tmp1154 * _tmp402 * _tmp853 - _tmp1159 * _tmp1233 + _tmp1166 * _tmp1231;
  const Scalar _tmp1235 = _tmp66 * _tmp957;
  const Scalar _tmp1236 = _tmp65 * _tmp951;
  const Scalar _tmp1237 = _tmp1236 * _tmp950;
  const Scalar _tmp1238 = _tmp52 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1239 =
      -_tmp1064 * priors_0_1_sqrt_info(3, 1) + _tmp1235 * _tmp964 - _tmp1237 * _tmp963 +
      _tmp1238 * _tmp966 - _tmp64 * _tmp954 + _tmp64 * _tmp966 + _tmp67 * _tmp975 +
      _tmp971 * priors_0_1_sqrt_info(3, 1) + _tmp980 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1240 = (Scalar(1) / Scalar(2)) * _tmp240;
  const Scalar _tmp1241 = _tmp1240 * _tmp940;
  const Scalar _tmp1242 = _tmp1240 * _tmp938;
  const Scalar _tmp1243 = -_tmp1241 * _tmp936 + _tmp1242 * _tmp936 - _tmp252 * _tmp853 * _tmp935;
  const Scalar _tmp1244 = _tmp744 * _tmp853;
  const Scalar _tmp1245 = _tmp1051 * _tmp1244;
  const Scalar _tmp1246 = (Scalar(1) / Scalar(2)) * _tmp750;
  const Scalar _tmp1247 = _tmp1061 * _tmp1246;
  const Scalar _tmp1248 = _tmp1060 * _tmp1246;
  const Scalar _tmp1249 =
      -_tmp1050 * _tmp1245 * _tmp762 - _tmp1057 * _tmp1247 + _tmp1057 * _tmp1248;
  const Scalar _tmp1250 = (Scalar(1) / Scalar(2)) * _tmp664;
  const Scalar _tmp1251 = _tmp1039 * _tmp1250;
  const Scalar _tmp1252 = _tmp1036 * _tmp672 + _tmp1041 * _tmp1251 - _tmp1043 * _tmp1251;
  const Scalar _tmp1253 = _tmp52 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1254 = _tmp959 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1255 =
      -_tmp1064 * priors_0_1_sqrt_info(5, 1) + _tmp1253 * _tmp966 + _tmp1254 * _tmp956 -
      _tmp955 * priors_0_1_sqrt_info(5, 2) - _tmp962 * priors_0_1_sqrt_info(5, 0) +
      _tmp965 * priors_0_1_sqrt_info(5, 2) + _tmp971 * priors_0_1_sqrt_info(5, 1) +
      _tmp976 * priors_0_1_sqrt_info(5, 2) + _tmp980 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1256 =
      ((((_tmp416 + _tmp42) > 0) - ((_tmp416 + _tmp42) < 0)) + 1) / std::pow(_tmp417, Scalar(2));
  const Scalar _tmp1257 = _tmp1256 * (_tmp410 * _tmp826 + _tmp411 * _tmp828 + _tmp412 * _tmp834);
  const Scalar _tmp1258 = _tmp422 * _tmp838;
  const Scalar _tmp1259 = -_tmp1257 * _tmp1258 + _tmp423 * (_tmp411 * _tmp843 + _tmp415);
  const Scalar _tmp1260 = 2 * _tmp424;
  const Scalar _tmp1261 =
      -_tmp1257 * _tmp414 * _tmp420 * _views_1_calibration[0] + _tmp1259 * _tmp1260;
  const Scalar _tmp1262 = _tmp426 * _tmp427 * std::pow(_tmp428, _tmp850) * _tmp430 / _tmp429;
  const Scalar _tmp1263 = _tmp1165 * _tmp1262;
  const Scalar _tmp1264 = _tmp1263 * _tmp420;
  const Scalar _tmp1265 = _tmp414 * _tmp853;
  const Scalar _tmp1266 = _tmp431 / (_tmp425 * std::sqrt(_tmp425));
  const Scalar _tmp1267 = (Scalar(1) / Scalar(2)) * _tmp1266;
  const Scalar _tmp1268 = _tmp1267 * _tmp420;
  const Scalar _tmp1269 =
      -_tmp1257 * _tmp1265 * _tmp432 + _tmp1261 * _tmp1264 - _tmp1261 * _tmp1268;
  const Scalar _tmp1270 = (Scalar(1) / Scalar(2)) * _tmp454;
  const Scalar _tmp1271 = _tmp1093 * _tmp1270;
  const Scalar _tmp1272 = _tmp1091 * _tmp1270;
  const Scalar _tmp1273 = _tmp1087 * _tmp462 - _tmp1089 * _tmp1271 + _tmp1089 * _tmp1272;
  const Scalar _tmp1274 = (Scalar(1) / Scalar(2)) * _tmp274;
  const Scalar _tmp1275 = _tmp1274 * _tmp994;
  const Scalar _tmp1276 = _tmp1274 * _tmp992;
  const Scalar _tmp1277 = -_tmp1275 * _tmp990 + _tmp1276 * _tmp990 + _tmp282 * _tmp988;
  const Scalar _tmp1278 = (Scalar(1) / Scalar(2)) * _tmp300;
  const Scalar _tmp1279 = _tmp1200 * _tmp1278;
  const Scalar _tmp1280 = _tmp1202 * _tmp1278;
  const Scalar _tmp1281 = _tmp1196 * _tmp853;
  const Scalar _tmp1282 =
      -_tmp1191 * _tmp1281 * _tmp312 + _tmp1198 * _tmp1279 - _tmp1198 * _tmp1280;
  const Scalar _tmp1283 = _tmp500 * _tmp826 + _tmp501 * _tmp828 + _tmp502 * _tmp834;
  const Scalar _tmp1284 =
      ((((_tmp42 + _tmp506) > 0) - ((_tmp42 + _tmp506) < 0)) + 1) / std::pow(_tmp507, Scalar(2));
  const Scalar _tmp1285 = _tmp1284 * _tmp512;
  const Scalar _tmp1286 = _tmp1285 * _tmp838;
  const Scalar _tmp1287 = -_tmp1283 * _tmp1286 + _tmp513 * (_tmp501 * _tmp843 + _tmp505);
  const Scalar _tmp1288 = 2 * _tmp514;
  const Scalar _tmp1289 = _tmp1284 * _tmp504;
  const Scalar _tmp1290 =
      -_tmp1283 * _tmp1289 * _tmp510 * _views_1_calibration[0] + _tmp1287 * _tmp1288;
  const Scalar _tmp1291 = (Scalar(1) / Scalar(2)) * _tmp514;
  const Scalar _tmp1292 = _tmp1290 * _tmp1291;
  const Scalar _tmp1293 =
      _tmp181 * _tmp516 * _tmp517 * std::pow(_tmp518, _tmp850) * _tmp520 / _tmp519;
  const Scalar _tmp1294 = _tmp521 / (_tmp515 * std::sqrt(_tmp515));
  const Scalar _tmp1295 = _tmp1287 * _tmp522 + _tmp1292 * _tmp1293 - _tmp1292 * _tmp1294;
  const Scalar _tmp1296 = _tmp156 * _tmp826 + _tmp160 * _tmp828 + _tmp164 * _tmp834;
  const Scalar _tmp1297 =
      ((((_tmp168 + _tmp42) > 0) - ((_tmp168 + _tmp42) < 0)) + 1) / std::pow(_tmp169, Scalar(2));
  const Scalar _tmp1298 = _tmp1297 * _tmp174;
  const Scalar _tmp1299 = _tmp1298 * _tmp838;
  const Scalar _tmp1300 = -_tmp1296 * _tmp1299 + _tmp175 * (_tmp160 * _tmp843 + _tmp167);
  const Scalar _tmp1301 = 2 * _tmp176;
  const Scalar _tmp1302 = _tmp1297 * _tmp166;
  const Scalar _tmp1303 =
      -_tmp1296 * _tmp1302 * _tmp172 * _views_1_calibration[0] + _tmp1300 * _tmp1301;
  const Scalar _tmp1304 = (Scalar(1) / Scalar(2)) * _tmp172;
  const Scalar _tmp1305 =
      _tmp178 * _tmp179 * _tmp180 * _tmp181 * std::pow(_tmp185, _tmp850) / _tmp190;
  const Scalar _tmp1306 = _tmp1304 * _tmp1305;
  const Scalar _tmp1307 = _tmp1302 * _tmp853;
  const Scalar _tmp1308 = _tmp191 / (_tmp177 * std::sqrt(_tmp177));
  const Scalar _tmp1309 = _tmp1304 * _tmp1308;
  const Scalar _tmp1310 =
      -_tmp1296 * _tmp1307 * _tmp192 + _tmp1303 * _tmp1306 - _tmp1303 * _tmp1309;
  const Scalar _tmp1311 = _tmp1069 * _tmp853;
  const Scalar _tmp1312 = (Scalar(1) / Scalar(2)) * _tmp720;
  const Scalar _tmp1313 = _tmp1076 * _tmp1312;
  const Scalar _tmp1314 = _tmp1078 * _tmp1312;
  const Scalar _tmp1315 =
      -_tmp1067 * _tmp1311 * _tmp732 + _tmp1074 * _tmp1313 - _tmp1074 * _tmp1314;
  const Scalar _tmp1316 = _tmp74 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1317 = _tmp85 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1318 =
      _tmp1013 * priors_1_0_sqrt_info(2, 2) - _tmp1316 * _tmp900 + _tmp1316 * _tmp909 +
      _tmp1317 * _tmp909 + _tmp856 * priors_1_0_sqrt_info(2, 5) +
      _tmp887 * priors_1_0_sqrt_info(2, 1) + _tmp888 * priors_1_0_sqrt_info(2, 4) +
      _tmp893 * priors_1_0_sqrt_info(2, 0) - _tmp901 * priors_1_0_sqrt_info(2, 0) -
      _tmp902 * priors_1_0_sqrt_info(2, 2) + _tmp911 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1319 = _tmp74 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1320 = _tmp85 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp1321 =
      _tmp1013 * priors_1_0_sqrt_info(0, 2) - _tmp1014 * priors_1_0_sqrt_info(0, 1) +
      _tmp1319 * _tmp909 + _tmp1320 * _tmp909 + _tmp82 * _tmp886 +
      _tmp856 * priors_1_0_sqrt_info(0, 5) + _tmp888 * priors_1_0_sqrt_info(0, 4) +
      _tmp893 * priors_1_0_sqrt_info(0, 0) - _tmp901 * priors_1_0_sqrt_info(0, 0) -
      _tmp902 * priors_1_0_sqrt_info(0, 2) + _tmp911 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1322 = (Scalar(1) / Scalar(2)) * _tmp176;
  const Scalar _tmp1323 = _tmp1305 * _tmp1322;
  const Scalar _tmp1324 = _tmp1308 * _tmp1322;
  const Scalar _tmp1325 = _tmp1300 * _tmp192 + _tmp1303 * _tmp1323 - _tmp1303 * _tmp1324;
  const Scalar _tmp1326 = _tmp1181 * _tmp574;
  const Scalar _tmp1327 = _tmp1184 * _tmp574;
  const Scalar _tmp1328 = _tmp1177 * _tmp582 - _tmp1179 * _tmp1326 + _tmp1179 * _tmp1327;
  const Scalar _tmp1329 = _tmp1263 * _tmp424;
  const Scalar _tmp1330 = _tmp1267 * _tmp424;
  const Scalar _tmp1331 = _tmp1259 * _tmp432 + _tmp1261 * _tmp1329 - _tmp1261 * _tmp1330;
  const Scalar _tmp1332 = (Scalar(1) / Scalar(2)) * _tmp214;
  const Scalar _tmp1333 = _tmp1148 * _tmp1332;
  const Scalar _tmp1334 = _tmp1146 * _tmp1332;
  const Scalar _tmp1335 = _tmp1139 * _tmp222 + _tmp1144 * _tmp1333 - _tmp1144 * _tmp1334;
  const Scalar _tmp1336 = _tmp74 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp1337 = _tmp85 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1338 = _tmp88 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1339 =
      _tmp1013 * priors_1_0_sqrt_info(1, 2) - _tmp1014 * priors_1_0_sqrt_info(1, 1) +
      _tmp1336 * _tmp909 + _tmp1337 * _tmp909 + _tmp1338 * _tmp909 +
      _tmp856 * priors_1_0_sqrt_info(1, 5) + _tmp887 * priors_1_0_sqrt_info(1, 1) +
      _tmp888 * priors_1_0_sqrt_info(1, 4) + _tmp893 * priors_1_0_sqrt_info(1, 0) -
      _tmp901 * priors_1_0_sqrt_info(1, 0) - _tmp902 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1340 = (Scalar(1) / Scalar(2)) * _tmp510;
  const Scalar _tmp1341 = _tmp1293 * _tmp1340;
  const Scalar _tmp1342 = _tmp1289 * _tmp853;
  const Scalar _tmp1343 = _tmp1294 * _tmp1340;
  const Scalar _tmp1344 =
      -_tmp1283 * _tmp1342 * _tmp522 + _tmp1290 * _tmp1341 - _tmp1290 * _tmp1343;
  const Scalar _tmp1345 = -_priors_1_0_target_T_src[2] * _tmp943;
  const Scalar _tmp1346 = _priors_1_0_target_T_src[1] * _tmp945 + _tmp1345 - _tmp894 + _tmp895;
  const Scalar _tmp1347 = _tmp1346 * _tmp892;
  const Scalar _tmp1348 = _priors_1_0_target_T_src[3] * _tmp943;
  const Scalar _tmp1349 = _priors_1_0_target_T_src[0] * _tmp945 + _tmp1348 + _tmp903 + _tmp904;
  const Scalar _tmp1350 = _tmp1349 * _tmp899;
  const Scalar _tmp1351 = _tmp1350 * _tmp85;
  const Scalar _tmp1352 = _tmp1350 * _tmp74;
  const Scalar _tmp1353 = _tmp1350 * _tmp88;
  const Scalar _tmp1354 = _tmp1349 * _tmp908;
  const Scalar _tmp1355 = _priors_1_0_target_T_src[1] * _tmp943;
  const Scalar _tmp1356 = -_priors_1_0_target_T_src[2] * _tmp945 - _tmp1355 + _tmp889 + _tmp890;
  const Scalar _tmp1357 = _tmp1356 * _tmp892;
  const Scalar _tmp1358 = -_tmp100;
  const Scalar _tmp1359 = _tmp1358 + _tmp829 + _tmp832 + _tmp97;
  const Scalar _tmp1360 =
      -_tmp119 - _tmp121 + _tmp122 + _tmp1359 * _views_0_pose[4] - _tmp1359 * _views_1_pose[4];
  const Scalar _tmp1361 = _tmp827 + _tmp92;
  const Scalar _tmp1362 = _tmp111 + _tmp1358;
  const Scalar _tmp1363 = _tmp1362 + _tmp831;
  const Scalar _tmp1364 = -_tmp115;
  const Scalar _tmp1365 = _tmp117 + _tmp1364;
  const Scalar _tmp1366 = _tmp1361 * _views_0_pose[5] - _tmp1361 * _views_1_pose[5] +
                          _tmp1363 * _views_0_pose[6] - _tmp1363 * _views_1_pose[6] +
                          _tmp1365 * _views_0_pose[4] - _tmp1365 * _views_1_pose[4];
  const Scalar _tmp1367 = _priors_1_0_target_T_src[0] * _tmp943;
  const Scalar _tmp1368 =
      _tmp892 * (_priors_1_0_target_T_src[3] * _tmp945 - _tmp1367 + _tmp862 + _tmp873);
  const Scalar _tmp1369 =
      _tmp1336 * _tmp1354 + _tmp1337 * _tmp1354 + _tmp1338 * _tmp1354 +
      _tmp1347 * priors_1_0_sqrt_info(1, 2) - _tmp1351 * priors_1_0_sqrt_info(1, 2) -
      _tmp1352 * priors_1_0_sqrt_info(1, 1) - _tmp1353 * priors_1_0_sqrt_info(1, 0) +
      _tmp1357 * priors_1_0_sqrt_info(1, 1) + _tmp1360 * priors_1_0_sqrt_info(1, 5) +
      _tmp1366 * priors_1_0_sqrt_info(1, 3) + _tmp1368 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1370 = _tmp1359 * _tmp320 + _tmp323;
  const Scalar _tmp1371 = -_tmp1229 * _tmp1370 +
                          _tmp329 * (_tmp1361 * _tmp321 + _tmp1363 * _tmp322 + _tmp1365 * _tmp320);
  const Scalar _tmp1372 = 2 * _tmp330;
  const Scalar _tmp1373 =
      -_tmp1098 * _tmp1370 * _tmp334 * _views_1_calibration[1] + _tmp1371 * _tmp1372;
  const Scalar _tmp1374 = -_tmp1227 * _tmp1373 + _tmp1228 * _tmp1373 + _tmp1371 * _tmp342;
  const Scalar _tmp1375 = _tmp1359 * _tmp500 + _tmp503;
  const Scalar _tmp1376 = _tmp1285 * _tmp1375;
  const Scalar _tmp1377 = -_tmp1342 * _tmp1375 +
                          _tmp509 * (_tmp1361 * _tmp502 + _tmp1363 * _tmp501 + _tmp1365 * _tmp500);
  const Scalar _tmp1378 = 2 * _tmp510;
  const Scalar _tmp1379 = -_tmp1376 * _tmp514 * _views_1_calibration[1] + _tmp1377 * _tmp1378;
  const Scalar _tmp1380 = _tmp1291 * _tmp1294;
  const Scalar _tmp1381 = _tmp1291 * _tmp1293;
  const Scalar _tmp1382 = -_tmp1376 * _tmp522 * _tmp838 - _tmp1379 * _tmp1380 + _tmp1379 * _tmp1381;
  const Scalar _tmp1383 = _tmp1359 * _tmp230 + _tmp233;
  const Scalar _tmp1384 = _tmp853 * _tmp934;
  const Scalar _tmp1385 = -_tmp1383 * _tmp1384 +
                          _tmp239 * (_tmp1361 * _tmp232 + _tmp1363 * _tmp231 + _tmp1365 * _tmp230);
  const Scalar _tmp1386 = 2 * _tmp240;
  const Scalar _tmp1387 = _tmp1383 * _tmp930;
  const Scalar _tmp1388 = _tmp1385 * _tmp1386 - _tmp1387 * _tmp244 * _views_1_calibration[1];
  const Scalar _tmp1389 = _tmp1388 * _tmp940;
  const Scalar _tmp1390 = -_tmp1387 * _tmp252 * _tmp838 + _tmp1388 * _tmp939 - _tmp1389 * _tmp937;
  const Scalar _tmp1391 = _tmp1020 * (_tmp1359 * _tmp590 + _tmp593);
  const Scalar _tmp1392 = _tmp1391 * _tmp602;
  const Scalar _tmp1393 = -_tmp1031 * _tmp1391 +
                          _tmp599 * (_tmp1361 * _tmp591 + _tmp1363 * _tmp592 + _tmp1365 * _tmp590);
  const Scalar _tmp1394 = 2 * _tmp600;
  const Scalar _tmp1395 = -_tmp1392 * _tmp604 * _views_1_calibration[1] + _tmp1393 * _tmp1394;
  const Scalar _tmp1396 = _tmp1188 * _tmp1395 - _tmp1189 * _tmp1395 - _tmp1392 * _tmp612 * _tmp838;
  const Scalar _tmp1397 = _tmp1359 * _tmp380 + _tmp383;
  const Scalar _tmp1398 = _tmp1153 * _tmp853;
  const Scalar _tmp1399 = -_tmp1397 * _tmp1398 +
                          _tmp389 * (_tmp1361 * _tmp381 + _tmp1363 * _tmp382 + _tmp1365 * _tmp380);
  const Scalar _tmp1400 = 2 * _tmp390;
  const Scalar _tmp1401 =
      -Scalar(1) / Scalar(2) * _tmp1155 * _tmp1397 * _tmp394 * _views_1_calibration[1] +
      (Scalar(1) / Scalar(2)) * _tmp1399 * _tmp1400;
  const Scalar _tmp1402 = _tmp1231 * _tmp181;
  const Scalar _tmp1403 = -_tmp1232 * _tmp1401 + _tmp1399 * _tmp402 + _tmp1401 * _tmp1402;
  const Scalar _tmp1404 = _tmp1359 * _tmp680 + _tmp683;
  const Scalar _tmp1405 = _tmp1000 * _tmp1404;
  const Scalar _tmp1406 = -_tmp1114 * _tmp1404 +
                          _tmp689 * (_tmp1361 * _tmp681 + _tmp1363 * _tmp682 + _tmp1365 * _tmp680);
  const Scalar _tmp1407 = 2 * _tmp690;
  const Scalar _tmp1408 = -_tmp1405 * _tmp694 * _views_1_calibration[1] + _tmp1406 * _tmp1407;
  const Scalar _tmp1409 = -_tmp1113 * _tmp1408 + _tmp1115 * _tmp1408 + _tmp1406 * _tmp702;
  const Scalar _tmp1410 = _tmp82 * _tmp885;
  const Scalar _tmp1411 = _tmp1354 * _tmp88;
  const Scalar _tmp1412 =
      _tmp1319 * _tmp1354 + _tmp1320 * _tmp1354 + _tmp1347 * priors_1_0_sqrt_info(0, 2) -
      _tmp1351 * priors_1_0_sqrt_info(0, 2) - _tmp1352 * priors_1_0_sqrt_info(0, 1) -
      _tmp1353 * priors_1_0_sqrt_info(0, 0) + _tmp1356 * _tmp1410 +
      _tmp1360 * priors_1_0_sqrt_info(0, 5) + _tmp1366 * priors_1_0_sqrt_info(0, 3) +
      _tmp1368 * priors_1_0_sqrt_info(0, 0) + _tmp1411 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1413 = _tmp1359 * _tmp350 + _tmp353;
  const Scalar _tmp1414 = _tmp853 * _tmp915;
  const Scalar _tmp1415 = -_tmp1413 * _tmp1414 +
                          _tmp359 * (_tmp1361 * _tmp352 + _tmp1363 * _tmp351 + _tmp1365 * _tmp350);
  const Scalar _tmp1416 = 2 * _tmp360;
  const Scalar _tmp1417 = _tmp1413 * _tmp917;
  const Scalar _tmp1418 = _tmp1415 * _tmp1416 - _tmp1417 * _tmp364 * _views_1_calibration[1];
  const Scalar _tmp1419 = -_tmp1017 * _tmp1418 + _tmp1018 * _tmp1418 - _tmp1417 * _tmp372 * _tmp838;
  const Scalar _tmp1420 = _tmp1359 * _tmp470 + _tmp473;
  const Scalar _tmp1421 = -_tmp1420 * _tmp854 +
                          _tmp479 * (_tmp1361 * _tmp472 + _tmp1363 * _tmp471 + _tmp1365 * _tmp470);
  const Scalar _tmp1422 = 2 * _tmp480;
  const Scalar _tmp1423 =
      -_tmp1420 * _tmp484 * _tmp839 * _views_1_calibration[1] + _tmp1421 * _tmp1422;
  const Scalar _tmp1424 = _tmp1047 * _tmp1423 - _tmp1048 * _tmp1423 - _tmp1420 * _tmp492 * _tmp840;
  const Scalar _tmp1425 = _tmp1256 * (_tmp1359 * _tmp410 + _tmp413);
  const Scalar _tmp1426 = _tmp1425 * _tmp422;
  const Scalar _tmp1427 = -_tmp1265 * _tmp1425 +
                          _tmp419 * (_tmp1361 * _tmp412 + _tmp1363 * _tmp411 + _tmp1365 * _tmp410);
  const Scalar _tmp1428 = 2 * _tmp420;
  const Scalar _tmp1429 = -_tmp1426 * _tmp424 * _views_1_calibration[1] + _tmp1427 * _tmp1428;
  const Scalar _tmp1430 = _tmp1329 * _tmp1429 - _tmp1330 * _tmp1429 - _tmp1426 * _tmp432 * _tmp838;
  const Scalar _tmp1431 = _tmp1359 * _tmp620 + _tmp623;
  const Scalar _tmp1432 = -_tmp1131 * _tmp1431 +
                          _tmp629 * (_tmp1361 * _tmp621 + _tmp1363 * _tmp622 + _tmp1365 * _tmp620);
  const Scalar _tmp1433 = 2 * _tmp630;
  const Scalar _tmp1434 = _tmp1119 * _tmp1431;
  const Scalar _tmp1435 = _tmp1432 * _tmp1433 - _tmp1434 * _tmp634 * _views_1_calibration[1];
  const Scalar _tmp1436 = _tmp1128 * _tmp1132;
  const Scalar _tmp1437 = _tmp1133 * _tmp1435 + _tmp1432 * _tmp642 - _tmp1435 * _tmp1436;
  const Scalar _tmp1438 =
      _tmp1011 * _tmp1354 + _tmp1012 * _tmp1354 + _tmp1347 * priors_1_0_sqrt_info(4, 2) -
      _tmp1351 * priors_1_0_sqrt_info(4, 2) - _tmp1352 * priors_1_0_sqrt_info(4, 1) -
      _tmp1353 * priors_1_0_sqrt_info(4, 0) + _tmp1357 * priors_1_0_sqrt_info(4, 1) +
      _tmp1360 * priors_1_0_sqrt_info(4, 5) + _tmp1366 * priors_1_0_sqrt_info(4, 3) +
      _tmp1368 * priors_1_0_sqrt_info(4, 0) + _tmp1411 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1439 = _tmp1359 * _tmp710 + _tmp713;
  const Scalar _tmp1440 = _tmp1070 * _tmp1439;
  const Scalar _tmp1441 = -_tmp1311 * _tmp1439 +
                          _tmp719 * (_tmp1361 * _tmp712 + _tmp1363 * _tmp711 + _tmp1365 * _tmp710);
  const Scalar _tmp1442 = 2 * _tmp720;
  const Scalar _tmp1443 = -_tmp1440 * _tmp724 * _views_1_calibration[1] + _tmp1441 * _tmp1442;
  const Scalar _tmp1444 = _tmp1313 * _tmp1443 - _tmp1314 * _tmp1443 + _tmp1441 * _tmp732;
  const Scalar _tmp1445 = _tmp1359 * _tmp290 + _tmp293;
  const Scalar _tmp1446 = -_tmp1281 * _tmp1445 +
                          _tmp299 * (_tmp1361 * _tmp292 + _tmp1363 * _tmp291 + _tmp1365 * _tmp290);
  const Scalar _tmp1447 = 2 * _tmp300;
  const Scalar _tmp1448 =
      -_tmp1193 * _tmp1445 * _tmp304 * _views_1_calibration[1] + _tmp1446 * _tmp1447;
  const Scalar _tmp1449 = _tmp1279 * _tmp1448 - _tmp1280 * _tmp1448 + _tmp1446 * _tmp312;
  const Scalar _tmp1450 = -_tmp868 + _tmp869 - _tmp870 + _tmp871;
  const Scalar _tmp1451 = _priors_0_1_target_T_src[0] * _tmp878;
  const Scalar _tmp1452 = _priors_0_1_target_T_src[2] * _tmp1450 + _tmp1451 + _tmp974;
  const Scalar _tmp1453 = _tmp1452 * _tmp58;
  const Scalar _tmp1454 = _tmp1452 * _tmp950;
  const Scalar _tmp1455 = _tmp1454 * _tmp958;
  const Scalar _tmp1456 = _tmp1453 * _tmp950;
  const Scalar _tmp1457 = _tmp1452 * _tmp953;
  const Scalar _tmp1458 = _priors_0_1_target_T_src[1] * _tmp878;
  const Scalar _tmp1459 = _priors_0_1_target_T_src[3] * _tmp1450 + _tmp1458 - _tmp944 - _tmp947;
  const Scalar _tmp1460 = _priors_0_1_target_T_src[3] * _tmp878 + _tmp967;
  const Scalar _tmp1461 = _tmp50 * (-_priors_0_1_target_T_src[1] * _tmp1450 + _tmp1460 - _tmp968);
  const Scalar _tmp1462 = -_priors_0_1_target_T_src[2] * _tmp878;
  const Scalar _tmp1463 = _priors_0_1_target_T_src[0] * _tmp1450 + _tmp1462 + _tmp977 + _tmp978;
  const Scalar _tmp1464 = _tmp1463 * _tmp50;
  const Scalar _tmp1465 = _tmp1235 * _tmp1456 - _tmp1237 * _tmp1453 + _tmp1238 * _tmp1455 -
                          _tmp1238 * _tmp1457 + _tmp1455 * _tmp64 - _tmp1457 * _tmp64 +
                          _tmp1459 * _tmp67 + _tmp1461 * priors_0_1_sqrt_info(3, 0) +
                          _tmp1464 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1466 = -_tmp1240 * _tmp1389 + _tmp1242 * _tmp1388 + _tmp1385 * _tmp252;
  const Scalar _tmp1467 = _tmp1077 * _tmp1443 - _tmp1079 * _tmp1443 - _tmp1440 * _tmp732 * _tmp838;
  const Scalar _tmp1468 = _tmp1455 * _tmp52;
  const Scalar _tmp1469 = _tmp1453 * _tmp953;
  const Scalar _tmp1470 = _tmp1457 * _tmp39;
  const Scalar _tmp1471 = _tmp1457 * _tmp52;
  const Scalar _tmp1472 = _tmp1459 * _tmp50;
  const Scalar _tmp1473 = _tmp958 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1474 =
      _tmp1110 * _tmp1454 + _tmp1456 * _tmp1473 + _tmp1461 * priors_0_1_sqrt_info(0, 0) +
      _tmp1464 * priors_0_1_sqrt_info(0, 1) + _tmp1468 * priors_0_1_sqrt_info(0, 1) -
      _tmp1469 * priors_0_1_sqrt_info(0, 2) - _tmp1470 * priors_0_1_sqrt_info(0, 0) -
      _tmp1471 * priors_0_1_sqrt_info(0, 1) + _tmp1472 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1475 = _tmp1359 * _tmp200 + _tmp203;
  const Scalar _tmp1476 = (Scalar(1) / Scalar(2)) * _tmp1142;
  const Scalar _tmp1477 = -_tmp1475 * _tmp1476 +
                          _tmp209 * (_tmp1361 * _tmp202 + _tmp1363 * _tmp201 + _tmp1365 * _tmp200);
  const Scalar _tmp1478 = 2 * _tmp210;
  const Scalar _tmp1479 = _tmp1137 * _tmp1475;
  const Scalar _tmp1480 = _tmp1477 * _tmp1478 - _tmp1479 * _tmp214 * _views_1_calibration[1];
  const Scalar _tmp1481 = _tmp1333 * _tmp1480 - _tmp1334 * _tmp1480 - _tmp1479 * _tmp222 * _tmp838;
  const Scalar _tmp1482 = _tmp1007 * _tmp1408 - _tmp1009 * _tmp1408 - _tmp1405 * _tmp702 * _tmp838;
  const Scalar _tmp1483 =
      _tmp1168 * _tmp1354 + _tmp1169 * _tmp1354 + _tmp1347 * priors_1_0_sqrt_info(5, 2) -
      _tmp1351 * priors_1_0_sqrt_info(5, 2) - _tmp1352 * priors_1_0_sqrt_info(5, 1) -
      _tmp1353 * priors_1_0_sqrt_info(5, 0) + _tmp1357 * priors_1_0_sqrt_info(5, 1) +
      _tmp1360 * priors_1_0_sqrt_info(5, 5) + _tmp1366 * priors_1_0_sqrt_info(5, 3) +
      _tmp1368 * priors_1_0_sqrt_info(5, 0) + _tmp1411 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1484 = _tmp1359 * _tmp530 + _tmp533;
  const Scalar _tmp1485 = _tmp1207 * _tmp853;
  const Scalar _tmp1486 = -_tmp1484 * _tmp1485 +
                          _tmp539 * (_tmp1361 * _tmp531 + _tmp1363 * _tmp532 + _tmp1365 * _tmp530);
  const Scalar _tmp1487 = 2 * _tmp540;
  const Scalar _tmp1488 =
      -_tmp1209 * _tmp1484 * _tmp544 * _views_1_calibration[1] + _tmp1486 * _tmp1487;
  const Scalar _tmp1489 = _tmp1217 * _tmp1220;
  const Scalar _tmp1490 =
      -_tmp1210 * _tmp1484 * _tmp552 + _tmp1221 * _tmp1488 - _tmp1488 * _tmp1489;
  const Scalar _tmp1491 = _tmp1359 * _tmp440 + _tmp443;
  const Scalar _tmp1492 = -_tmp1084 * _tmp1491 +
                          _tmp449 * (_tmp1361 * _tmp441 + _tmp1363 * _tmp442 + _tmp1365 * _tmp440);
  const Scalar _tmp1493 = _tmp1085 * _tmp1491;
  const Scalar _tmp1494 = 2 * _tmp450;
  const Scalar _tmp1495 = _tmp1492 * _tmp1494 - _tmp1493 * _tmp454 * _views_1_calibration[1];
  const Scalar _tmp1496 = _tmp1092 * _tmp1495 - _tmp1094 * _tmp1495 + _tmp1492 * _tmp462;
  const Scalar _tmp1497 =
      _tmp1454 * _tmp960 + _tmp1455 * _tmp961 + _tmp1456 * _tmp958 * priors_0_1_sqrt_info(2, 2) -
      _tmp1457 * _tmp961 + _tmp1461 * priors_0_1_sqrt_info(2, 0) +
      _tmp1464 * priors_0_1_sqrt_info(2, 1) - _tmp1469 * priors_0_1_sqrt_info(2, 2) -
      _tmp1470 * priors_0_1_sqrt_info(2, 0) + _tmp1472 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1498 = -_tmp1147 * _tmp1480 + _tmp1149 * _tmp1480 + _tmp1477 * _tmp222;
  const Scalar _tmp1499 = _tmp1051 * (_tmp1359 * _tmp740 + _tmp743);
  const Scalar _tmp1500 = -_tmp1244 * _tmp1499 +
                          _tmp749 * (_tmp1361 * _tmp741 + _tmp1363 * _tmp742 + _tmp1365 * _tmp740);
  const Scalar _tmp1501 = _tmp1499 * _tmp752;
  const Scalar _tmp1502 = 2 * _tmp750;
  const Scalar _tmp1503 = _tmp1500 * _tmp1502 - _tmp1501 * _tmp754 * _views_1_calibration[1];
  const Scalar _tmp1504 = -_tmp1247 * _tmp1503 + _tmp1248 * _tmp1503 + _tmp1500 * _tmp762;
  const Scalar _tmp1505 = _tmp1341 * _tmp1379 - _tmp1343 * _tmp1379 + _tmp1377 * _tmp522;
  const Scalar _tmp1506 = _tmp1270 * _tmp1495;
  const Scalar _tmp1507 = _tmp1091 * _tmp1506 - _tmp1093 * _tmp1506 - _tmp1493 * _tmp462 * _tmp838;
  const Scalar _tmp1508 = _tmp1415 * _tmp372 + _tmp1418 * _tmp924 - _tmp1418 * _tmp926;
  const Scalar _tmp1509 = -_tmp1028 * _tmp1395 + _tmp1030 * _tmp1395 + _tmp1393 * _tmp612;
  const Scalar _tmp1510 = _tmp1359 * _tmp650 + _tmp653;
  const Scalar _tmp1511 = _tmp1033 * _tmp654;
  const Scalar _tmp1512 = _tmp1511 * _tmp853;
  const Scalar _tmp1513 = -_tmp1510 * _tmp1512 +
                          _tmp659 * (_tmp1361 * _tmp651 + _tmp1363 * _tmp652 + _tmp1365 * _tmp650);
  const Scalar _tmp1514 = _tmp1033 * _tmp662;
  const Scalar _tmp1515 = 2 * _tmp660;
  const Scalar _tmp1516 =
      -_tmp1510 * _tmp1514 * _tmp664 * _views_1_calibration[1] + _tmp1513 * _tmp1515;
  const Scalar _tmp1517 = _tmp1042 * _tmp1516 - _tmp1044 * _tmp1516 + _tmp1513 * _tmp672;
  const Scalar _tmp1518 = _tmp1359 * _tmp260 + _tmp263;
  const Scalar _tmp1519 = _tmp1518 * _tmp986;
  const Scalar _tmp1520 = -_tmp1518 * _tmp985 +
                          _tmp269 * (_tmp1361 * _tmp261 + _tmp1363 * _tmp262 + _tmp1365 * _tmp260);
  const Scalar _tmp1521 = 2 * _tmp270;
  const Scalar _tmp1522 = -_tmp1519 * _tmp274 * _views_1_calibration[1] + _tmp1520 * _tmp1521;
  const Scalar _tmp1523 = -_tmp1275 * _tmp1522 + _tmp1276 * _tmp1522 - _tmp1519 * _tmp282 * _tmp838;
  const Scalar _tmp1524 = _tmp1359 * _tmp156 + _tmp165;
  const Scalar _tmp1525 = -_tmp1307 * _tmp1524 +
                          _tmp171 * (_tmp1361 * _tmp164 + _tmp1363 * _tmp160 + _tmp1365 * _tmp156);
  const Scalar _tmp1526 = 2 * _tmp172;
  const Scalar _tmp1527 =
      -_tmp1298 * _tmp1524 * _tmp176 * _views_1_calibration[1] + _tmp1525 * _tmp1526;
  const Scalar _tmp1528 =
      -_tmp1299 * _tmp1524 * _tmp192 + _tmp1323 * _tmp1527 - _tmp1324 * _tmp1527;
  const Scalar _tmp1529 = _tmp958 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1530 =
      _tmp1063 * _tmp1455 - _tmp1063 * _tmp1457 + _tmp1456 * _tmp1529 +
      _tmp1461 * priors_0_1_sqrt_info(1, 0) + _tmp1463 * _tmp61 +
      _tmp1468 * priors_0_1_sqrt_info(1, 1) - _tmp1469 * priors_0_1_sqrt_info(1, 2) -
      _tmp1471 * priors_0_1_sqrt_info(1, 1) + _tmp1472 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1531 =
      -_tmp1156 * _tmp1397 * _tmp402 - _tmp1161 * _tmp1401 + _tmp1164 * _tmp1401 * _tmp181;
  const Scalar _tmp1532 = _tmp1359 * _tmp560 + _tmp563;
  const Scalar _tmp1533 = -_tmp1174 * _tmp1532 +
                          _tmp569 * (_tmp1361 * _tmp561 + _tmp1363 * _tmp562 + _tmp1365 * _tmp560);
  const Scalar _tmp1534 = 2 * _tmp570;
  const Scalar _tmp1535 =
      -_tmp1175 * _tmp1532 * _tmp574 * _views_1_calibration[1] + _tmp1533 * _tmp1534;
  const Scalar _tmp1536 =
      -_tmp1176 * _tmp1532 * _tmp582 - _tmp1326 * _tmp1535 + _tmp1327 * _tmp1535;
  const Scalar _tmp1537 = _tmp1306 * _tmp1527 - _tmp1309 * _tmp1527 + _tmp1525 * _tmp192;
  const Scalar _tmp1538 =
      _tmp1346 * _tmp907 - _tmp1350 * _tmp137 - _tmp1351 * priors_1_0_sqrt_info(3, 2) -
      _tmp1353 * priors_1_0_sqrt_info(3, 0) + _tmp1354 * _tmp137 + _tmp1354 * _tmp910 +
      _tmp1357 * priors_1_0_sqrt_info(3, 1) + _tmp1360 * priors_1_0_sqrt_info(3, 5) +
      _tmp1366 * priors_1_0_sqrt_info(3, 3) + _tmp1368 * priors_1_0_sqrt_info(3, 0) +
      _tmp1411 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1539 = _tmp958 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1540 =
      _tmp1223 * _tmp1454 + _tmp1224 * _tmp1455 + _tmp1456 * _tmp1539 +
      _tmp1461 * priors_0_1_sqrt_info(4, 0) + _tmp1464 * priors_0_1_sqrt_info(4, 1) -
      _tmp1469 * priors_0_1_sqrt_info(4, 2) - _tmp1470 * priors_0_1_sqrt_info(4, 0) -
      _tmp1471 * priors_0_1_sqrt_info(4, 1) + _tmp1472 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1541 = _tmp1043 * _tmp1250;
  const Scalar _tmp1542 = _tmp1041 * _tmp1250;
  const Scalar _tmp1543 = _tmp1033 * _tmp1035;
  const Scalar _tmp1544 =
      -_tmp1510 * _tmp1543 * _tmp672 - _tmp1516 * _tmp1541 + _tmp1516 * _tmp1542;
  const Scalar _tmp1545 = _tmp1058 * _tmp1060;
  const Scalar _tmp1546 = _tmp1058 * _tmp1061;
  const Scalar _tmp1547 = -_tmp1501 * _tmp762 * _tmp838 + _tmp1503 * _tmp1545 - _tmp1503 * _tmp1546;
  const Scalar _tmp1548 =
      -_tmp1194 * _tmp1445 * _tmp312 + _tmp1201 * _tmp1448 - _tmp1203 * _tmp1448;
  const Scalar _tmp1549 =
      -_tmp1099 * _tmp1370 * _tmp342 - _tmp1106 * _tmp1373 + _tmp1108 * _tmp1373;
  const Scalar _tmp1550 = -_tmp1182 * _tmp1535 + _tmp1185 * _tmp1535 + _tmp1533 * _tmp582;
  const Scalar _tmp1551 = _tmp958 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1552 =
      _tmp1253 * _tmp1455 + _tmp1254 * _tmp1454 + _tmp1456 * _tmp1551 +
      _tmp1461 * priors_0_1_sqrt_info(5, 0) + _tmp1464 * priors_0_1_sqrt_info(5, 1) -
      _tmp1469 * priors_0_1_sqrt_info(5, 2) - _tmp1470 * priors_0_1_sqrt_info(5, 0) -
      _tmp1471 * priors_0_1_sqrt_info(5, 1) + _tmp1472 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1553 = _tmp1125 * _tmp1128;
  const Scalar _tmp1554 = _tmp1127 * _tmp1435 - _tmp1434 * _tmp642 * _tmp838 - _tmp1435 * _tmp1553;
  const Scalar _tmp1555 = _tmp1520 * _tmp282 + _tmp1522 * _tmp993 - _tmp1522 * _tmp995;
  const Scalar _tmp1556 = _tmp1214 * _tmp1217;
  const Scalar _tmp1557 = _tmp1216 * _tmp1488 + _tmp1486 * _tmp552 - _tmp1488 * _tmp1556;
  const Scalar _tmp1558 = _tmp1421 * _tmp492 - _tmp1423 * _tmp849 + _tmp1423 * _tmp852;
  const Scalar _tmp1559 = _tmp1264 * _tmp1429 - _tmp1268 * _tmp1429 + _tmp1427 * _tmp432;
  const Scalar _tmp1560 =
      -_tmp1316 * _tmp1350 + _tmp1316 * _tmp1354 - _tmp1317 * _tmp1350 + _tmp1317 * _tmp1354 +
      _tmp1347 * priors_1_0_sqrt_info(2, 2) - _tmp1353 * priors_1_0_sqrt_info(2, 0) +
      _tmp1357 * priors_1_0_sqrt_info(2, 1) + _tmp1360 * priors_1_0_sqrt_info(2, 5) +
      _tmp1366 * priors_1_0_sqrt_info(2, 3) + _tmp1368 * priors_1_0_sqrt_info(2, 0) +
      _tmp1411 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1561 = _tmp950 * (_priors_0_1_target_T_src[0] * _tmp867 + _tmp1460 + _tmp969);
  const Scalar _tmp1562 = _tmp1561 * _tmp958;
  const Scalar _tmp1563 = _tmp1562 * _tmp52;
  const Scalar _tmp1564 = -_priors_0_1_target_T_src[2] * _tmp867 - _tmp1458 + _tmp948;
  const Scalar _tmp1565 = _tmp1561 * _tmp952;
  const Scalar _tmp1566 = _tmp1561 * _tmp58;
  const Scalar _tmp1567 = _tmp1566 * _tmp952;
  const Scalar _tmp1568 =
      _tmp50 * (_priors_0_1_target_T_src[3] * _tmp867 - _tmp1451 + _tmp972 - _tmp973);
  const Scalar _tmp1569 = _tmp1565 * _tmp52;
  const Scalar _tmp1570 = _tmp46 * (_priors_0_1_target_T_src[1] * _tmp867 + _tmp1462 + _tmp979);
  const Scalar _tmp1571 = _tmp1570 * _tmp49;
  const Scalar _tmp1572 =
      _tmp1063 * _tmp1562 - _tmp1063 * _tmp1565 + _tmp1529 * _tmp1566 +
      _tmp1563 * priors_0_1_sqrt_info(1, 1) + _tmp1564 * _tmp61 -
      _tmp1567 * priors_0_1_sqrt_info(1, 2) + _tmp1568 * priors_0_1_sqrt_info(1, 0) -
      _tmp1569 * priors_0_1_sqrt_info(1, 1) + _tmp1571 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp1573 = _tmp106 + _tmp825;
  const Scalar _tmp1574 = _tmp116 + _tmp1364;
  const Scalar _tmp1575 = _tmp100 + _tmp111 + _tmp830 + _tmp841;
  const Scalar _tmp1576 = _tmp663 * (_tmp1573 * _tmp651 + _tmp1574 * _tmp652 + _tmp1575 * _tmp650);
  const Scalar _tmp1577 = _tmp1362 + _tmp842;
  const Scalar _tmp1578 = _tmp659 * (_tmp1577 * _tmp651 + _tmp661);
  const Scalar _tmp1579 = _tmp1037 * _tmp1576 + _tmp1515 * _tmp1578;
  const Scalar _tmp1580 = -_tmp1541 * _tmp1579 + _tmp1542 * _tmp1579 + _tmp1576 * _tmp672;
  const Scalar _tmp1581 = _tmp599 * (_tmp1577 * _tmp591 + _tmp601);
  const Scalar _tmp1582 = _tmp603 * (_tmp1573 * _tmp591 + _tmp1574 * _tmp592 + _tmp1575 * _tmp590);
  const Scalar _tmp1583 = _tmp1024 * _tmp1582 + _tmp1394 * _tmp1581;
  const Scalar _tmp1584 = -_tmp1028 * _tmp1583 + _tmp1030 * _tmp1583 + _tmp1581 * _tmp612;
  const Scalar _tmp1585 = _tmp719 * (_tmp1577 * _tmp712 + _tmp721);
  const Scalar _tmp1586 = _tmp723 * (_tmp1573 * _tmp712 + _tmp1574 * _tmp711 + _tmp1575 * _tmp710);
  const Scalar _tmp1587 = _tmp1073 * _tmp1586 + _tmp1442 * _tmp1585;
  const Scalar _tmp1588 = _tmp1077 * _tmp1587 - _tmp1079 * _tmp1587 + _tmp1586 * _tmp732;
  const Scalar _tmp1589 = _tmp213 * (_tmp1573 * _tmp202 + _tmp1574 * _tmp201 + _tmp1575 * _tmp200);
  const Scalar _tmp1590 = _tmp209 * (_tmp1577 * _tmp202 + _tmp211);
  const Scalar _tmp1591 = _tmp1140 * _tmp1589 + _tmp1478 * _tmp1590;
  const Scalar _tmp1592 = _tmp1146 * _tmp1591;
  const Scalar _tmp1593 = -_tmp1332 * _tmp1592 + _tmp1333 * _tmp1591 + _tmp1589 * _tmp222;
  const Scalar _tmp1594 = _tmp389 * (_tmp1577 * _tmp381 + _tmp391);
  const Scalar _tmp1595 = _tmp393 * (_tmp1573 * _tmp381 + _tmp1574 * _tmp382 + _tmp1575 * _tmp380);
  const Scalar _tmp1596 =
      (Scalar(1) / Scalar(2)) * _tmp1158 * _tmp1595 + (Scalar(1) / Scalar(2)) * _tmp1400 * _tmp1594;
  const Scalar _tmp1597 = -_tmp1232 * _tmp1596 + _tmp1402 * _tmp1596 + _tmp1594 * _tmp402;
  const Scalar _tmp1598 = _tmp753 * (_tmp1573 * _tmp741 + _tmp1574 * _tmp742 + _tmp1575 * _tmp740);
  const Scalar _tmp1599 = _tmp749 * (_tmp1577 * _tmp741 + _tmp751);
  const Scalar _tmp1600 = _tmp1055 * _tmp1598 + _tmp1502 * _tmp1599;
  const Scalar _tmp1601 = _tmp1545 * _tmp1600 - _tmp1546 * _tmp1600 + _tmp1598 * _tmp762;
  const Scalar _tmp1602 = _tmp1564 * _tmp50;
  const Scalar _tmp1603 = _tmp1565 * _tmp39;
  const Scalar _tmp1604 = _tmp1561 * _tmp959;
  const Scalar _tmp1605 =
      _tmp1473 * _tmp1566 + _tmp1563 * priors_0_1_sqrt_info(0, 1) -
      _tmp1567 * priors_0_1_sqrt_info(0, 2) + _tmp1568 * priors_0_1_sqrt_info(0, 0) -
      _tmp1569 * priors_0_1_sqrt_info(0, 1) + _tmp1571 * priors_0_1_sqrt_info(0, 2) +
      _tmp1602 * priors_0_1_sqrt_info(0, 1) - _tmp1603 * priors_0_1_sqrt_info(0, 0) +
      _tmp1604 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1606 = _tmp453 * (_tmp1573 * _tmp441 + _tmp1574 * _tmp442 + _tmp1575 * _tmp440);
  const Scalar _tmp1607 = _tmp449 * (_tmp1577 * _tmp441 + _tmp451);
  const Scalar _tmp1608 = _tmp1088 * _tmp1606 + _tmp1494 * _tmp1607;
  const Scalar _tmp1609 = _tmp1092 * _tmp1608 - _tmp1094 * _tmp1608 + _tmp1607 * _tmp462;
  const Scalar _tmp1610 = -_tmp1271 * _tmp1608 + _tmp1272 * _tmp1608 + _tmp1606 * _tmp462;
  const Scalar _tmp1611 = _tmp239 * (_tmp1577 * _tmp232 + _tmp241);
  const Scalar _tmp1612 = _tmp243 * (_tmp1573 * _tmp232 + _tmp1574 * _tmp231 + _tmp1575 * _tmp230);
  const Scalar _tmp1613 = _tmp1386 * _tmp1611 + _tmp1612 * _tmp933;
  const Scalar _tmp1614 = _tmp1612 * _tmp252 + _tmp1613 * _tmp939 - _tmp1613 * _tmp941;
  const Scalar _tmp1615 = _tmp333 * (_tmp1573 * _tmp321 + _tmp1574 * _tmp322 + _tmp1575 * _tmp320);
  const Scalar _tmp1616 = _tmp329 * (_tmp1577 * _tmp321 + _tmp331);
  const Scalar _tmp1617 = _tmp1101 * _tmp1615 + _tmp1372 * _tmp1616;
  const Scalar _tmp1618 = -_tmp1106 * _tmp1617 + _tmp1108 * _tmp1617 + _tmp1615 * _tmp342;
  const Scalar _tmp1619 = _tmp303 * (_tmp1573 * _tmp292 + _tmp1574 * _tmp291 + _tmp1575 * _tmp290);
  const Scalar _tmp1620 = _tmp299 * (_tmp1577 * _tmp292 + _tmp301);
  const Scalar _tmp1621 = _tmp1197 * _tmp1619 + _tmp1447 * _tmp1620;
  const Scalar _tmp1622 = _tmp1202 * _tmp1621;
  const Scalar _tmp1623 = -_tmp1199 * _tmp1622 + _tmp1201 * _tmp1621 + _tmp1619 * _tmp312;
  const Scalar _tmp1624 = _tmp693 * (_tmp1573 * _tmp681 + _tmp1574 * _tmp682 + _tmp1575 * _tmp680);
  const Scalar _tmp1625 = _tmp689 * (_tmp1577 * _tmp681 + _tmp691);
  const Scalar _tmp1626 = _tmp1003 * _tmp1624 + _tmp1407 * _tmp1625;
  const Scalar _tmp1627 = _tmp1007 * _tmp1626 - _tmp1009 * _tmp1626 + _tmp1624 * _tmp702;
  const Scalar _tmp1628 = _tmp363 * (_tmp1573 * _tmp352 + _tmp1574 * _tmp351 + _tmp1575 * _tmp350);
  const Scalar _tmp1629 = _tmp359 * (_tmp1577 * _tmp352 + _tmp361);
  const Scalar _tmp1630 = _tmp1416 * _tmp1629 + _tmp1628 * _tmp920;
  const Scalar _tmp1631 = _tmp1629 * _tmp372 + _tmp1630 * _tmp924 - _tmp1630 * _tmp926;
  const Scalar _tmp1632 =
      -_tmp108 + _tmp109 + _tmp1577 * _views_0_pose[5] - _tmp1577 * _views_1_pose[5] - _tmp96;
  const Scalar _tmp1633 =
      _tmp892 * (_priors_1_0_target_T_src[2] * _tmp1450 + _tmp1348 - _tmp903 + _tmp905);
  const Scalar _tmp1634 = -_priors_1_0_target_T_src[0] * _tmp1450 + _tmp1355 + _tmp889 - _tmp891;
  const Scalar _tmp1635 = _tmp1634 * _tmp892;
  const Scalar _tmp1636 = _priors_1_0_target_T_src[1] * _tmp1450 + _tmp1367 + _tmp862 + _tmp879;
  const Scalar _tmp1637 = _tmp1636 * _tmp908;
  const Scalar _tmp1638 = _tmp1637 * _tmp88;
  const Scalar _tmp1639 = _tmp1573 * _views_0_pose[5] - _tmp1573 * _views_1_pose[5] +
                          _tmp1574 * _views_0_pose[6] - _tmp1574 * _views_1_pose[6] +
                          _tmp1575 * _views_0_pose[4] - _tmp1575 * _views_1_pose[4];
  const Scalar _tmp1640 = _tmp1636 * _tmp899;
  const Scalar _tmp1641 = _tmp1640 * _tmp88;
  const Scalar _tmp1642 = _tmp1640 * _tmp85;
  const Scalar _tmp1643 = _tmp1640 * _tmp74;
  const Scalar _tmp1644 = _priors_1_0_target_T_src[3] * _tmp1450 + _tmp1345 + _tmp894 - _tmp896;
  const Scalar _tmp1645 =
      _tmp1319 * _tmp1637 + _tmp1320 * _tmp1637 + _tmp1410 * _tmp1644 +
      _tmp1632 * priors_1_0_sqrt_info(0, 3) + _tmp1633 * priors_1_0_sqrt_info(0, 0) +
      _tmp1635 * priors_1_0_sqrt_info(0, 2) + _tmp1638 * priors_1_0_sqrt_info(0, 0) +
      _tmp1639 * priors_1_0_sqrt_info(0, 4) - _tmp1641 * priors_1_0_sqrt_info(0, 0) -
      _tmp1642 * priors_1_0_sqrt_info(0, 2) - _tmp1643 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1646 = _tmp1188 * _tmp1583 - _tmp1189 * _tmp1583 + _tmp1582 * _tmp612;
  const Scalar _tmp1647 = _tmp539 * (_tmp1577 * _tmp531 + _tmp541);
  const Scalar _tmp1648 = _tmp543 * (_tmp1573 * _tmp531 + _tmp1574 * _tmp532 + _tmp1575 * _tmp530);
  const Scalar _tmp1649 = _tmp1212 * _tmp1648 + _tmp1487 * _tmp1647;
  const Scalar _tmp1650 = _tmp1221 * _tmp1649 - _tmp1489 * _tmp1649 + _tmp1648 * _tmp552;
  const Scalar _tmp1651 = _tmp1596 * _tmp394;
  const Scalar _tmp1652 = -_tmp1160 * _tmp1651 + _tmp1163 * _tmp1651 * _tmp181 + _tmp1595 * _tmp402;
  const Scalar _tmp1653 = _tmp1644 * _tmp892;
  const Scalar _tmp1654 =
      _tmp1168 * _tmp1637 + _tmp1169 * _tmp1637 + _tmp1632 * priors_1_0_sqrt_info(5, 3) +
      _tmp1633 * priors_1_0_sqrt_info(5, 0) + _tmp1635 * priors_1_0_sqrt_info(5, 2) +
      _tmp1638 * priors_1_0_sqrt_info(5, 0) + _tmp1639 * priors_1_0_sqrt_info(5, 4) -
      _tmp1641 * priors_1_0_sqrt_info(5, 0) - _tmp1642 * priors_1_0_sqrt_info(5, 2) -
      _tmp1643 * priors_1_0_sqrt_info(5, 1) + _tmp1653 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp1655 =
      _tmp1316 * _tmp1637 - _tmp1316 * _tmp1640 + _tmp1317 * _tmp1637 - _tmp1317 * _tmp1640 +
      _tmp1632 * priors_1_0_sqrt_info(2, 3) + _tmp1633 * priors_1_0_sqrt_info(2, 0) +
      _tmp1635 * priors_1_0_sqrt_info(2, 2) + _tmp1638 * priors_1_0_sqrt_info(2, 0) +
      _tmp1639 * priors_1_0_sqrt_info(2, 4) - _tmp1641 * priors_1_0_sqrt_info(2, 0) +
      _tmp1653 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1656 = _tmp1226 * _tmp1617;
  const Scalar _tmp1657 = -_tmp1104 * _tmp1656 + _tmp1107 * _tmp1656 + _tmp1616 * _tmp342;
  const Scalar _tmp1658 = _tmp175 * (_tmp156 * _tmp1575 + _tmp1573 * _tmp164 + _tmp1574 * _tmp160);
  const Scalar _tmp1659 = _tmp171 * (_tmp1577 * _tmp164 + _tmp173);
  const Scalar _tmp1660 = _tmp1301 * _tmp1658 + _tmp1526 * _tmp1659;
  const Scalar _tmp1661 = _tmp1323 * _tmp1660 - _tmp1324 * _tmp1660 + _tmp1658 * _tmp192;
  const Scalar _tmp1662 =
      _tmp1253 * _tmp1562 + _tmp1254 * _tmp1561 + _tmp1551 * _tmp1566 -
      _tmp1567 * priors_0_1_sqrt_info(5, 2) + _tmp1568 * priors_0_1_sqrt_info(5, 0) -
      _tmp1569 * priors_0_1_sqrt_info(5, 1) + _tmp1571 * priors_0_1_sqrt_info(5, 2) +
      _tmp1602 * priors_0_1_sqrt_info(5, 1) - _tmp1603 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1663 = _tmp1312 * _tmp1587;
  const Scalar _tmp1664 = _tmp1076 * _tmp1663 - _tmp1078 * _tmp1663 + _tmp1585 * _tmp732;
  const Scalar _tmp1665 = _tmp419 * (_tmp1577 * _tmp412 + _tmp421);
  const Scalar _tmp1666 = _tmp423 * (_tmp1573 * _tmp412 + _tmp1574 * _tmp411 + _tmp1575 * _tmp410);
  const Scalar _tmp1667 = _tmp1260 * _tmp1666 + _tmp1428 * _tmp1665;
  const Scalar _tmp1668 = _tmp1263 * _tmp1667;
  const Scalar _tmp1669 = -_tmp1268 * _tmp1667 + _tmp1665 * _tmp432 + _tmp1668 * _tmp420;
  const Scalar _tmp1670 = -_tmp1278 * _tmp1622 + _tmp1279 * _tmp1621 + _tmp1620 * _tmp312;
  const Scalar _tmp1671 =
      _tmp1336 * _tmp1637 + _tmp1337 * _tmp1637 + _tmp1338 * _tmp1637 - _tmp1338 * _tmp1640 +
      _tmp1632 * priors_1_0_sqrt_info(1, 3) + _tmp1633 * priors_1_0_sqrt_info(1, 0) +
      _tmp1635 * priors_1_0_sqrt_info(1, 2) + _tmp1639 * priors_1_0_sqrt_info(1, 4) -
      _tmp1642 * priors_1_0_sqrt_info(1, 2) - _tmp1643 * priors_1_0_sqrt_info(1, 1) +
      _tmp1653 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp1672 =
      _tmp1011 * _tmp1637 + _tmp1012 * _tmp1637 + _tmp1632 * priors_1_0_sqrt_info(4, 3) +
      _tmp1633 * priors_1_0_sqrt_info(4, 0) + _tmp1635 * priors_1_0_sqrt_info(4, 2) +
      _tmp1638 * priors_1_0_sqrt_info(4, 0) + _tmp1639 * priors_1_0_sqrt_info(4, 4) -
      _tmp1641 * priors_1_0_sqrt_info(4, 0) - _tmp1642 * priors_1_0_sqrt_info(4, 2) -
      _tmp1643 * priors_1_0_sqrt_info(4, 1) + _tmp1653 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1673 = _tmp513 * (_tmp1573 * _tmp502 + _tmp1574 * _tmp501 + _tmp1575 * _tmp500);
  const Scalar _tmp1674 = _tmp509 * (_tmp1577 * _tmp502 + _tmp511);
  const Scalar _tmp1675 = _tmp1288 * _tmp1673 + _tmp1378 * _tmp1674;
  const Scalar _tmp1676 = -_tmp1380 * _tmp1675 + _tmp1381 * _tmp1675 + _tmp1673 * _tmp522;
  const Scalar _tmp1677 = _tmp1235 * _tmp1566 - _tmp1236 * _tmp1566 + _tmp1238 * _tmp1562 +
                          _tmp1562 * _tmp64 - _tmp1565 * _tmp64 +
                          _tmp1568 * priors_0_1_sqrt_info(3, 0) -
                          _tmp1569 * priors_0_1_sqrt_info(3, 1) + _tmp1570 * _tmp66 +
                          _tmp1602 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1678 = _tmp573 * (_tmp1573 * _tmp561 + _tmp1574 * _tmp562 + _tmp1575 * _tmp560);
  const Scalar _tmp1679 = _tmp569 * (_tmp1577 * _tmp561 + _tmp571);
  const Scalar _tmp1680 = _tmp1178 * _tmp1678 + _tmp1534 * _tmp1679;
  const Scalar _tmp1681 = -_tmp1326 * _tmp1680 + _tmp1327 * _tmp1680 + _tmp1678 * _tmp582;
  const Scalar _tmp1682 = -_tmp1145 * _tmp1592 + _tmp1149 * _tmp1591 + _tmp1590 * _tmp222;
  const Scalar _tmp1683 = _tmp269 * (_tmp1577 * _tmp261 + _tmp271);
  const Scalar _tmp1684 = _tmp273 * (_tmp1573 * _tmp261 + _tmp1574 * _tmp262 + _tmp1575 * _tmp260);
  const Scalar _tmp1685 = _tmp1521 * _tmp1683 + _tmp1684 * _tmp989;
  const Scalar _tmp1686 = _tmp1683 * _tmp282 + _tmp1685 * _tmp993 - _tmp1685 * _tmp995;
  const Scalar _tmp1687 = -_tmp1113 * _tmp1626 + _tmp1115 * _tmp1626 + _tmp1625 * _tmp702;
  const Scalar _tmp1688 = -_tmp1241 * _tmp1613 + _tmp1242 * _tmp1613 + _tmp1611 * _tmp252;
  const Scalar _tmp1689 = -_tmp1182 * _tmp1680 + _tmp1185 * _tmp1680 + _tmp1679 * _tmp582;
  const Scalar _tmp1690 = _tmp483 * (_tmp1573 * _tmp472 + _tmp1574 * _tmp471 + _tmp1575 * _tmp470);
  const Scalar _tmp1691 = _tmp479 * (_tmp1577 * _tmp472 + _tmp481);
  const Scalar _tmp1692 = _tmp1422 * _tmp1691 + _tmp1690 * _tmp845;
  const Scalar _tmp1693 = _tmp1691 * _tmp492 - _tmp1692 * _tmp849 + _tmp1692 * _tmp852;
  const Scalar _tmp1694 = -_tmp1275 * _tmp1685 + _tmp1276 * _tmp1685 + _tmp1684 * _tmp282;
  const Scalar _tmp1695 = -_tmp1330 * _tmp1667 + _tmp1666 * _tmp432 + _tmp1668 * _tmp424;
  const Scalar _tmp1696 = _tmp1566 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1697 =
      _tmp1562 * _tmp961 - _tmp1565 * _tmp961 + _tmp1568 * priors_0_1_sqrt_info(2, 0) +
      _tmp1571 * priors_0_1_sqrt_info(2, 2) + _tmp1602 * priors_0_1_sqrt_info(2, 1) -
      _tmp1603 * priors_0_1_sqrt_info(2, 0) + _tmp1604 * priors_0_1_sqrt_info(2, 0) -
      _tmp1696 * _tmp952 + _tmp1696 * _tmp958;
  const Scalar _tmp1698 = _tmp633 * (_tmp1573 * _tmp621 + _tmp1574 * _tmp622 + _tmp1575 * _tmp620);
  const Scalar _tmp1699 = _tmp629 * (_tmp1577 * _tmp621 + _tmp631);
  const Scalar _tmp1700 = _tmp1123 * _tmp1698 + _tmp1433 * _tmp1699;
  const Scalar _tmp1701 = _tmp1133 * _tmp1700 - _tmp1436 * _tmp1700 + _tmp1699 * _tmp642;
  const Scalar _tmp1702 = -_tmp1017 * _tmp1630 + _tmp1018 * _tmp1630 + _tmp1628 * _tmp372;
  const Scalar _tmp1703 = _tmp1047 * _tmp1692 - _tmp1048 * _tmp1692 + _tmp1690 * _tmp492;
  const Scalar _tmp1704 =
      _tmp137 * _tmp1637 - _tmp137 * _tmp1640 + _tmp1632 * priors_1_0_sqrt_info(3, 3) +
      _tmp1633 * priors_1_0_sqrt_info(3, 0) + _tmp1634 * _tmp907 + _tmp1637 * _tmp910 +
      _tmp1638 * priors_1_0_sqrt_info(3, 0) + _tmp1639 * priors_1_0_sqrt_info(3, 4) -
      _tmp1641 * priors_1_0_sqrt_info(3, 0) - _tmp1642 * priors_1_0_sqrt_info(3, 2) +
      _tmp1653 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1705 = _tmp1216 * _tmp1649 - _tmp1556 * _tmp1649 + _tmp1647 * _tmp552;
  const Scalar _tmp1706 = _tmp1127 * _tmp1700 - _tmp1553 * _tmp1700 + _tmp1698 * _tmp642;
  const Scalar _tmp1707 = _tmp1042 * _tmp1579 - _tmp1044 * _tmp1579 + _tmp1578 * _tmp672;
  const Scalar _tmp1708 =
      _tmp1223 * _tmp1561 + _tmp1224 * _tmp1562 + _tmp1539 * _tmp1566 -
      _tmp1567 * priors_0_1_sqrt_info(4, 2) + _tmp1568 * priors_0_1_sqrt_info(4, 0) -
      _tmp1569 * priors_0_1_sqrt_info(4, 1) + _tmp1571 * priors_0_1_sqrt_info(4, 2) +
      _tmp1602 * priors_0_1_sqrt_info(4, 1) - _tmp1603 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1709 = -_tmp1247 * _tmp1600 + _tmp1248 * _tmp1600 + _tmp1599 * _tmp762;
  const Scalar _tmp1710 = _tmp1306 * _tmp1660 - _tmp1309 * _tmp1660 + _tmp1659 * _tmp192;
  const Scalar _tmp1711 = _tmp1341 * _tmp1675 - _tmp1343 * _tmp1675 + _tmp1674 * _tmp522;
  const Scalar _tmp1712 = _tmp12 * priors_0_1_sqrt_info(1, 4) +
                          _tmp55 * priors_0_1_sqrt_info(1, 5) + _tmp7 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp1713 = _tmp1174 * landmarks_13_;
  const Scalar _tmp1714 = _tmp569 * landmarks_13_;
  const Scalar _tmp1715 = -_tmp114 * _tmp1714 + _tmp128 * _tmp1713;
  const Scalar _tmp1716 = _tmp1176 * landmarks_13_;
  const Scalar _tmp1717 = _tmp573 * landmarks_13_;
  const Scalar _tmp1718 = -_tmp107 * _tmp1717 + _tmp128 * _tmp1716;
  const Scalar _tmp1719 =
      (Scalar(1) / Scalar(2)) * _tmp1178 * _tmp1718 + (Scalar(1) / Scalar(2)) * _tmp1534 * _tmp1715;
  const Scalar _tmp1720 = _tmp1719 * _tmp570;
  const Scalar _tmp1721 = _tmp1183 * _tmp181;
  const Scalar _tmp1722 = -_tmp1180 * _tmp1720 + _tmp1715 * _tmp582 + _tmp1720 * _tmp1721;
  const Scalar _tmp1723 = _tmp1719 * _tmp574;
  const Scalar _tmp1724 = -_tmp1180 * _tmp1723 + _tmp1718 * _tmp582 + _tmp1721 * _tmp1723;
  const Scalar _tmp1725 = _tmp393 * landmarks_7_;
  const Scalar _tmp1726 = _tmp1156 * landmarks_7_;
  const Scalar _tmp1727 = -_tmp107 * _tmp1725 + _tmp128 * _tmp1726;
  const Scalar _tmp1728 = _tmp389 * landmarks_7_;
  const Scalar _tmp1729 = _tmp1398 * landmarks_7_;
  const Scalar _tmp1730 = -_tmp114 * _tmp1728 + _tmp128 * _tmp1729;
  const Scalar _tmp1731 = _tmp1158 * _tmp1727 + _tmp1400 * _tmp1730;
  const Scalar _tmp1732 = _tmp1164 * _tmp1165;
  const Scalar _tmp1733 = -_tmp1162 * _tmp1731 + _tmp1727 * _tmp402 + _tmp1731 * _tmp1732;
  const Scalar _tmp1734 = _tmp419 * landmarks_8_;
  const Scalar _tmp1735 = _tmp1256 * landmarks_8_;
  const Scalar _tmp1736 = _tmp1265 * _tmp1735;
  const Scalar _tmp1737 = -_tmp114 * _tmp1734 + _tmp128 * _tmp1736;
  const Scalar _tmp1738 = _tmp1258 * _tmp1735;
  const Scalar _tmp1739 = _tmp423 * landmarks_8_;
  const Scalar _tmp1740 = -_tmp107 * _tmp1739 + _tmp128 * _tmp1738;
  const Scalar _tmp1741 =
      (Scalar(1) / Scalar(2)) * _tmp1260 * _tmp1740 + (Scalar(1) / Scalar(2)) * _tmp1428 * _tmp1737;
  const Scalar _tmp1742 = _tmp1741 * _tmp424;
  const Scalar _tmp1743 = _tmp1262 * _tmp181;
  const Scalar _tmp1744 = -_tmp1266 * _tmp1742 + _tmp1740 * _tmp432 + _tmp1742 * _tmp1743;
  const Scalar _tmp1745 = _tmp1311 * landmarks_18_;
  const Scalar _tmp1746 = _tmp719 * landmarks_18_;
  const Scalar _tmp1747 = -_tmp114 * _tmp1746 + _tmp128 * _tmp1745;
  const Scalar _tmp1748 = _tmp1071 * landmarks_18_;
  const Scalar _tmp1749 = _tmp723 * landmarks_18_;
  const Scalar _tmp1750 = -_tmp107 * _tmp1749 + _tmp128 * _tmp1748;
  const Scalar _tmp1751 = _tmp1073 * _tmp1750 + _tmp1442 * _tmp1747;
  const Scalar _tmp1752 = _tmp1077 * _tmp1751 - _tmp1079 * _tmp1751 + _tmp1750 * _tmp732;
  const Scalar _tmp1753 = _tmp12 * priors_0_1_sqrt_info(2, 4) +
                          _tmp55 * priors_0_1_sqrt_info(2, 5) + _tmp7 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp1754 = _tmp1099 * landmarks_5_;
  const Scalar _tmp1755 = _tmp333 * landmarks_5_;
  const Scalar _tmp1756 = -_tmp107 * _tmp1755 + _tmp128 * _tmp1754;
  const Scalar _tmp1757 = _tmp329 * landmarks_5_;
  const Scalar _tmp1758 = _tmp1229 * landmarks_5_;
  const Scalar _tmp1759 = -_tmp114 * _tmp1757 + _tmp128 * _tmp1758;
  const Scalar _tmp1760 = _tmp1101 * _tmp1756 + _tmp1372 * _tmp1759;
  const Scalar _tmp1761 = -_tmp1227 * _tmp1760 + _tmp1228 * _tmp1760 + _tmp1759 * _tmp342;
  const Scalar _tmp1762 = _tmp1281 * landmarks_4_;
  const Scalar _tmp1763 = _tmp299 * landmarks_4_;
  const Scalar _tmp1764 = -_tmp114 * _tmp1763 + _tmp128 * _tmp1762;
  const Scalar _tmp1765 = _tmp303 * landmarks_4_;
  const Scalar _tmp1766 = _tmp1194 * landmarks_4_;
  const Scalar _tmp1767 = -_tmp107 * _tmp1765 + _tmp128 * _tmp1766;
  const Scalar _tmp1768 = _tmp1197 * _tmp1767 + _tmp1447 * _tmp1764;
  const Scalar _tmp1769 = _tmp1279 * _tmp1768 - _tmp1280 * _tmp1768 + _tmp1764 * _tmp312;
  const Scalar _tmp1770 = _tmp513 * landmarks_11_;
  const Scalar _tmp1771 = _tmp1286 * landmarks_11_;
  const Scalar _tmp1772 = -_tmp107 * _tmp1770 + _tmp128 * _tmp1771;
  const Scalar _tmp1773 = _tmp509 * landmarks_11_;
  const Scalar _tmp1774 = _tmp1342 * landmarks_11_;
  const Scalar _tmp1775 = -_tmp114 * _tmp1773 + _tmp128 * _tmp1774;
  const Scalar _tmp1776 = _tmp1288 * _tmp1772 + _tmp1378 * _tmp1775;
  const Scalar _tmp1777 = _tmp1341 * _tmp1776 - _tmp1343 * _tmp1776 + _tmp1775 * _tmp522;
  const Scalar _tmp1778 = _tmp243 * landmarks_2_;
  const Scalar _tmp1779 = _tmp931 * landmarks_2_;
  const Scalar _tmp1780 = -_tmp107 * _tmp1778 + _tmp128 * _tmp1779;
  const Scalar _tmp1781 = _tmp1384 * landmarks_2_;
  const Scalar _tmp1782 = _tmp239 * landmarks_2_;
  const Scalar _tmp1783 = -_tmp114 * _tmp1782 + _tmp128 * _tmp1781;
  const Scalar _tmp1784 = _tmp1386 * _tmp1783 + _tmp1780 * _tmp933;
  const Scalar _tmp1785 = _tmp1780 * _tmp252 + _tmp1784 * _tmp939 - _tmp1784 * _tmp941;
  const Scalar _tmp1786 = _tmp112 - 1;
  const Scalar _tmp1787 = _tmp101 + _tmp1786;
  const Scalar _tmp1788 = _tmp1365 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(4, 3) +
                          _tmp826 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1789 = _tmp1365 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(3, 3) +
                          _tmp826 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1790 = _tmp1365 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(2, 3) +
                          _tmp826 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1791 = _tmp1165 * _tmp1231;
  const Scalar _tmp1792 = -_tmp1233 * _tmp1731 + _tmp1730 * _tmp402 + _tmp1731 * _tmp1791;
  const Scalar _tmp1793 = _tmp749 * landmarks_19_;
  const Scalar _tmp1794 = _tmp128 * landmarks_19_;
  const Scalar _tmp1795 = -_tmp114 * _tmp1793 + _tmp1245 * _tmp1794;
  const Scalar _tmp1796 = _tmp753 * landmarks_19_;
  const Scalar _tmp1797 = _tmp1053 * _tmp1794 - _tmp107 * _tmp1796;
  const Scalar _tmp1798 = _tmp1055 * _tmp1797 + _tmp1502 * _tmp1795;
  const Scalar _tmp1799 = _tmp1545 * _tmp1798 - _tmp1546 * _tmp1798 + _tmp1797 * _tmp762;
  const Scalar _tmp1800 = _tmp1365 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(1, 3) +
                          _tmp826 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1801 = _tmp12 * priors_0_1_sqrt_info(3, 4) +
                          _tmp55 * priors_0_1_sqrt_info(3, 5) + _tmp7 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp1802 = _tmp213 * landmarks_1_;
  const Scalar _tmp1803 = _tmp128 * landmarks_1_;
  const Scalar _tmp1804 = -_tmp107 * _tmp1802 + _tmp1138 * _tmp1803;
  const Scalar _tmp1805 = _tmp209 * landmarks_1_;
  const Scalar _tmp1806 = -_tmp114 * _tmp1805 + _tmp1476 * _tmp1803;
  const Scalar _tmp1807 = _tmp1140 * _tmp1804 + _tmp1478 * _tmp1806;
  const Scalar _tmp1808 = -_tmp1147 * _tmp1807 + _tmp1149 * _tmp1807 + _tmp1806 * _tmp222;
  const Scalar _tmp1809 = _tmp1741 * _tmp420;
  const Scalar _tmp1810 = -_tmp1266 * _tmp1809 + _tmp1737 * _tmp432 + _tmp1743 * _tmp1809;
  const Scalar _tmp1811 = _tmp1210 * landmarks_12_;
  const Scalar _tmp1812 = _tmp543 * landmarks_12_;
  const Scalar _tmp1813 = -_tmp107 * _tmp1812 + _tmp128 * _tmp1811;
  const Scalar _tmp1814 = _tmp539 * landmarks_12_;
  const Scalar _tmp1815 = _tmp1485 * landmarks_12_;
  const Scalar _tmp1816 = -_tmp114 * _tmp1814 + _tmp128 * _tmp1815;
  const Scalar _tmp1817 = _tmp1212 * _tmp1813 + _tmp1487 * _tmp1816;
  const Scalar _tmp1818 = _tmp1221 * _tmp1817 - _tmp1489 * _tmp1817 + _tmp1813 * _tmp552;
  const Scalar _tmp1819 = _tmp171 * landmarks_0_;
  const Scalar _tmp1820 = _tmp1307 * landmarks_0_;
  const Scalar _tmp1821 = -_tmp114 * _tmp1819 + _tmp128 * _tmp1820;
  const Scalar _tmp1822 = _tmp175 * landmarks_0_;
  const Scalar _tmp1823 = _tmp1299 * landmarks_0_;
  const Scalar _tmp1824 = -_tmp107 * _tmp1822 + _tmp128 * _tmp1823;
  const Scalar _tmp1825 = _tmp1301 * _tmp1824 + _tmp1526 * _tmp1821;
  const Scalar _tmp1826 = _tmp1306 * _tmp1825 - _tmp1309 * _tmp1825 + _tmp1821 * _tmp192;
  const Scalar _tmp1827 = _tmp987 * landmarks_3_;
  const Scalar _tmp1828 = _tmp273 * landmarks_3_;
  const Scalar _tmp1829 = -_tmp107 * _tmp1828 + _tmp128 * _tmp1827;
  const Scalar _tmp1830 = _tmp985 * landmarks_3_;
  const Scalar _tmp1831 = _tmp269 * landmarks_3_;
  const Scalar _tmp1832 = -_tmp114 * _tmp1831 + _tmp128 * _tmp1830;
  const Scalar _tmp1833 = _tmp1521 * _tmp1832 + _tmp1829 * _tmp989;
  const Scalar _tmp1834 = _tmp1832 * _tmp282 + _tmp1833 * _tmp993 - _tmp1833 * _tmp995;
  const Scalar _tmp1835 = _tmp1365 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(5, 3) +
                          _tmp826 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1836 = _tmp363 * landmarks_6_;
  const Scalar _tmp1837 = _tmp918 * landmarks_6_;
  const Scalar _tmp1838 = -_tmp107 * _tmp1836 + _tmp128 * _tmp1837;
  const Scalar _tmp1839 = _tmp1414 * landmarks_6_;
  const Scalar _tmp1840 = _tmp359 * landmarks_6_;
  const Scalar _tmp1841 = -_tmp114 * _tmp1840 + _tmp128 * _tmp1839;
  const Scalar _tmp1842 = _tmp1416 * _tmp1841 + _tmp1838 * _tmp920;
  const Scalar _tmp1843 = _tmp1841 * _tmp372 + _tmp1842 * _tmp924 - _tmp1842 * _tmp926;
  const Scalar _tmp1844 = _tmp1086 * landmarks_9_;
  const Scalar _tmp1845 = _tmp453 * landmarks_9_;
  const Scalar _tmp1846 = -_tmp107 * _tmp1845 + _tmp128 * _tmp1844;
  const Scalar _tmp1847 = _tmp449 * landmarks_9_;
  const Scalar _tmp1848 = _tmp1084 * landmarks_9_;
  const Scalar _tmp1849 = -_tmp114 * _tmp1847 + _tmp128 * _tmp1848;
  const Scalar _tmp1850 = _tmp1088 * _tmp1846 + _tmp1494 * _tmp1849;
  const Scalar _tmp1851 = -_tmp1271 * _tmp1850 + _tmp1272 * _tmp1850 + _tmp1846 * _tmp462;
  const Scalar _tmp1852 = _tmp1020 * landmarks_14_;
  const Scalar _tmp1853 = _tmp1022 * _tmp1852;
  const Scalar _tmp1854 = _tmp603 * landmarks_14_;
  const Scalar _tmp1855 = -_tmp107 * _tmp1854 + _tmp128 * _tmp1853;
  const Scalar _tmp1856 = _tmp1031 * _tmp1852;
  const Scalar _tmp1857 = _tmp599 * landmarks_14_;
  const Scalar _tmp1858 = -_tmp114 * _tmp1857 + _tmp128 * _tmp1856;
  const Scalar _tmp1859 = _tmp1024 * _tmp1855 + _tmp1394 * _tmp1858;
  const Scalar _tmp1860 = _tmp1027 * _tmp1859;
  const Scalar _tmp1861 = -_tmp1026 * _tmp1860 + _tmp1030 * _tmp1859 + _tmp1858 * _tmp612;
  const Scalar _tmp1862 = _tmp1322 * _tmp1825;
  const Scalar _tmp1863 = _tmp1305 * _tmp1862 - _tmp1308 * _tmp1862 + _tmp1824 * _tmp192;
  const Scalar _tmp1864 = _tmp483 * landmarks_10_;
  const Scalar _tmp1865 = _tmp840 * landmarks_10_;
  const Scalar _tmp1866 = -_tmp107 * _tmp1864 + _tmp128 * _tmp1865;
  const Scalar _tmp1867 = _tmp479 * landmarks_10_;
  const Scalar _tmp1868 = _tmp854 * landmarks_10_;
  const Scalar _tmp1869 = -_tmp114 * _tmp1867 + _tmp128 * _tmp1868;
  const Scalar _tmp1870 = _tmp1422 * _tmp1869 + _tmp1866 * _tmp845;
  const Scalar _tmp1871 = _tmp1046 * _tmp1870;
  const Scalar _tmp1872 = _tmp1866 * _tmp492 - _tmp1871 * _tmp847 + _tmp1871 * _tmp851;
  const Scalar _tmp1873 = -_tmp1241 * _tmp1784 + _tmp1242 * _tmp1784 + _tmp1783 * _tmp252;
  const Scalar _tmp1874 = _tmp1543 * landmarks_16_;
  const Scalar _tmp1875 = _tmp663 * landmarks_16_;
  const Scalar _tmp1876 = -_tmp107 * _tmp1875 + _tmp128 * _tmp1874;
  const Scalar _tmp1877 = _tmp659 * landmarks_16_;
  const Scalar _tmp1878 = _tmp1512 * landmarks_16_;
  const Scalar _tmp1879 = -_tmp114 * _tmp1877 + _tmp128 * _tmp1878;
  const Scalar _tmp1880 = _tmp1037 * _tmp1876 + _tmp1515 * _tmp1879;
  const Scalar _tmp1881 = -_tmp1541 * _tmp1880 + _tmp1542 * _tmp1880 + _tmp1876 * _tmp672;
  const Scalar _tmp1882 = _tmp693 * landmarks_17_;
  const Scalar _tmp1883 = _tmp1001 * landmarks_17_;
  const Scalar _tmp1884 = -_tmp107 * _tmp1882 + _tmp128 * _tmp1883;
  const Scalar _tmp1885 = _tmp1114 * landmarks_17_;
  const Scalar _tmp1886 = _tmp689 * landmarks_17_;
  const Scalar _tmp1887 = -_tmp114 * _tmp1886 + _tmp128 * _tmp1885;
  const Scalar _tmp1888 = _tmp1003 * _tmp1884 + _tmp1407 * _tmp1887;
  const Scalar _tmp1889 = _tmp1008 * _tmp1888;
  const Scalar _tmp1890 = -_tmp1005 * _tmp1889 + _tmp1007 * _tmp1888 + _tmp1884 * _tmp702;
  const Scalar _tmp1891 = -_tmp1106 * _tmp1760 + _tmp1108 * _tmp1760 + _tmp1756 * _tmp342;
  const Scalar _tmp1892 = _tmp1869 * _tmp492 - _tmp1870 * _tmp849 + _tmp1870 * _tmp852;
  const Scalar _tmp1893 = _tmp1199 * _tmp1768;
  const Scalar _tmp1894 = _tmp1200 * _tmp1893 - _tmp1202 * _tmp1893 + _tmp1767 * _tmp312;
  const Scalar _tmp1895 = _tmp12 * priors_0_1_sqrt_info(5, 4) +
                          _tmp55 * priors_0_1_sqrt_info(5, 5) + _tmp7 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp1896 = _tmp1365 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1787 * priors_1_0_sqrt_info(0, 3) +
                          _tmp826 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1897 = _tmp1216 * _tmp1817 - _tmp1556 * _tmp1817 + _tmp1816 * _tmp552;
  const Scalar _tmp1898 = _tmp128 * landmarks_15_;
  const Scalar _tmp1899 = _tmp629 * landmarks_15_;
  const Scalar _tmp1900 = _tmp1131 * _tmp1898 - _tmp114 * _tmp1899;
  const Scalar _tmp1901 = _tmp633 * landmarks_15_;
  const Scalar _tmp1902 = -_tmp107 * _tmp1901 + _tmp1120 * _tmp1898;
  const Scalar _tmp1903 = _tmp1123 * _tmp1902 + _tmp1433 * _tmp1900;
  const Scalar _tmp1904 = _tmp1133 * _tmp1903 - _tmp1436 * _tmp1903 + _tmp1900 * _tmp642;
  const Scalar _tmp1905 = -_tmp1247 * _tmp1798 + _tmp1248 * _tmp1798 + _tmp1795 * _tmp762;
  const Scalar _tmp1906 = _tmp1333 * _tmp1807 - _tmp1334 * _tmp1807 + _tmp1804 * _tmp222;
  const Scalar _tmp1907 = _tmp1127 * _tmp1903 - _tmp1553 * _tmp1903 + _tmp1902 * _tmp642;
  const Scalar _tmp1908 = -_tmp1380 * _tmp1776 + _tmp1381 * _tmp1776 + _tmp1772 * _tmp522;
  const Scalar _tmp1909 = -_tmp1112 * _tmp1889 + _tmp1115 * _tmp1888 + _tmp1887 * _tmp702;
  const Scalar _tmp1910 = _tmp1092 * _tmp1850 - _tmp1094 * _tmp1850 + _tmp1849 * _tmp462;
  const Scalar _tmp1911 = -_tmp1275 * _tmp1833 + _tmp1276 * _tmp1833 + _tmp1829 * _tmp282;
  const Scalar _tmp1912 = _tmp1042 * _tmp1880 - _tmp1044 * _tmp1880 + _tmp1879 * _tmp672;
  const Scalar _tmp1913 = -_tmp1017 * _tmp1842 + _tmp1018 * _tmp1842 + _tmp1838 * _tmp372;
  const Scalar _tmp1914 = _tmp12 * priors_0_1_sqrt_info(0, 4) +
                          _tmp55 * priors_0_1_sqrt_info(0, 5) + _tmp7 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp1915 = _tmp12 * priors_0_1_sqrt_info(4, 4) +
                          _tmp55 * priors_0_1_sqrt_info(4, 5) + _tmp7 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp1916 = -_tmp1187 * _tmp1860 + _tmp1188 * _tmp1859 + _tmp1855 * _tmp612;
  const Scalar _tmp1917 = _tmp1313 * _tmp1751 - _tmp1314 * _tmp1751 + _tmp1747 * _tmp732;
  const Scalar _tmp1918 = -_tmp120 * _tmp1728 + _tmp125 * _tmp1729;
  const Scalar _tmp1919 = -_tmp103 * _tmp1725 + _tmp125 * _tmp1726;
  const Scalar _tmp1920 = _tmp1158 * _tmp1919 + _tmp1400 * _tmp1918;
  const Scalar _tmp1921 = -_tmp1233 * _tmp1920 + _tmp1791 * _tmp1920 + _tmp1918 * _tmp402;
  const Scalar _tmp1922 = _tmp1476 * landmarks_1_;
  const Scalar _tmp1923 = -_tmp120 * _tmp1805 + _tmp125 * _tmp1922;
  const Scalar _tmp1924 = _tmp1138 * landmarks_1_;
  const Scalar _tmp1925 = -_tmp103 * _tmp1802 + _tmp125 * _tmp1924;
  const Scalar _tmp1926 = _tmp1140 * _tmp1925 + _tmp1478 * _tmp1923;
  const Scalar _tmp1927 = -_tmp1147 * _tmp1926 + _tmp1149 * _tmp1926 + _tmp1923 * _tmp222;
  const Scalar _tmp1928 = _tmp1333 * _tmp1926 - _tmp1334 * _tmp1926 + _tmp1925 * _tmp222;
  const Scalar _tmp1929 = -_tmp120 * _tmp1857 + _tmp125 * _tmp1856;
  const Scalar _tmp1930 = -_tmp103 * _tmp1854 + _tmp125 * _tmp1853;
  const Scalar _tmp1931 = _tmp1024 * _tmp1930 + _tmp1394 * _tmp1929;
  const Scalar _tmp1932 = -_tmp1028 * _tmp1931 + _tmp1030 * _tmp1931 + _tmp1929 * _tmp612;
  const Scalar _tmp1933 = -_tmp120 * _tmp1773 + _tmp125 * _tmp1774;
  const Scalar _tmp1934 = -_tmp103 * _tmp1770 + _tmp125 * _tmp1771;
  const Scalar _tmp1935 = _tmp1288 * _tmp1934 + _tmp1378 * _tmp1933;
  const Scalar _tmp1936 = -_tmp1380 * _tmp1935 + _tmp1381 * _tmp1935 + _tmp1934 * _tmp522;
  const Scalar _tmp1937 = -_tmp120 * _tmp1819 + _tmp125 * _tmp1820;
  const Scalar _tmp1938 = -_tmp103 * _tmp1822 + _tmp125 * _tmp1823;
  const Scalar _tmp1939 = _tmp1301 * _tmp1938 + _tmp1526 * _tmp1937;
  const Scalar _tmp1940 = _tmp1323 * _tmp1939 - _tmp1324 * _tmp1939 + _tmp192 * _tmp1938;
  const Scalar _tmp1941 = _tmp125 * landmarks_15_;
  const Scalar _tmp1942 = _tmp1131 * _tmp1941 - _tmp120 * _tmp1899;
  const Scalar _tmp1943 = -_tmp103 * _tmp1901 + _tmp1120 * _tmp1941;
  const Scalar _tmp1944 = _tmp1123 * _tmp1943 + _tmp1433 * _tmp1942;
  const Scalar _tmp1945 = _tmp1133 * _tmp1944 - _tmp1436 * _tmp1944 + _tmp1942 * _tmp642;
  const Scalar _tmp1946 = _tmp125 * landmarks_17_;
  const Scalar _tmp1947 = _tmp1001 * _tmp1946 - _tmp103 * _tmp1882;
  const Scalar _tmp1948 = _tmp1114 * _tmp1946 - _tmp120 * _tmp1886;
  const Scalar _tmp1949 = _tmp1003 * _tmp1947 + _tmp1407 * _tmp1948;
  const Scalar _tmp1950 = -_tmp1113 * _tmp1949 + _tmp1115 * _tmp1949 + _tmp1948 * _tmp702;
  const Scalar _tmp1951 = -_tmp103 * _tmp1739 + _tmp125 * _tmp1738;
  const Scalar _tmp1952 = -_tmp120 * _tmp1734 + _tmp125 * _tmp1736;
  const Scalar _tmp1953 = _tmp1260 * _tmp1951 + _tmp1428 * _tmp1952;
  const Scalar _tmp1954 = _tmp1329 * _tmp1953 - _tmp1330 * _tmp1953 + _tmp1951 * _tmp432;
  const Scalar _tmp1955 = _tmp1005 * _tmp1949;
  const Scalar _tmp1956 = _tmp1006 * _tmp1955 - _tmp1008 * _tmp1955 + _tmp1947 * _tmp702;
  const Scalar _tmp1957 = -_tmp103 * _tmp1778 + _tmp125 * _tmp1779;
  const Scalar _tmp1958 = -_tmp120 * _tmp1782 + _tmp125 * _tmp1781;
  const Scalar _tmp1959 = _tmp1386 * _tmp1958 + _tmp1957 * _tmp933;
  const Scalar _tmp1960 = -_tmp1241 * _tmp1959 + _tmp1242 * _tmp1959 + _tmp1958 * _tmp252;
  const Scalar _tmp1961 = _tmp101 + _tmp98 - 1;
  const Scalar _tmp1962 = _tmp1361 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1963 = _tmp14 * priors_0_1_sqrt_info(5, 4) + _tmp4 * priors_0_1_sqrt_info(5, 3) +
                          _tmp56 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp1964 = -_tmp103 * _tmp1717 + _tmp125 * _tmp1716;
  const Scalar _tmp1965 = -_tmp120 * _tmp1714 + _tmp125 * _tmp1713;
  const Scalar _tmp1966 = _tmp1178 * _tmp1964 + _tmp1534 * _tmp1965;
  const Scalar _tmp1967 = -_tmp1326 * _tmp1966 + _tmp1327 * _tmp1966 + _tmp1964 * _tmp582;
  const Scalar _tmp1968 = _tmp14 * priors_0_1_sqrt_info(0, 4) + _tmp4 * priors_0_1_sqrt_info(0, 3) +
                          _tmp56 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp1969 = _tmp1361 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1970 = _tmp125 * landmarks_19_;
  const Scalar _tmp1971 = -_tmp120 * _tmp1793 + _tmp1245 * _tmp1970;
  const Scalar _tmp1972 = -_tmp103 * _tmp1796 + _tmp1053 * _tmp1970;
  const Scalar _tmp1973 = _tmp1055 * _tmp1972 + _tmp1502 * _tmp1971;
  const Scalar _tmp1974 = -_tmp1247 * _tmp1973 + _tmp1248 * _tmp1973 + _tmp1971 * _tmp762;
  const Scalar _tmp1975 = -_tmp103 * _tmp1765 + _tmp125 * _tmp1766;
  const Scalar _tmp1976 = -_tmp120 * _tmp1763 + _tmp125 * _tmp1762;
  const Scalar _tmp1977 = _tmp1197 * _tmp1975 + _tmp1447 * _tmp1976;
  const Scalar _tmp1978 = _tmp1201 * _tmp1977 - _tmp1203 * _tmp1977 + _tmp1975 * _tmp312;
  const Scalar _tmp1979 = -_tmp103 * _tmp1755 + _tmp125 * _tmp1754;
  const Scalar _tmp1980 = -_tmp120 * _tmp1757 + _tmp125 * _tmp1758;
  const Scalar _tmp1981 = _tmp1101 * _tmp1979 + _tmp1372 * _tmp1980;
  const Scalar _tmp1982 = -_tmp1106 * _tmp1981 + _tmp1108 * _tmp1981 + _tmp1979 * _tmp342;
  const Scalar _tmp1983 = -_tmp1182 * _tmp1966 + _tmp1185 * _tmp1966 + _tmp1965 * _tmp582;
  const Scalar _tmp1984 = -_tmp120 * _tmp1831 + _tmp125 * _tmp1830;
  const Scalar _tmp1985 = -_tmp103 * _tmp1828 + _tmp125 * _tmp1827;
  const Scalar _tmp1986 = _tmp1521 * _tmp1984 + _tmp1985 * _tmp989;
  const Scalar _tmp1987 = _tmp1984 * _tmp282 + _tmp1986 * _tmp993 - _tmp1986 * _tmp995;
  const Scalar _tmp1988 = _tmp1361 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1989 = -_tmp103 * _tmp1845 + _tmp125 * _tmp1844;
  const Scalar _tmp1990 = -_tmp120 * _tmp1847 + _tmp125 * _tmp1848;
  const Scalar _tmp1991 = _tmp1088 * _tmp1989 + _tmp1494 * _tmp1990;
  const Scalar _tmp1992 = _tmp1092 * _tmp1991 - _tmp1094 * _tmp1991 + _tmp1990 * _tmp462;
  const Scalar _tmp1993 = -_tmp103 * _tmp1864 + _tmp125 * _tmp1865;
  const Scalar _tmp1994 = -_tmp120 * _tmp1867 + _tmp125 * _tmp1868;
  const Scalar _tmp1995 = _tmp1422 * _tmp1994 + _tmp1993 * _tmp845;
  const Scalar _tmp1996 = _tmp1047 * _tmp1995 - _tmp1048 * _tmp1995 + _tmp1993 * _tmp492;
  const Scalar _tmp1997 = -_tmp1275 * _tmp1986 + _tmp1276 * _tmp1986 + _tmp1985 * _tmp282;
  const Scalar _tmp1998 = _tmp14 * priors_0_1_sqrt_info(3, 4) + _tmp4 * priors_0_1_sqrt_info(3, 3) +
                          _tmp56 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp1999 = _tmp1361 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2000 = _tmp1127 * _tmp1944 - _tmp1553 * _tmp1944 + _tmp1943 * _tmp642;
  const Scalar _tmp2001 = _tmp1545 * _tmp1973 - _tmp1546 * _tmp1973 + _tmp1972 * _tmp762;
  const Scalar _tmp2002 = _tmp1188 * _tmp1931 - _tmp1189 * _tmp1931 + _tmp1930 * _tmp612;
  const Scalar _tmp2003 = -_tmp120 * _tmp1746 + _tmp125 * _tmp1745;
  const Scalar _tmp2004 = -_tmp103 * _tmp1749 + _tmp125 * _tmp1748;
  const Scalar _tmp2005 = _tmp1073 * _tmp2004 + _tmp1442 * _tmp2003;
  const Scalar _tmp2006 = _tmp1077 * _tmp2005 - _tmp1079 * _tmp2005 + _tmp2004 * _tmp732;
  const Scalar _tmp2007 = _tmp1264 * _tmp1953 - _tmp1268 * _tmp1953 + _tmp1952 * _tmp432;
  const Scalar _tmp2008 = -_tmp103 * _tmp1875 + _tmp125 * _tmp1874;
  const Scalar _tmp2009 = -_tmp120 * _tmp1877 + _tmp125 * _tmp1878;
  const Scalar _tmp2010 = _tmp1037 * _tmp2008 + _tmp1515 * _tmp2009;
  const Scalar _tmp2011 = -_tmp1541 * _tmp2010 + _tmp1542 * _tmp2010 + _tmp2008 * _tmp672;
  const Scalar _tmp2012 = _tmp1959 * _tmp937;
  const Scalar _tmp2013 = _tmp1957 * _tmp252 + _tmp2012 * _tmp938 - _tmp2012 * _tmp940;
  const Scalar _tmp2014 = _tmp1313 * _tmp2005 - _tmp1314 * _tmp2005 + _tmp2003 * _tmp732;
  const Scalar _tmp2015 = _tmp1306 * _tmp1939 - _tmp1309 * _tmp1939 + _tmp192 * _tmp1937;
  const Scalar _tmp2016 = -_tmp1227 * _tmp1981 + _tmp1228 * _tmp1981 + _tmp1980 * _tmp342;
  const Scalar _tmp2017 = _tmp14 * priors_0_1_sqrt_info(2, 4) + _tmp4 * priors_0_1_sqrt_info(2, 3) +
                          _tmp56 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp2018 = -_tmp120 * _tmp1814 + _tmp125 * _tmp1815;
  const Scalar _tmp2019 = -_tmp103 * _tmp1812 + _tmp125 * _tmp1811;
  const Scalar _tmp2020 = _tmp1212 * _tmp2019 + _tmp1487 * _tmp2018;
  const Scalar _tmp2021 = _tmp1214 * _tmp2020;
  const Scalar _tmp2022 = _tmp1215 * _tmp2021 - _tmp1217 * _tmp2021 + _tmp2018 * _tmp552;
  const Scalar _tmp2023 = _tmp1361 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2024 = _tmp1341 * _tmp1935 - _tmp1343 * _tmp1935 + _tmp1933 * _tmp522;
  const Scalar _tmp2025 = -_tmp1162 * _tmp1920 + _tmp1732 * _tmp1920 + _tmp1919 * _tmp402;
  const Scalar _tmp2026 = -_tmp1271 * _tmp1991 + _tmp1272 * _tmp1991 + _tmp1989 * _tmp462;
  const Scalar _tmp2027 = _tmp1042 * _tmp2010 - _tmp1044 * _tmp2010 + _tmp2009 * _tmp672;
  const Scalar _tmp2028 = _tmp14 * priors_0_1_sqrt_info(1, 4) + _tmp4 * priors_0_1_sqrt_info(1, 3) +
                          _tmp56 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp2029 = _tmp1361 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1573 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1961 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2030 = -_tmp120 * _tmp1840 + _tmp125 * _tmp1839;
  const Scalar _tmp2031 = -_tmp103 * _tmp1836 + _tmp125 * _tmp1837;
  const Scalar _tmp2032 = _tmp1416 * _tmp2030 + _tmp2031 * _tmp920;
  const Scalar _tmp2033 = _tmp2030 * _tmp372 + _tmp2032 * _tmp924 - _tmp2032 * _tmp926;
  const Scalar _tmp2034 = -_tmp1017 * _tmp2032 + _tmp1018 * _tmp2032 + _tmp2031 * _tmp372;
  const Scalar _tmp2035 = _tmp1221 * _tmp2020 - _tmp1489 * _tmp2020 + _tmp2019 * _tmp552;
  const Scalar _tmp2036 = _tmp14 * priors_0_1_sqrt_info(4, 4) + _tmp4 * priors_0_1_sqrt_info(4, 3) +
                          _tmp56 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp2037 = _tmp1279 * _tmp1977 - _tmp1280 * _tmp1977 + _tmp1976 * _tmp312;
  const Scalar _tmp2038 = _tmp1994 * _tmp492 - _tmp1995 * _tmp849 + _tmp1995 * _tmp852;
  const Scalar _tmp2039 = -_tmp118 * _tmp1814 + _tmp127 * _tmp1815;
  const Scalar _tmp2040 = _tmp127 * _tmp1811 - _tmp1812 * _tmp95;
  const Scalar _tmp2041 = _tmp1212 * _tmp2040 + _tmp1487 * _tmp2039;
  const Scalar _tmp2042 = _tmp1221 * _tmp2041 - _tmp1489 * _tmp2041 + _tmp2040 * _tmp552;
  const Scalar _tmp2043 = -_tmp118 * _tmp1773 + _tmp127 * _tmp1774;
  const Scalar _tmp2044 = _tmp127 * _tmp1771 - _tmp1770 * _tmp95;
  const Scalar _tmp2045 = _tmp1288 * _tmp2044 + _tmp1378 * _tmp2043;
  const Scalar _tmp2046 = _tmp1341 * _tmp2045 - _tmp1343 * _tmp2045 + _tmp2043 * _tmp522;
  const Scalar _tmp2047 = -_tmp118 * _tmp1746 + _tmp127 * _tmp1745;
  const Scalar _tmp2048 = _tmp127 * _tmp1748 - _tmp1749 * _tmp95;
  const Scalar _tmp2049 = _tmp1073 * _tmp2048 + _tmp1442 * _tmp2047;
  const Scalar _tmp2050 = _tmp1313 * _tmp2049 - _tmp1314 * _tmp2049 + _tmp2047 * _tmp732;
  const Scalar _tmp2051 = _tmp127 * _tmp1716 - _tmp1717 * _tmp95;
  const Scalar _tmp2052 = -_tmp118 * _tmp1714 + _tmp127 * _tmp1713;
  const Scalar _tmp2053 = _tmp1178 * _tmp2051 + _tmp1534 * _tmp2052;
  const Scalar _tmp2054 = -_tmp1182 * _tmp2053 + _tmp1185 * _tmp2053 + _tmp2052 * _tmp582;
  const Scalar _tmp2055 = _tmp127 * _tmp1853 - _tmp1854 * _tmp95;
  const Scalar _tmp2056 = -_tmp118 * _tmp1857 + _tmp127 * _tmp1856;
  const Scalar _tmp2057 = _tmp1024 * _tmp2055 + _tmp1394 * _tmp2056;
  const Scalar _tmp2058 = _tmp1027 * _tmp2057;
  const Scalar _tmp2059 = -_tmp1026 * _tmp2058 + _tmp1030 * _tmp2057 + _tmp2056 * _tmp612;
  const Scalar _tmp2060 = -_tmp118 * _tmp1734 + _tmp127 * _tmp1736;
  const Scalar _tmp2061 = _tmp127 * _tmp1738 - _tmp1739 * _tmp95;
  const Scalar _tmp2062 = _tmp1260 * _tmp2061 + _tmp1428 * _tmp2060;
  const Scalar _tmp2063 = _tmp1264 * _tmp2062 - _tmp1268 * _tmp2062 + _tmp2060 * _tmp432;
  const Scalar _tmp2064 = _tmp1077 * _tmp2049 - _tmp1079 * _tmp2049 + _tmp2048 * _tmp732;
  const Scalar _tmp2065 = _tmp127 * _tmp1823 - _tmp1822 * _tmp95;
  const Scalar _tmp2066 = -_tmp118 * _tmp1819 + _tmp127 * _tmp1820;
  const Scalar _tmp2067 = _tmp1301 * _tmp2065 + _tmp1526 * _tmp2066;
  const Scalar _tmp2068 = _tmp1306 * _tmp2067 - _tmp1309 * _tmp2067 + _tmp192 * _tmp2066;
  const Scalar _tmp2069 = _tmp127 * _tmp1827 - _tmp1828 * _tmp95;
  const Scalar _tmp2070 = -_tmp118 * _tmp1831 + _tmp127 * _tmp1830;
  const Scalar _tmp2071 = _tmp1521 * _tmp2070 + _tmp2069 * _tmp989;
  const Scalar _tmp2072 = -_tmp1275 * _tmp2071 + _tmp1276 * _tmp2071 + _tmp2069 * _tmp282;
  const Scalar _tmp2073 = _tmp10 * priors_0_1_sqrt_info(0, 3) +
                          _tmp17 * priors_0_1_sqrt_info(0, 4) + _tmp54 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp2074 = _tmp127 * _tmp1874 - _tmp1875 * _tmp95;
  const Scalar _tmp2075 = -_tmp118 * _tmp1877 + _tmp127 * _tmp1878;
  const Scalar _tmp2076 = _tmp1037 * _tmp2074 + _tmp1515 * _tmp2075;
  const Scalar _tmp2077 = -_tmp1541 * _tmp2076 + _tmp1542 * _tmp2076 + _tmp2074 * _tmp672;
  const Scalar _tmp2078 = _tmp10 * priors_0_1_sqrt_info(1, 3) +
                          _tmp17 * priors_0_1_sqrt_info(1, 4) + _tmp54 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp2079 = _tmp10 * priors_0_1_sqrt_info(3, 3) +
                          _tmp17 * priors_0_1_sqrt_info(3, 4) + _tmp54 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp2080 = _tmp127 * _tmp1837 - _tmp1836 * _tmp95;
  const Scalar _tmp2081 = -_tmp118 * _tmp1840 + _tmp127 * _tmp1839;
  const Scalar _tmp2082 = _tmp1416 * _tmp2081 + _tmp2080 * _tmp920;
  const Scalar _tmp2083 = _tmp2082 * _tmp925;
  const Scalar _tmp2084 = -_tmp1016 * _tmp2083 + _tmp1018 * _tmp2082 + _tmp2080 * _tmp372;
  const Scalar _tmp2085 = _tmp1786 + _tmp98;
  const Scalar _tmp2086 = _tmp1574 * priors_1_0_sqrt_info(1, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(1, 5) +
                          _tmp828 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2087 = -_tmp1380 * _tmp2045 + _tmp1381 * _tmp2045 + _tmp2044 * _tmp522;
  const Scalar _tmp2088 = -_tmp118 * _tmp1847 + _tmp127 * _tmp1848;
  const Scalar _tmp2089 = _tmp127 * _tmp1844 - _tmp1845 * _tmp95;
  const Scalar _tmp2090 = _tmp1088 * _tmp2089 + _tmp1494 * _tmp2088;
  const Scalar _tmp2091 = _tmp1092 * _tmp2090 - _tmp1094 * _tmp2090 + _tmp2088 * _tmp462;
  const Scalar _tmp2092 = _tmp2081 * _tmp372 + _tmp2082 * _tmp924 - _tmp2083 * _tmp922;
  const Scalar _tmp2093 = -_tmp118 * _tmp1886 + _tmp127 * _tmp1885;
  const Scalar _tmp2094 = _tmp127 * _tmp1883 - _tmp1882 * _tmp95;
  const Scalar _tmp2095 = _tmp1003 * _tmp2094 + _tmp1407 * _tmp2093;
  const Scalar _tmp2096 = _tmp1008 * _tmp2095;
  const Scalar _tmp2097 = -_tmp1005 * _tmp2096 + _tmp1007 * _tmp2095 + _tmp2094 * _tmp702;
  const Scalar _tmp2098 = _tmp1329 * _tmp2062 - _tmp1330 * _tmp2062 + _tmp2061 * _tmp432;
  const Scalar _tmp2099 = _tmp1574 * priors_1_0_sqrt_info(4, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(4, 5) +
                          _tmp828 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2100 = _tmp1574 * priors_1_0_sqrt_info(5, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(5, 5) +
                          _tmp828 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2101 = _tmp127 * _tmp1754 - _tmp1755 * _tmp95;
  const Scalar _tmp2102 = -_tmp118 * _tmp1757 + _tmp127 * _tmp1758;
  const Scalar _tmp2103 = _tmp1101 * _tmp2101 + _tmp1372 * _tmp2102;
  const Scalar _tmp2104 = -_tmp1106 * _tmp2103 + _tmp1108 * _tmp2103 + _tmp2101 * _tmp342;
  const Scalar _tmp2105 = _tmp127 * landmarks_19_;
  const Scalar _tmp2106 = -_tmp118 * _tmp1793 + _tmp1245 * _tmp2105;
  const Scalar _tmp2107 = _tmp1053 * _tmp2105 - _tmp1796 * _tmp95;
  const Scalar _tmp2108 = _tmp1055 * _tmp2107 + _tmp1502 * _tmp2106;
  const Scalar _tmp2109 = _tmp1545 * _tmp2108 - _tmp1546 * _tmp2108 + _tmp2107 * _tmp762;
  const Scalar _tmp2110 = -_tmp1271 * _tmp2090 + _tmp1272 * _tmp2090 + _tmp2089 * _tmp462;
  const Scalar _tmp2111 = _tmp1574 * priors_1_0_sqrt_info(2, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(2, 5) +
                          _tmp828 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2112 = _tmp10 * priors_0_1_sqrt_info(5, 3) +
                          _tmp17 * priors_0_1_sqrt_info(5, 4) + _tmp54 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp2113 = _tmp127 * _tmp1779 - _tmp1778 * _tmp95;
  const Scalar _tmp2114 = -_tmp118 * _tmp1782 + _tmp127 * _tmp1781;
  const Scalar _tmp2115 = _tmp1386 * _tmp2114 + _tmp2113 * _tmp933;
  const Scalar _tmp2116 = -_tmp1241 * _tmp2115 + _tmp1242 * _tmp2115 + _tmp2114 * _tmp252;
  const Scalar _tmp2117 = _tmp2113 * _tmp252 + _tmp2115 * _tmp939 - _tmp2115 * _tmp941;
  const Scalar _tmp2118 = _tmp127 * _tmp1726 - _tmp1725 * _tmp95;
  const Scalar _tmp2119 = -_tmp118 * _tmp1728 + _tmp127 * _tmp1729;
  const Scalar _tmp2120 = _tmp1158 * _tmp2118 + _tmp1400 * _tmp2119;
  const Scalar _tmp2121 = -_tmp1162 * _tmp2120 + _tmp1732 * _tmp2120 + _tmp2118 * _tmp402;
  const Scalar _tmp2122 = _tmp1216 * _tmp2041 - _tmp1556 * _tmp2041 + _tmp2039 * _tmp552;
  const Scalar _tmp2123 = _tmp2071 * _tmp991;
  const Scalar _tmp2124 = _tmp2070 * _tmp282 + _tmp2123 * _tmp992 - _tmp2123 * _tmp994;
  const Scalar _tmp2125 = -_tmp118 * _tmp1867 + _tmp127 * _tmp1868;
  const Scalar _tmp2126 = _tmp127 * _tmp1865 - _tmp1864 * _tmp95;
  const Scalar _tmp2127 = _tmp1422 * _tmp2125 + _tmp2126 * _tmp845;
  const Scalar _tmp2128 = _tmp2125 * _tmp492 - _tmp2127 * _tmp849 + _tmp2127 * _tmp852;
  const Scalar _tmp2129 = _tmp1323 * _tmp2067 - _tmp1324 * _tmp2067 + _tmp192 * _tmp2065;
  const Scalar _tmp2130 = -_tmp118 * _tmp1763 + _tmp127 * _tmp1762;
  const Scalar _tmp2131 = _tmp127 * _tmp1766 - _tmp1765 * _tmp95;
  const Scalar _tmp2132 = _tmp1197 * _tmp2131 + _tmp1447 * _tmp2130;
  const Scalar _tmp2133 = _tmp1201 * _tmp2132 - _tmp1203 * _tmp2132 + _tmp2131 * _tmp312;
  const Scalar _tmp2134 = _tmp1042 * _tmp2076 - _tmp1044 * _tmp2076 + _tmp2075 * _tmp672;
  const Scalar _tmp2135 = -_tmp1233 * _tmp2120 + _tmp1791 * _tmp2120 + _tmp2119 * _tmp402;
  const Scalar _tmp2136 = -_tmp1247 * _tmp2108 + _tmp1248 * _tmp2108 + _tmp2106 * _tmp762;
  const Scalar _tmp2137 = _tmp127 * _tmp1924 - _tmp1802 * _tmp95;
  const Scalar _tmp2138 = -_tmp118 * _tmp1805 + _tmp127 * _tmp1922;
  const Scalar _tmp2139 = _tmp1140 * _tmp2137 + _tmp1478 * _tmp2138;
  const Scalar _tmp2140 = _tmp1333 * _tmp2139 - _tmp1334 * _tmp2139 + _tmp2137 * _tmp222;
  const Scalar _tmp2141 = -_tmp1187 * _tmp2058 + _tmp1188 * _tmp2057 + _tmp2055 * _tmp612;
  const Scalar _tmp2142 = _tmp1574 * priors_1_0_sqrt_info(0, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(0, 5) +
                          _tmp828 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2143 = _tmp1047 * _tmp2127 - _tmp1048 * _tmp2127 + _tmp2126 * _tmp492;
  const Scalar _tmp2144 = -_tmp1147 * _tmp2139 + _tmp1149 * _tmp2139 + _tmp2138 * _tmp222;
  const Scalar _tmp2145 = _tmp127 * landmarks_15_;
  const Scalar _tmp2146 = _tmp1120 * _tmp2145 - _tmp1901 * _tmp95;
  const Scalar _tmp2147 = _tmp1131 * _tmp2145 - _tmp118 * _tmp1899;
  const Scalar _tmp2148 = _tmp1123 * _tmp2146 + _tmp1433 * _tmp2147;
  const Scalar _tmp2149 = _tmp1127 * _tmp2148 - _tmp1553 * _tmp2148 + _tmp2146 * _tmp642;
  const Scalar _tmp2150 = _tmp1279 * _tmp2132 - _tmp1280 * _tmp2132 + _tmp2130 * _tmp312;
  const Scalar _tmp2151 = _tmp1574 * priors_1_0_sqrt_info(3, 3) +
                          _tmp2085 * priors_1_0_sqrt_info(3, 5) +
                          _tmp828 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2152 = _tmp1133 * _tmp2148 - _tmp1436 * _tmp2148 + _tmp2147 * _tmp642;
  const Scalar _tmp2153 = _tmp10 * priors_0_1_sqrt_info(2, 3) +
                          _tmp17 * priors_0_1_sqrt_info(2, 4) + _tmp54 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp2154 = -_tmp1326 * _tmp2053 + _tmp1327 * _tmp2053 + _tmp2051 * _tmp582;
  const Scalar _tmp2155 = -_tmp1227 * _tmp2103 + _tmp1228 * _tmp2103 + _tmp2102 * _tmp342;
  const Scalar _tmp2156 = -_tmp1112 * _tmp2096 + _tmp1115 * _tmp2095 + _tmp2093 * _tmp702;
  const Scalar _tmp2157 = _tmp10 * priors_0_1_sqrt_info(4, 3) +
                          _tmp17 * priors_0_1_sqrt_info(4, 4) + _tmp54 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp2158 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp766, Scalar(2));
  const Scalar _tmp2159 = (Scalar(1) / Scalar(2)) * _tmp125 * _tmp163 +
                          (Scalar(1) / Scalar(2)) * _tmp127 * _tmp159 +
                          (Scalar(1) / Scalar(2)) * _tmp128 * _tmp155;
  const Scalar _tmp2160 = _tmp2159 * _views_1_calibration[1];
  const Scalar _tmp2161 = _tmp103 * _tmp163 + _tmp107 * _tmp155 + _tmp159 * _tmp95;
  const Scalar _tmp2162 = _tmp2161 * _views_1_calibration[1];
  const Scalar _tmp2163 = -_tmp1298 * _tmp2160 + _tmp170 * _tmp2162;
  const Scalar _tmp2164 = _tmp2159 * _views_1_calibration[0];
  const Scalar _tmp2165 = _tmp114 * _tmp155 + _tmp118 * _tmp159 + _tmp120 * _tmp163;
  const Scalar _tmp2166 = _tmp2165 * _views_1_calibration[0];
  const Scalar _tmp2167 = -_tmp1302 * _tmp2164 + _tmp170 * _tmp2166;
  const Scalar _tmp2168 = _tmp1301 * _tmp2163 + _tmp1526 * _tmp2167;
  const Scalar _tmp2169 = _tmp1308 * _tmp2168;
  const Scalar _tmp2170 = -_tmp1304 * _tmp2169 + _tmp1306 * _tmp2168 + _tmp192 * _tmp2167;
  const Scalar _tmp2171 = -_tmp1322 * _tmp2169 + _tmp1323 * _tmp2168 + _tmp192 * _tmp2163;
  const Scalar _tmp2172 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp769, Scalar(2));
  const Scalar _tmp2173 = -_tmp1137 * _tmp2160 + _tmp208 * _tmp2162;
  const Scalar _tmp2174 = -_tmp1141 * _tmp2164 + _tmp208 * _tmp2166;
  const Scalar _tmp2175 = _tmp1140 * _tmp2173 + _tmp1478 * _tmp2174;
  const Scalar _tmp2176 = _tmp1333 * _tmp2175 - _tmp1334 * _tmp2175 + _tmp2173 * _tmp222;
  const Scalar _tmp2177 = _tmp1145 * _tmp2175;
  const Scalar _tmp2178 = -_tmp1146 * _tmp2177 + _tmp1148 * _tmp2177 + _tmp2174 * _tmp222;
  const Scalar _tmp2179 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp772, Scalar(2));
  const Scalar _tmp2180 = -_tmp2160 * _tmp930 + _tmp2162 * _tmp238;
  const Scalar _tmp2181 = -_tmp2164 * _tmp934 + _tmp2166 * _tmp238;
  const Scalar _tmp2182 = _tmp1386 * _tmp2181 + _tmp2180 * _tmp933;
  const Scalar _tmp2183 = _tmp2180 * _tmp252 + _tmp2182 * _tmp939 - _tmp2182 * _tmp941;
  const Scalar _tmp2184 = -_tmp1241 * _tmp2182 + _tmp1242 * _tmp2182 + _tmp2181 * _tmp252;
  const Scalar _tmp2185 = -_tmp2160 * _tmp986 + _tmp2162 * _tmp268;
  const Scalar _tmp2186 = -_tmp2164 * _tmp984 + _tmp2166 * _tmp268;
  const Scalar _tmp2187 = _tmp1521 * _tmp2186 + _tmp2185 * _tmp989;
  const Scalar _tmp2188 = _tmp2186 * _tmp282 + _tmp2187 * _tmp993 - _tmp2187 * _tmp995;
  const Scalar _tmp2189 = -_tmp1275 * _tmp2187 + _tmp1276 * _tmp2187 + _tmp2185 * _tmp282;
  const Scalar _tmp2190 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp775, Scalar(2));
  const Scalar _tmp2191 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp778, Scalar(2));
  const Scalar _tmp2192 = -_tmp1193 * _tmp2160 + _tmp2162 * _tmp298;
  const Scalar _tmp2193 = -_tmp1196 * _tmp2164 + _tmp2166 * _tmp298;
  const Scalar _tmp2194 = _tmp1197 * _tmp2192 + _tmp1447 * _tmp2193;
  const Scalar _tmp2195 = _tmp1279 * _tmp2194 - _tmp1280 * _tmp2194 + _tmp2193 * _tmp312;
  const Scalar _tmp2196 = _tmp1201 * _tmp2194 - _tmp1203 * _tmp2194 + _tmp2192 * _tmp312;
  const Scalar _tmp2197 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp781, Scalar(2));
  const Scalar _tmp2198 = -_tmp1102 * _tmp2164 + _tmp2166 * _tmp328;
  const Scalar _tmp2199 = -_tmp1098 * _tmp2160 + _tmp2162 * _tmp328;
  const Scalar _tmp2200 = _tmp1101 * _tmp2199 + _tmp1372 * _tmp2198;
  const Scalar _tmp2201 = -_tmp1227 * _tmp2200 + _tmp1228 * _tmp2200 + _tmp2198 * _tmp342;
  const Scalar _tmp2202 = -_tmp1106 * _tmp2200 + _tmp1108 * _tmp2200 + _tmp2199 * _tmp342;
  const Scalar _tmp2203 = -_tmp2164 * _tmp915 + _tmp2166 * _tmp358;
  const Scalar _tmp2204 = -_tmp2160 * _tmp917 + _tmp2162 * _tmp358;
  const Scalar _tmp2205 = _tmp1416 * _tmp2203 + _tmp2204 * _tmp920;
  const Scalar _tmp2206 = _tmp2205 * _tmp922;
  const Scalar _tmp2207 = _tmp2203 * _tmp372 + _tmp2206 * _tmp923 - _tmp2206 * _tmp925;
  const Scalar _tmp2208 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp784, Scalar(2));
  const Scalar _tmp2209 = -_tmp1017 * _tmp2205 + _tmp1018 * _tmp2205 + _tmp2204 * _tmp372;
  const Scalar _tmp2210 = -_tmp1153 * _tmp2164 + _tmp2166 * _tmp388;
  const Scalar _tmp2211 = -_tmp1155 * _tmp2160 + _tmp2162 * _tmp388;
  const Scalar _tmp2212 = _tmp1158 * _tmp2211 + _tmp1400 * _tmp2210;
  const Scalar _tmp2213 = _tmp1165 * _tmp2212;
  const Scalar _tmp2214 = _tmp1231 * _tmp2213 - _tmp1233 * _tmp2212 + _tmp2210 * _tmp402;
  const Scalar _tmp2215 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp787, Scalar(2));
  const Scalar _tmp2216 = -_tmp1162 * _tmp2212 + _tmp1164 * _tmp2213 + _tmp2211 * _tmp402;
  const Scalar _tmp2217 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp790, Scalar(2));
  const Scalar _tmp2218 = -_tmp1256 * _tmp2160 * _tmp422 + _tmp2161 * _tmp423;
  const Scalar _tmp2219 = -_tmp1256 * _tmp2164 * _tmp414 + _tmp2166 * _tmp418;
  const Scalar _tmp2220 = _tmp1260 * _tmp2218 + _tmp1428 * _tmp2219;
  const Scalar _tmp2221 = _tmp1329 * _tmp2220 - _tmp1330 * _tmp2220 + _tmp2218 * _tmp432;
  const Scalar _tmp2222 = _tmp1264 * _tmp2220 - _tmp1268 * _tmp2220 + _tmp2219 * _tmp432;
  const Scalar _tmp2223 = -_tmp1085 * _tmp2160 + _tmp2162 * _tmp448;
  const Scalar _tmp2224 = -_tmp1083 * _tmp2164 + _tmp2166 * _tmp448;
  const Scalar _tmp2225 = _tmp1088 * _tmp2223 + _tmp1494 * _tmp2224;
  const Scalar _tmp2226 = _tmp1092 * _tmp2225 - _tmp1094 * _tmp2225 + _tmp2224 * _tmp462;
  const Scalar _tmp2227 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp793, Scalar(2));
  const Scalar _tmp2228 = -_tmp1271 * _tmp2225 + _tmp1272 * _tmp2225 + _tmp2223 * _tmp462;
  const Scalar _tmp2229 = -_tmp2164 * _tmp837 + _tmp2166 * _tmp478;
  const Scalar _tmp2230 = -_tmp2160 * _tmp839 + _tmp2162 * _tmp478;
  const Scalar _tmp2231 = _tmp1422 * _tmp2229 + _tmp2230 * _tmp845;
  const Scalar _tmp2232 = _tmp1047 * _tmp2231 - _tmp1048 * _tmp2231 + _tmp2230 * _tmp492;
  const Scalar _tmp2233 = _tmp2229 * _tmp492 - _tmp2231 * _tmp849 + _tmp2231 * _tmp852;
  const Scalar _tmp2234 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp796, Scalar(2));
  const Scalar _tmp2235 = -_tmp1285 * _tmp2160 + _tmp2162 * _tmp508;
  const Scalar _tmp2236 = -_tmp1289 * _tmp2164 + _tmp2166 * _tmp508;
  const Scalar _tmp2237 = _tmp1288 * _tmp2235 + _tmp1378 * _tmp2236;
  const Scalar _tmp2238 = -_tmp1380 * _tmp2237 + _tmp1381 * _tmp2237 + _tmp2235 * _tmp522;
  const Scalar _tmp2239 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp799, Scalar(2));
  const Scalar _tmp2240 = _tmp1341 * _tmp2237 - _tmp1343 * _tmp2237 + _tmp2236 * _tmp522;
  const Scalar _tmp2241 = -_tmp1207 * _tmp2164 + _tmp2166 * _tmp538;
  const Scalar _tmp2242 = -_tmp1209 * _tmp2160 + _tmp2161 * _tmp543;
  const Scalar _tmp2243 = _tmp1212 * _tmp2242 + _tmp1487 * _tmp2241;
  const Scalar _tmp2244 = _tmp1216 * _tmp2243 - _tmp1556 * _tmp2243 + _tmp2241 * _tmp552;
  const Scalar _tmp2245 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp802, Scalar(2));
  const Scalar _tmp2246 = _tmp1221 * _tmp2243 - _tmp1489 * _tmp2243 + _tmp2242 * _tmp552;
  const Scalar _tmp2247 = -_tmp1173 * _tmp2164 + _tmp2166 * _tmp568;
  const Scalar _tmp2248 = -_tmp1175 * _tmp2160 + _tmp2162 * _tmp568;
  const Scalar _tmp2249 = _tmp1178 * _tmp2248 + _tmp1534 * _tmp2247;
  const Scalar _tmp2250 = -_tmp1182 * _tmp2249 + _tmp1185 * _tmp2249 + _tmp2247 * _tmp582;
  const Scalar _tmp2251 = -_tmp1326 * _tmp2249 + _tmp1327 * _tmp2249 + _tmp2248 * _tmp582;
  const Scalar _tmp2252 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp805, Scalar(2));
  const Scalar _tmp2253 = -_tmp1020 * _tmp2160 * _tmp602 + _tmp2162 * _tmp598;
  const Scalar _tmp2254 = -_tmp1020 * _tmp2164 * _tmp594 + _tmp2166 * _tmp598;
  const Scalar _tmp2255 = _tmp1024 * _tmp2253 + _tmp1394 * _tmp2254;
  const Scalar _tmp2256 = _tmp1188 * _tmp2255 - _tmp1189 * _tmp2255 + _tmp2253 * _tmp612;
  const Scalar _tmp2257 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp808, Scalar(2));
  const Scalar _tmp2258 = _tmp1026 * _tmp2255;
  const Scalar _tmp2259 = -_tmp1027 * _tmp2258 + _tmp1029 * _tmp2258 + _tmp2254 * _tmp612;
  const Scalar _tmp2260 = -_tmp1119 * _tmp2160 + _tmp2162 * _tmp628;
  const Scalar _tmp2261 = -_tmp1122 * _tmp2164 + _tmp2166 * _tmp628;
  const Scalar _tmp2262 = _tmp1123 * _tmp2260 + _tmp1433 * _tmp2261;
  const Scalar _tmp2263 = _tmp1132 * _tmp2262;
  const Scalar _tmp2264 = _tmp1126 * _tmp2263 - _tmp1128 * _tmp2263 + _tmp2261 * _tmp642;
  const Scalar _tmp2265 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp811, Scalar(2));
  const Scalar _tmp2266 = _tmp1127 * _tmp2262 - _tmp1553 * _tmp2262 + _tmp2260 * _tmp642;
  const Scalar _tmp2267 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp814, Scalar(2));
  const Scalar _tmp2268 = -_tmp1514 * _tmp2160 + _tmp2162 * _tmp658;
  const Scalar _tmp2269 = -_tmp1511 * _tmp2164 + _tmp2165 * _tmp659;
  const Scalar _tmp2270 = _tmp1037 * _tmp2268 + _tmp1515 * _tmp2269;
  const Scalar _tmp2271 = _tmp1042 * _tmp2270 - _tmp1044 * _tmp2270 + _tmp2269 * _tmp672;
  const Scalar _tmp2272 = -_tmp1541 * _tmp2270 + _tmp1542 * _tmp2270 + _tmp2268 * _tmp672;
  const Scalar _tmp2273 = -_tmp1000 * _tmp2160 + _tmp2162 * _tmp688;
  const Scalar _tmp2274 = -_tmp2164 * _tmp999 + _tmp2166 * _tmp688;
  const Scalar _tmp2275 = _tmp1003 * _tmp2273 + _tmp1407 * _tmp2274;
  const Scalar _tmp2276 = -_tmp1113 * _tmp2275 + _tmp1115 * _tmp2275 + _tmp2274 * _tmp702;
  const Scalar _tmp2277 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp817, Scalar(2));
  const Scalar _tmp2278 = _tmp1007 * _tmp2275 - _tmp1009 * _tmp2275 + _tmp2273 * _tmp702;
  const Scalar _tmp2279 = -_tmp1069 * _tmp2164 + _tmp2166 * _tmp718;
  const Scalar _tmp2280 = -_tmp1070 * _tmp2160 + _tmp2162 * _tmp718;
  const Scalar _tmp2281 = _tmp1073 * _tmp2280 + _tmp1442 * _tmp2279;
  const Scalar _tmp2282 = _tmp1313 * _tmp2281 - _tmp1314 * _tmp2281 + _tmp2279 * _tmp732;
  const Scalar _tmp2283 = _tmp1077 * _tmp2281 - _tmp1079 * _tmp2281 + _tmp2280 * _tmp732;
  const Scalar _tmp2284 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp820, Scalar(2));
  const Scalar _tmp2285 = -_tmp1052 * _tmp2160 + _tmp2162 * _tmp748;
  const Scalar _tmp2286 = -_tmp1056 * _tmp2164 + _tmp2166 * _tmp748;
  const Scalar _tmp2287 = _tmp1055 * _tmp2285 + _tmp1502 * _tmp2286;
  const Scalar _tmp2288 = _tmp1545 * _tmp2287 - _tmp1546 * _tmp2287 + _tmp2285 * _tmp762;
  const Scalar _tmp2289 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp823, Scalar(2));
  const Scalar _tmp2290 = -_tmp1247 * _tmp2287 + _tmp1248 * _tmp2287 + _tmp2286 * _tmp762;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp60;
    _residual(1, 0) = _tmp62;
    _residual(2, 0) = _tmp63;
    _residual(3, 0) = _tmp68;
    _residual(4, 0) = _tmp69;
    _residual(5, 0) = _tmp70;
    _residual(6, 0) = _tmp132;
    _residual(7, 0) = _tmp134;
    _residual(8, 0) = _tmp135;
    _residual(9, 0) = _tmp138;
    _residual(10, 0) = _tmp139;
    _residual(11, 0) = _tmp140;
    _residual(12, 0) = _tmp193;
    _residual(13, 0) = _tmp194;
    _residual(14, 0) = _tmp223;
    _residual(15, 0) = _tmp224;
    _residual(16, 0) = _tmp253;
    _residual(17, 0) = _tmp254;
    _residual(18, 0) = _tmp283;
    _residual(19, 0) = _tmp284;
    _residual(20, 0) = _tmp313;
    _residual(21, 0) = _tmp314;
    _residual(22, 0) = _tmp343;
    _residual(23, 0) = _tmp344;
    _residual(24, 0) = _tmp373;
    _residual(25, 0) = _tmp374;
    _residual(26, 0) = _tmp403;
    _residual(27, 0) = _tmp404;
    _residual(28, 0) = _tmp433;
    _residual(29, 0) = _tmp434;
    _residual(30, 0) = _tmp463;
    _residual(31, 0) = _tmp464;
    _residual(32, 0) = _tmp493;
    _residual(33, 0) = _tmp494;
    _residual(34, 0) = _tmp523;
    _residual(35, 0) = _tmp524;
    _residual(36, 0) = _tmp553;
    _residual(37, 0) = _tmp554;
    _residual(38, 0) = _tmp583;
    _residual(39, 0) = _tmp584;
    _residual(40, 0) = _tmp613;
    _residual(41, 0) = _tmp614;
    _residual(42, 0) = _tmp643;
    _residual(43, 0) = _tmp644;
    _residual(44, 0) = _tmp673;
    _residual(45, 0) = _tmp674;
    _residual(46, 0) = _tmp703;
    _residual(47, 0) = _tmp704;
    _residual(48, 0) = _tmp733;
    _residual(49, 0) = _tmp734;
    _residual(50, 0) = _tmp763;
    _residual(51, 0) = _tmp764;
    _residual(52, 0) = _tmp765 * _tmp767;
    _residual(53, 0) = _tmp768 * _tmp770;
    _residual(54, 0) = _tmp771 * _tmp773;
    _residual(55, 0) = _tmp774 * _tmp776;
    _residual(56, 0) = _tmp777 * _tmp779;
    _residual(57, 0) = _tmp780 * _tmp782;
    _residual(58, 0) = _tmp783 * _tmp785;
    _residual(59, 0) = _tmp786 * _tmp788;
    _residual(60, 0) = _tmp789 * _tmp791;
    _residual(61, 0) = _tmp792 * _tmp794;
    _residual(62, 0) = _tmp795 * _tmp797;
    _residual(63, 0) = _tmp798 * _tmp800;
    _residual(64, 0) = _tmp801 * _tmp803;
    _residual(65, 0) = _tmp804 * _tmp806;
    _residual(66, 0) = _tmp807 * _tmp809;
    _residual(67, 0) = _tmp810 * _tmp812;
    _residual(68, 0) = _tmp813 * _tmp815;
    _residual(69, 0) = _tmp816 * _tmp818;
    _residual(70, 0) = _tmp819 * _tmp821;
    _residual(71, 0) = _tmp822 * _tmp824;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp1010 * _tmp704 + _tmp1015 * _tmp139 + _tmp1019 * _tmp374 + _tmp1032 * _tmp613 +
                 _tmp1045 * _tmp673 + _tmp1049 * _tmp494 + _tmp1062 * _tmp764 + _tmp1066 * _tmp62 +
                 _tmp1080 * _tmp734 + _tmp1095 * _tmp463 + _tmp1109 * _tmp344 + _tmp1111 * _tmp60 +
                 _tmp1116 * _tmp703 + _tmp1130 * _tmp644 + _tmp1134 * _tmp643 + _tmp1150 * _tmp223 +
                 _tmp1167 * _tmp404 + _tmp1170 * _tmp140 + _tmp1186 * _tmp583 + _tmp1190 * _tmp614 +
                 _tmp1204 * _tmp314 + _tmp1219 * _tmp553 + _tmp1222 * _tmp554 + _tmp1225 * _tmp69 +
                 _tmp1230 * _tmp343 + _tmp1234 * _tmp403 + _tmp1239 * _tmp68 + _tmp1243 * _tmp253 +
                 _tmp1249 * _tmp763 + _tmp1252 * _tmp674 + _tmp1255 * _tmp70 + _tmp1269 * _tmp433 +
                 _tmp1273 * _tmp464 + _tmp1277 * _tmp284 + _tmp1282 * _tmp313 + _tmp1295 * _tmp524 +
                 _tmp1310 * _tmp193 + _tmp1315 * _tmp733 + _tmp1318 * _tmp135 + _tmp132 * _tmp1321 +
                 _tmp1325 * _tmp194 + _tmp1328 * _tmp584 + _tmp1331 * _tmp434 + _tmp1335 * _tmp224 +
                 _tmp1339 * _tmp134 + _tmp1344 * _tmp523 + _tmp138 * _tmp912 + _tmp254 * _tmp942 +
                 _tmp283 * _tmp996 + _tmp373 * _tmp927 + _tmp493 * _tmp855 + _tmp63 * _tmp981;
    _rhs(1, 0) = _tmp132 * _tmp1412 + _tmp134 * _tmp1369 + _tmp135 * _tmp1560 + _tmp1374 * _tmp343 +
                 _tmp138 * _tmp1538 + _tmp1382 * _tmp524 + _tmp139 * _tmp1438 + _tmp1390 * _tmp254 +
                 _tmp1396 * _tmp614 + _tmp140 * _tmp1483 + _tmp1403 * _tmp403 + _tmp1409 * _tmp703 +
                 _tmp1419 * _tmp374 + _tmp1424 * _tmp494 + _tmp1430 * _tmp434 + _tmp1437 * _tmp643 +
                 _tmp1444 * _tmp733 + _tmp1449 * _tmp313 + _tmp1465 * _tmp68 + _tmp1466 * _tmp253 +
                 _tmp1467 * _tmp734 + _tmp1474 * _tmp60 + _tmp1481 * _tmp224 + _tmp1482 * _tmp704 +
                 _tmp1490 * _tmp554 + _tmp1496 * _tmp463 + _tmp1497 * _tmp63 + _tmp1498 * _tmp223 +
                 _tmp1504 * _tmp763 + _tmp1505 * _tmp523 + _tmp1507 * _tmp464 + _tmp1508 * _tmp373 +
                 _tmp1509 * _tmp613 + _tmp1517 * _tmp673 + _tmp1523 * _tmp284 + _tmp1528 * _tmp194 +
                 _tmp1530 * _tmp62 + _tmp1531 * _tmp404 + _tmp1536 * _tmp584 + _tmp1537 * _tmp193 +
                 _tmp1540 * _tmp69 + _tmp1544 * _tmp674 + _tmp1547 * _tmp764 + _tmp1548 * _tmp314 +
                 _tmp1549 * _tmp344 + _tmp1550 * _tmp583 + _tmp1552 * _tmp70 + _tmp1554 * _tmp644 +
                 _tmp1555 * _tmp283 + _tmp1557 * _tmp553 + _tmp1558 * _tmp493 + _tmp1559 * _tmp433;
    _rhs(2, 0) = _tmp132 * _tmp1645 + _tmp134 * _tmp1671 + _tmp135 * _tmp1655 + _tmp138 * _tmp1704 +
                 _tmp139 * _tmp1672 + _tmp140 * _tmp1654 + _tmp1572 * _tmp62 + _tmp1580 * _tmp674 +
                 _tmp1584 * _tmp613 + _tmp1588 * _tmp734 + _tmp1593 * _tmp224 + _tmp1597 * _tmp403 +
                 _tmp1601 * _tmp764 + _tmp1605 * _tmp60 + _tmp1609 * _tmp463 + _tmp1610 * _tmp464 +
                 _tmp1614 * _tmp254 + _tmp1618 * _tmp344 + _tmp1623 * _tmp314 + _tmp1627 * _tmp704 +
                 _tmp1631 * _tmp373 + _tmp1646 * _tmp614 + _tmp1650 * _tmp554 + _tmp1652 * _tmp404 +
                 _tmp1657 * _tmp343 + _tmp1661 * _tmp194 + _tmp1662 * _tmp70 + _tmp1664 * _tmp733 +
                 _tmp1669 * _tmp433 + _tmp1670 * _tmp313 + _tmp1676 * _tmp524 + _tmp1677 * _tmp68 +
                 _tmp1681 * _tmp584 + _tmp1682 * _tmp223 + _tmp1686 * _tmp283 + _tmp1687 * _tmp703 +
                 _tmp1688 * _tmp253 + _tmp1689 * _tmp583 + _tmp1693 * _tmp493 + _tmp1694 * _tmp284 +
                 _tmp1695 * _tmp434 + _tmp1697 * _tmp63 + _tmp1701 * _tmp643 + _tmp1702 * _tmp374 +
                 _tmp1703 * _tmp494 + _tmp1705 * _tmp553 + _tmp1706 * _tmp644 + _tmp1707 * _tmp673 +
                 _tmp1708 * _tmp69 + _tmp1709 * _tmp763 + _tmp1710 * _tmp193 + _tmp1711 * _tmp523;
    _rhs(3, 0) = _tmp132 * _tmp1896 + _tmp134 * _tmp1800 + _tmp135 * _tmp1790 + _tmp138 * _tmp1789 +
                 _tmp139 * _tmp1788 + _tmp140 * _tmp1835 + _tmp1712 * _tmp62 + _tmp1722 * _tmp583 +
                 _tmp1724 * _tmp584 + _tmp1733 * _tmp404 + _tmp1744 * _tmp434 + _tmp1752 * _tmp734 +
                 _tmp1753 * _tmp63 + _tmp1761 * _tmp343 + _tmp1769 * _tmp313 + _tmp1777 * _tmp523 +
                 _tmp1785 * _tmp254 + _tmp1792 * _tmp403 + _tmp1799 * _tmp764 + _tmp1801 * _tmp68 +
                 _tmp1808 * _tmp223 + _tmp1810 * _tmp433 + _tmp1818 * _tmp554 + _tmp1826 * _tmp193 +
                 _tmp1834 * _tmp283 + _tmp1843 * _tmp373 + _tmp1851 * _tmp464 + _tmp1861 * _tmp613 +
                 _tmp1863 * _tmp194 + _tmp1872 * _tmp494 + _tmp1873 * _tmp253 + _tmp1881 * _tmp674 +
                 _tmp1890 * _tmp704 + _tmp1891 * _tmp344 + _tmp1892 * _tmp493 + _tmp1894 * _tmp314 +
                 _tmp1895 * _tmp70 + _tmp1897 * _tmp553 + _tmp1904 * _tmp643 + _tmp1905 * _tmp763 +
                 _tmp1906 * _tmp224 + _tmp1907 * _tmp644 + _tmp1908 * _tmp524 + _tmp1909 * _tmp703 +
                 _tmp1910 * _tmp463 + _tmp1911 * _tmp284 + _tmp1912 * _tmp673 + _tmp1913 * _tmp374 +
                 _tmp1914 * _tmp60 + _tmp1915 * _tmp69 + _tmp1916 * _tmp614 + _tmp1917 * _tmp733;
    _rhs(4, 0) = _tmp132 * _tmp2029 + _tmp134 * _tmp1969 + _tmp135 * _tmp1999 + _tmp138 * _tmp2023 +
                 _tmp139 * _tmp1988 + _tmp140 * _tmp1962 + _tmp1921 * _tmp403 + _tmp1927 * _tmp223 +
                 _tmp1928 * _tmp224 + _tmp193 * _tmp2015 + _tmp1932 * _tmp613 + _tmp1936 * _tmp524 +
                 _tmp194 * _tmp1940 + _tmp1945 * _tmp643 + _tmp1950 * _tmp703 + _tmp1954 * _tmp434 +
                 _tmp1956 * _tmp704 + _tmp1960 * _tmp253 + _tmp1963 * _tmp70 + _tmp1967 * _tmp584 +
                 _tmp1968 * _tmp60 + _tmp1974 * _tmp763 + _tmp1978 * _tmp314 + _tmp1982 * _tmp344 +
                 _tmp1983 * _tmp583 + _tmp1987 * _tmp283 + _tmp1992 * _tmp463 + _tmp1996 * _tmp494 +
                 _tmp1997 * _tmp284 + _tmp1998 * _tmp68 + _tmp2000 * _tmp644 + _tmp2001 * _tmp764 +
                 _tmp2002 * _tmp614 + _tmp2006 * _tmp734 + _tmp2007 * _tmp433 + _tmp2011 * _tmp674 +
                 _tmp2013 * _tmp254 + _tmp2014 * _tmp733 + _tmp2016 * _tmp343 + _tmp2017 * _tmp63 +
                 _tmp2022 * _tmp553 + _tmp2024 * _tmp523 + _tmp2025 * _tmp404 + _tmp2026 * _tmp464 +
                 _tmp2027 * _tmp673 + _tmp2028 * _tmp62 + _tmp2033 * _tmp373 + _tmp2034 * _tmp374 +
                 _tmp2035 * _tmp554 + _tmp2036 * _tmp69 + _tmp2037 * _tmp313 + _tmp2038 * _tmp493;
    _rhs(5, 0) = _tmp132 * _tmp2142 + _tmp134 * _tmp2086 + _tmp135 * _tmp2111 + _tmp138 * _tmp2151 +
                 _tmp139 * _tmp2099 + _tmp140 * _tmp2100 + _tmp193 * _tmp2068 + _tmp194 * _tmp2129 +
                 _tmp2042 * _tmp554 + _tmp2046 * _tmp523 + _tmp2050 * _tmp733 + _tmp2054 * _tmp583 +
                 _tmp2059 * _tmp613 + _tmp2063 * _tmp433 + _tmp2064 * _tmp734 + _tmp2072 * _tmp284 +
                 _tmp2073 * _tmp60 + _tmp2077 * _tmp674 + _tmp2078 * _tmp62 + _tmp2079 * _tmp68 +
                 _tmp2084 * _tmp374 + _tmp2087 * _tmp524 + _tmp2091 * _tmp463 + _tmp2092 * _tmp373 +
                 _tmp2097 * _tmp704 + _tmp2098 * _tmp434 + _tmp2104 * _tmp344 + _tmp2109 * _tmp764 +
                 _tmp2110 * _tmp464 + _tmp2112 * _tmp70 + _tmp2116 * _tmp253 + _tmp2117 * _tmp254 +
                 _tmp2121 * _tmp404 + _tmp2122 * _tmp553 + _tmp2124 * _tmp283 + _tmp2128 * _tmp493 +
                 _tmp2133 * _tmp314 + _tmp2134 * _tmp673 + _tmp2135 * _tmp403 + _tmp2136 * _tmp763 +
                 _tmp2140 * _tmp224 + _tmp2141 * _tmp614 + _tmp2143 * _tmp494 + _tmp2144 * _tmp223 +
                 _tmp2149 * _tmp644 + _tmp2150 * _tmp313 + _tmp2152 * _tmp643 + _tmp2153 * _tmp63 +
                 _tmp2154 * _tmp584 + _tmp2155 * _tmp343 + _tmp2156 * _tmp703 + _tmp2157 * _tmp69;
    _rhs(6, 0) = _tmp193 * _tmp2170 + _tmp194 * _tmp2171 + _tmp2158 * _tmp765;
    _rhs(7, 0) = _tmp2172 * _tmp768 + _tmp2176 * _tmp224 + _tmp2178 * _tmp223;
    _rhs(8, 0) = _tmp2179 * _tmp771 + _tmp2183 * _tmp254 + _tmp2184 * _tmp253;
    _rhs(9, 0) = _tmp2188 * _tmp283 + _tmp2189 * _tmp284 + _tmp2190 * _tmp774;
    _rhs(10, 0) = _tmp2191 * _tmp777 + _tmp2195 * _tmp313 + _tmp2196 * _tmp314;
    _rhs(11, 0) = _tmp2197 * _tmp780 + _tmp2201 * _tmp343 + _tmp2202 * _tmp344;
    _rhs(12, 0) = _tmp2207 * _tmp373 + _tmp2208 * _tmp783 + _tmp2209 * _tmp374;
    _rhs(13, 0) = _tmp2214 * _tmp403 + _tmp2215 * _tmp786 + _tmp2216 * _tmp404;
    _rhs(14, 0) = _tmp2217 * _tmp789 + _tmp2221 * _tmp434 + _tmp2222 * _tmp433;
    _rhs(15, 0) = _tmp2226 * _tmp463 + _tmp2227 * _tmp792 + _tmp2228 * _tmp464;
    _rhs(16, 0) = _tmp2232 * _tmp494 + _tmp2233 * _tmp493 + _tmp2234 * _tmp795;
    _rhs(17, 0) = _tmp2238 * _tmp524 + _tmp2239 * _tmp798 + _tmp2240 * _tmp523;
    _rhs(18, 0) = _tmp2244 * _tmp553 + _tmp2245 * _tmp801 + _tmp2246 * _tmp554;
    _rhs(19, 0) = _tmp2250 * _tmp583 + _tmp2251 * _tmp584 + _tmp2252 * _tmp804;
    _rhs(20, 0) = _tmp2256 * _tmp614 + _tmp2257 * _tmp807 + _tmp2259 * _tmp613;
    _rhs(21, 0) = _tmp2264 * _tmp643 + _tmp2265 * _tmp810 + _tmp2266 * _tmp644;
    _rhs(22, 0) = _tmp2267 * _tmp813 + _tmp2271 * _tmp673 + _tmp2272 * _tmp674;
    _rhs(23, 0) = _tmp2276 * _tmp703 + _tmp2277 * _tmp816 + _tmp2278 * _tmp704;
    _rhs(24, 0) = _tmp2282 * _tmp733 + _tmp2283 * _tmp734 + _tmp2284 * _tmp819;
    _rhs(25, 0) = _tmp2288 * _tmp764 + _tmp2289 * _tmp822 + _tmp2290 * _tmp763;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1111;
    jacobian_value_ptr[1] = _tmp1066;
    jacobian_value_ptr[2] = _tmp981;
    jacobian_value_ptr[3] = _tmp1239;
    jacobian_value_ptr[4] = _tmp1225;
    jacobian_value_ptr[5] = _tmp1255;
    jacobian_value_ptr[6] = _tmp1321;
    jacobian_value_ptr[7] = _tmp1339;
    jacobian_value_ptr[8] = _tmp1318;
    jacobian_value_ptr[9] = _tmp912;
    jacobian_value_ptr[10] = _tmp1015;
    jacobian_value_ptr[11] = _tmp1170;
    jacobian_value_ptr[12] = _tmp1310;
    jacobian_value_ptr[13] = _tmp1325;
    jacobian_value_ptr[14] = _tmp1150;
    jacobian_value_ptr[15] = _tmp1335;
    jacobian_value_ptr[16] = _tmp1243;
    jacobian_value_ptr[17] = _tmp942;
    jacobian_value_ptr[18] = _tmp996;
    jacobian_value_ptr[19] = _tmp1277;
    jacobian_value_ptr[20] = _tmp1282;
    jacobian_value_ptr[21] = _tmp1204;
    jacobian_value_ptr[22] = _tmp1230;
    jacobian_value_ptr[23] = _tmp1109;
    jacobian_value_ptr[24] = _tmp927;
    jacobian_value_ptr[25] = _tmp1019;
    jacobian_value_ptr[26] = _tmp1234;
    jacobian_value_ptr[27] = _tmp1167;
    jacobian_value_ptr[28] = _tmp1269;
    jacobian_value_ptr[29] = _tmp1331;
    jacobian_value_ptr[30] = _tmp1095;
    jacobian_value_ptr[31] = _tmp1273;
    jacobian_value_ptr[32] = _tmp855;
    jacobian_value_ptr[33] = _tmp1049;
    jacobian_value_ptr[34] = _tmp1344;
    jacobian_value_ptr[35] = _tmp1295;
    jacobian_value_ptr[36] = _tmp1219;
    jacobian_value_ptr[37] = _tmp1222;
    jacobian_value_ptr[38] = _tmp1186;
    jacobian_value_ptr[39] = _tmp1328;
    jacobian_value_ptr[40] = _tmp1032;
    jacobian_value_ptr[41] = _tmp1190;
    jacobian_value_ptr[42] = _tmp1134;
    jacobian_value_ptr[43] = _tmp1130;
    jacobian_value_ptr[44] = _tmp1045;
    jacobian_value_ptr[45] = _tmp1252;
    jacobian_value_ptr[46] = _tmp1116;
    jacobian_value_ptr[47] = _tmp1010;
    jacobian_value_ptr[48] = _tmp1315;
    jacobian_value_ptr[49] = _tmp1080;
    jacobian_value_ptr[50] = _tmp1249;
    jacobian_value_ptr[51] = _tmp1062;
    jacobian_value_ptr[52] = _tmp1474;
    jacobian_value_ptr[53] = _tmp1530;
    jacobian_value_ptr[54] = _tmp1497;
    jacobian_value_ptr[55] = _tmp1465;
    jacobian_value_ptr[56] = _tmp1540;
    jacobian_value_ptr[57] = _tmp1552;
    jacobian_value_ptr[58] = _tmp1412;
    jacobian_value_ptr[59] = _tmp1369;
    jacobian_value_ptr[60] = _tmp1560;
    jacobian_value_ptr[61] = _tmp1538;
    jacobian_value_ptr[62] = _tmp1438;
    jacobian_value_ptr[63] = _tmp1483;
    jacobian_value_ptr[64] = _tmp1537;
    jacobian_value_ptr[65] = _tmp1528;
    jacobian_value_ptr[66] = _tmp1498;
    jacobian_value_ptr[67] = _tmp1481;
    jacobian_value_ptr[68] = _tmp1466;
    jacobian_value_ptr[69] = _tmp1390;
    jacobian_value_ptr[70] = _tmp1555;
    jacobian_value_ptr[71] = _tmp1523;
    jacobian_value_ptr[72] = _tmp1449;
    jacobian_value_ptr[73] = _tmp1548;
    jacobian_value_ptr[74] = _tmp1374;
    jacobian_value_ptr[75] = _tmp1549;
    jacobian_value_ptr[76] = _tmp1508;
    jacobian_value_ptr[77] = _tmp1419;
    jacobian_value_ptr[78] = _tmp1403;
    jacobian_value_ptr[79] = _tmp1531;
    jacobian_value_ptr[80] = _tmp1559;
    jacobian_value_ptr[81] = _tmp1430;
    jacobian_value_ptr[82] = _tmp1496;
    jacobian_value_ptr[83] = _tmp1507;
    jacobian_value_ptr[84] = _tmp1558;
    jacobian_value_ptr[85] = _tmp1424;
    jacobian_value_ptr[86] = _tmp1505;
    jacobian_value_ptr[87] = _tmp1382;
    jacobian_value_ptr[88] = _tmp1557;
    jacobian_value_ptr[89] = _tmp1490;
    jacobian_value_ptr[90] = _tmp1550;
    jacobian_value_ptr[91] = _tmp1536;
    jacobian_value_ptr[92] = _tmp1509;
    jacobian_value_ptr[93] = _tmp1396;
    jacobian_value_ptr[94] = _tmp1437;
    jacobian_value_ptr[95] = _tmp1554;
    jacobian_value_ptr[96] = _tmp1517;
    jacobian_value_ptr[97] = _tmp1544;
    jacobian_value_ptr[98] = _tmp1409;
    jacobian_value_ptr[99] = _tmp1482;
    jacobian_value_ptr[100] = _tmp1444;
    jacobian_value_ptr[101] = _tmp1467;
    jacobian_value_ptr[102] = _tmp1504;
    jacobian_value_ptr[103] = _tmp1547;
    jacobian_value_ptr[104] = _tmp1605;
    jacobian_value_ptr[105] = _tmp1572;
    jacobian_value_ptr[106] = _tmp1697;
    jacobian_value_ptr[107] = _tmp1677;
    jacobian_value_ptr[108] = _tmp1708;
    jacobian_value_ptr[109] = _tmp1662;
    jacobian_value_ptr[110] = _tmp1645;
    jacobian_value_ptr[111] = _tmp1671;
    jacobian_value_ptr[112] = _tmp1655;
    jacobian_value_ptr[113] = _tmp1704;
    jacobian_value_ptr[114] = _tmp1672;
    jacobian_value_ptr[115] = _tmp1654;
    jacobian_value_ptr[116] = _tmp1710;
    jacobian_value_ptr[117] = _tmp1661;
    jacobian_value_ptr[118] = _tmp1682;
    jacobian_value_ptr[119] = _tmp1593;
    jacobian_value_ptr[120] = _tmp1688;
    jacobian_value_ptr[121] = _tmp1614;
    jacobian_value_ptr[122] = _tmp1686;
    jacobian_value_ptr[123] = _tmp1694;
    jacobian_value_ptr[124] = _tmp1670;
    jacobian_value_ptr[125] = _tmp1623;
    jacobian_value_ptr[126] = _tmp1657;
    jacobian_value_ptr[127] = _tmp1618;
    jacobian_value_ptr[128] = _tmp1631;
    jacobian_value_ptr[129] = _tmp1702;
    jacobian_value_ptr[130] = _tmp1597;
    jacobian_value_ptr[131] = _tmp1652;
    jacobian_value_ptr[132] = _tmp1669;
    jacobian_value_ptr[133] = _tmp1695;
    jacobian_value_ptr[134] = _tmp1609;
    jacobian_value_ptr[135] = _tmp1610;
    jacobian_value_ptr[136] = _tmp1693;
    jacobian_value_ptr[137] = _tmp1703;
    jacobian_value_ptr[138] = _tmp1711;
    jacobian_value_ptr[139] = _tmp1676;
    jacobian_value_ptr[140] = _tmp1705;
    jacobian_value_ptr[141] = _tmp1650;
    jacobian_value_ptr[142] = _tmp1689;
    jacobian_value_ptr[143] = _tmp1681;
    jacobian_value_ptr[144] = _tmp1584;
    jacobian_value_ptr[145] = _tmp1646;
    jacobian_value_ptr[146] = _tmp1701;
    jacobian_value_ptr[147] = _tmp1706;
    jacobian_value_ptr[148] = _tmp1707;
    jacobian_value_ptr[149] = _tmp1580;
    jacobian_value_ptr[150] = _tmp1687;
    jacobian_value_ptr[151] = _tmp1627;
    jacobian_value_ptr[152] = _tmp1664;
    jacobian_value_ptr[153] = _tmp1588;
    jacobian_value_ptr[154] = _tmp1709;
    jacobian_value_ptr[155] = _tmp1601;
    jacobian_value_ptr[156] = _tmp1914;
    jacobian_value_ptr[157] = _tmp1712;
    jacobian_value_ptr[158] = _tmp1753;
    jacobian_value_ptr[159] = _tmp1801;
    jacobian_value_ptr[160] = _tmp1915;
    jacobian_value_ptr[161] = _tmp1895;
    jacobian_value_ptr[162] = _tmp1896;
    jacobian_value_ptr[163] = _tmp1800;
    jacobian_value_ptr[164] = _tmp1790;
    jacobian_value_ptr[165] = _tmp1789;
    jacobian_value_ptr[166] = _tmp1788;
    jacobian_value_ptr[167] = _tmp1835;
    jacobian_value_ptr[168] = _tmp1826;
    jacobian_value_ptr[169] = _tmp1863;
    jacobian_value_ptr[170] = _tmp1808;
    jacobian_value_ptr[171] = _tmp1906;
    jacobian_value_ptr[172] = _tmp1873;
    jacobian_value_ptr[173] = _tmp1785;
    jacobian_value_ptr[174] = _tmp1834;
    jacobian_value_ptr[175] = _tmp1911;
    jacobian_value_ptr[176] = _tmp1769;
    jacobian_value_ptr[177] = _tmp1894;
    jacobian_value_ptr[178] = _tmp1761;
    jacobian_value_ptr[179] = _tmp1891;
    jacobian_value_ptr[180] = _tmp1843;
    jacobian_value_ptr[181] = _tmp1913;
    jacobian_value_ptr[182] = _tmp1792;
    jacobian_value_ptr[183] = _tmp1733;
    jacobian_value_ptr[184] = _tmp1810;
    jacobian_value_ptr[185] = _tmp1744;
    jacobian_value_ptr[186] = _tmp1910;
    jacobian_value_ptr[187] = _tmp1851;
    jacobian_value_ptr[188] = _tmp1892;
    jacobian_value_ptr[189] = _tmp1872;
    jacobian_value_ptr[190] = _tmp1777;
    jacobian_value_ptr[191] = _tmp1908;
    jacobian_value_ptr[192] = _tmp1897;
    jacobian_value_ptr[193] = _tmp1818;
    jacobian_value_ptr[194] = _tmp1722;
    jacobian_value_ptr[195] = _tmp1724;
    jacobian_value_ptr[196] = _tmp1861;
    jacobian_value_ptr[197] = _tmp1916;
    jacobian_value_ptr[198] = _tmp1904;
    jacobian_value_ptr[199] = _tmp1907;
    jacobian_value_ptr[200] = _tmp1912;
    jacobian_value_ptr[201] = _tmp1881;
    jacobian_value_ptr[202] = _tmp1909;
    jacobian_value_ptr[203] = _tmp1890;
    jacobian_value_ptr[204] = _tmp1917;
    jacobian_value_ptr[205] = _tmp1752;
    jacobian_value_ptr[206] = _tmp1905;
    jacobian_value_ptr[207] = _tmp1799;
    jacobian_value_ptr[208] = _tmp1968;
    jacobian_value_ptr[209] = _tmp2028;
    jacobian_value_ptr[210] = _tmp2017;
    jacobian_value_ptr[211] = _tmp1998;
    jacobian_value_ptr[212] = _tmp2036;
    jacobian_value_ptr[213] = _tmp1963;
    jacobian_value_ptr[214] = _tmp2029;
    jacobian_value_ptr[215] = _tmp1969;
    jacobian_value_ptr[216] = _tmp1999;
    jacobian_value_ptr[217] = _tmp2023;
    jacobian_value_ptr[218] = _tmp1988;
    jacobian_value_ptr[219] = _tmp1962;
    jacobian_value_ptr[220] = _tmp2015;
    jacobian_value_ptr[221] = _tmp1940;
    jacobian_value_ptr[222] = _tmp1927;
    jacobian_value_ptr[223] = _tmp1928;
    jacobian_value_ptr[224] = _tmp1960;
    jacobian_value_ptr[225] = _tmp2013;
    jacobian_value_ptr[226] = _tmp1987;
    jacobian_value_ptr[227] = _tmp1997;
    jacobian_value_ptr[228] = _tmp2037;
    jacobian_value_ptr[229] = _tmp1978;
    jacobian_value_ptr[230] = _tmp2016;
    jacobian_value_ptr[231] = _tmp1982;
    jacobian_value_ptr[232] = _tmp2033;
    jacobian_value_ptr[233] = _tmp2034;
    jacobian_value_ptr[234] = _tmp1921;
    jacobian_value_ptr[235] = _tmp2025;
    jacobian_value_ptr[236] = _tmp2007;
    jacobian_value_ptr[237] = _tmp1954;
    jacobian_value_ptr[238] = _tmp1992;
    jacobian_value_ptr[239] = _tmp2026;
    jacobian_value_ptr[240] = _tmp2038;
    jacobian_value_ptr[241] = _tmp1996;
    jacobian_value_ptr[242] = _tmp2024;
    jacobian_value_ptr[243] = _tmp1936;
    jacobian_value_ptr[244] = _tmp2022;
    jacobian_value_ptr[245] = _tmp2035;
    jacobian_value_ptr[246] = _tmp1983;
    jacobian_value_ptr[247] = _tmp1967;
    jacobian_value_ptr[248] = _tmp1932;
    jacobian_value_ptr[249] = _tmp2002;
    jacobian_value_ptr[250] = _tmp1945;
    jacobian_value_ptr[251] = _tmp2000;
    jacobian_value_ptr[252] = _tmp2027;
    jacobian_value_ptr[253] = _tmp2011;
    jacobian_value_ptr[254] = _tmp1950;
    jacobian_value_ptr[255] = _tmp1956;
    jacobian_value_ptr[256] = _tmp2014;
    jacobian_value_ptr[257] = _tmp2006;
    jacobian_value_ptr[258] = _tmp1974;
    jacobian_value_ptr[259] = _tmp2001;
    jacobian_value_ptr[260] = _tmp2073;
    jacobian_value_ptr[261] = _tmp2078;
    jacobian_value_ptr[262] = _tmp2153;
    jacobian_value_ptr[263] = _tmp2079;
    jacobian_value_ptr[264] = _tmp2157;
    jacobian_value_ptr[265] = _tmp2112;
    jacobian_value_ptr[266] = _tmp2142;
    jacobian_value_ptr[267] = _tmp2086;
    jacobian_value_ptr[268] = _tmp2111;
    jacobian_value_ptr[269] = _tmp2151;
    jacobian_value_ptr[270] = _tmp2099;
    jacobian_value_ptr[271] = _tmp2100;
    jacobian_value_ptr[272] = _tmp2068;
    jacobian_value_ptr[273] = _tmp2129;
    jacobian_value_ptr[274] = _tmp2144;
    jacobian_value_ptr[275] = _tmp2140;
    jacobian_value_ptr[276] = _tmp2116;
    jacobian_value_ptr[277] = _tmp2117;
    jacobian_value_ptr[278] = _tmp2124;
    jacobian_value_ptr[279] = _tmp2072;
    jacobian_value_ptr[280] = _tmp2150;
    jacobian_value_ptr[281] = _tmp2133;
    jacobian_value_ptr[282] = _tmp2155;
    jacobian_value_ptr[283] = _tmp2104;
    jacobian_value_ptr[284] = _tmp2092;
    jacobian_value_ptr[285] = _tmp2084;
    jacobian_value_ptr[286] = _tmp2135;
    jacobian_value_ptr[287] = _tmp2121;
    jacobian_value_ptr[288] = _tmp2063;
    jacobian_value_ptr[289] = _tmp2098;
    jacobian_value_ptr[290] = _tmp2091;
    jacobian_value_ptr[291] = _tmp2110;
    jacobian_value_ptr[292] = _tmp2128;
    jacobian_value_ptr[293] = _tmp2143;
    jacobian_value_ptr[294] = _tmp2046;
    jacobian_value_ptr[295] = _tmp2087;
    jacobian_value_ptr[296] = _tmp2122;
    jacobian_value_ptr[297] = _tmp2042;
    jacobian_value_ptr[298] = _tmp2054;
    jacobian_value_ptr[299] = _tmp2154;
    jacobian_value_ptr[300] = _tmp2059;
    jacobian_value_ptr[301] = _tmp2141;
    jacobian_value_ptr[302] = _tmp2152;
    jacobian_value_ptr[303] = _tmp2149;
    jacobian_value_ptr[304] = _tmp2134;
    jacobian_value_ptr[305] = _tmp2077;
    jacobian_value_ptr[306] = _tmp2156;
    jacobian_value_ptr[307] = _tmp2097;
    jacobian_value_ptr[308] = _tmp2050;
    jacobian_value_ptr[309] = _tmp2064;
    jacobian_value_ptr[310] = _tmp2136;
    jacobian_value_ptr[311] = _tmp2109;
    jacobian_value_ptr[312] = _tmp2170;
    jacobian_value_ptr[313] = _tmp2171;
    jacobian_value_ptr[314] = _tmp767;
    jacobian_value_ptr[315] = _tmp2178;
    jacobian_value_ptr[316] = _tmp2176;
    jacobian_value_ptr[317] = _tmp770;
    jacobian_value_ptr[318] = _tmp2184;
    jacobian_value_ptr[319] = _tmp2183;
    jacobian_value_ptr[320] = _tmp773;
    jacobian_value_ptr[321] = _tmp2188;
    jacobian_value_ptr[322] = _tmp2189;
    jacobian_value_ptr[323] = _tmp776;
    jacobian_value_ptr[324] = _tmp2195;
    jacobian_value_ptr[325] = _tmp2196;
    jacobian_value_ptr[326] = _tmp779;
    jacobian_value_ptr[327] = _tmp2201;
    jacobian_value_ptr[328] = _tmp2202;
    jacobian_value_ptr[329] = _tmp782;
    jacobian_value_ptr[330] = _tmp2207;
    jacobian_value_ptr[331] = _tmp2209;
    jacobian_value_ptr[332] = _tmp785;
    jacobian_value_ptr[333] = _tmp2214;
    jacobian_value_ptr[334] = _tmp2216;
    jacobian_value_ptr[335] = _tmp788;
    jacobian_value_ptr[336] = _tmp2222;
    jacobian_value_ptr[337] = _tmp2221;
    jacobian_value_ptr[338] = _tmp791;
    jacobian_value_ptr[339] = _tmp2226;
    jacobian_value_ptr[340] = _tmp2228;
    jacobian_value_ptr[341] = _tmp794;
    jacobian_value_ptr[342] = _tmp2233;
    jacobian_value_ptr[343] = _tmp2232;
    jacobian_value_ptr[344] = _tmp797;
    jacobian_value_ptr[345] = _tmp2240;
    jacobian_value_ptr[346] = _tmp2238;
    jacobian_value_ptr[347] = _tmp800;
    jacobian_value_ptr[348] = _tmp2244;
    jacobian_value_ptr[349] = _tmp2246;
    jacobian_value_ptr[350] = _tmp803;
    jacobian_value_ptr[351] = _tmp2250;
    jacobian_value_ptr[352] = _tmp2251;
    jacobian_value_ptr[353] = _tmp806;
    jacobian_value_ptr[354] = _tmp2259;
    jacobian_value_ptr[355] = _tmp2256;
    jacobian_value_ptr[356] = _tmp809;
    jacobian_value_ptr[357] = _tmp2264;
    jacobian_value_ptr[358] = _tmp2266;
    jacobian_value_ptr[359] = _tmp812;
    jacobian_value_ptr[360] = _tmp2271;
    jacobian_value_ptr[361] = _tmp2272;
    jacobian_value_ptr[362] = _tmp815;
    jacobian_value_ptr[363] = _tmp2276;
    jacobian_value_ptr[364] = _tmp2278;
    jacobian_value_ptr[365] = _tmp818;
    jacobian_value_ptr[366] = _tmp2282;
    jacobian_value_ptr[367] = _tmp2283;
    jacobian_value_ptr[368] = _tmp821;
    jacobian_value_ptr[369] = _tmp2290;
    jacobian_value_ptr[370] = _tmp2288;
    jacobian_value_ptr[371] = _tmp824;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = std::pow(_tmp1010, Scalar(2)) + std::pow(_tmp1015, Scalar(2)) +
                           std::pow(_tmp1019, Scalar(2)) + std::pow(_tmp1032, Scalar(2)) +
                           std::pow(_tmp1045, Scalar(2)) + std::pow(_tmp1049, Scalar(2)) +
                           std::pow(_tmp1062, Scalar(2)) + std::pow(_tmp1066, Scalar(2)) +
                           std::pow(_tmp1080, Scalar(2)) + std::pow(_tmp1095, Scalar(2)) +
                           std::pow(_tmp1109, Scalar(2)) + std::pow(_tmp1111, Scalar(2)) +
                           std::pow(_tmp1116, Scalar(2)) + std::pow(_tmp1130, Scalar(2)) +
                           std::pow(_tmp1134, Scalar(2)) + std::pow(_tmp1150, Scalar(2)) +
                           std::pow(_tmp1167, Scalar(2)) + std::pow(_tmp1170, Scalar(2)) +
                           std::pow(_tmp1186, Scalar(2)) + std::pow(_tmp1190, Scalar(2)) +
                           std::pow(_tmp1204, Scalar(2)) + std::pow(_tmp1219, Scalar(2)) +
                           std::pow(_tmp1222, Scalar(2)) + std::pow(_tmp1225, Scalar(2)) +
                           std::pow(_tmp1230, Scalar(2)) + std::pow(_tmp1234, Scalar(2)) +
                           std::pow(_tmp1239, Scalar(2)) + std::pow(_tmp1243, Scalar(2)) +
                           std::pow(_tmp1249, Scalar(2)) + std::pow(_tmp1252, Scalar(2)) +
                           std::pow(_tmp1255, Scalar(2)) + std::pow(_tmp1269, Scalar(2)) +
                           std::pow(_tmp1273, Scalar(2)) + std::pow(_tmp1277, Scalar(2)) +
                           std::pow(_tmp1282, Scalar(2)) + std::pow(_tmp1295, Scalar(2)) +
                           std::pow(_tmp1310, Scalar(2)) + std::pow(_tmp1315, Scalar(2)) +
                           std::pow(_tmp1318, Scalar(2)) + std::pow(_tmp1321, Scalar(2)) +
                           std::pow(_tmp1325, Scalar(2)) + std::pow(_tmp1328, Scalar(2)) +
                           std::pow(_tmp1331, Scalar(2)) + std::pow(_tmp1335, Scalar(2)) +
                           std::pow(_tmp1339, Scalar(2)) + std::pow(_tmp1344, Scalar(2)) +
                           std::pow(_tmp855, Scalar(2)) + std::pow(_tmp912, Scalar(2)) +
                           std::pow(_tmp927, Scalar(2)) + std::pow(_tmp942, Scalar(2)) +
                           std::pow(_tmp981, Scalar(2)) + std::pow(_tmp996, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1010 * _tmp1482 + _tmp1015 * _tmp1438 + _tmp1019 * _tmp1419 + _tmp1032 * _tmp1509 +
        _tmp1045 * _tmp1517 + _tmp1049 * _tmp1424 + _tmp1062 * _tmp1547 + _tmp1066 * _tmp1530 +
        _tmp1080 * _tmp1467 + _tmp1095 * _tmp1496 + _tmp1109 * _tmp1549 + _tmp1111 * _tmp1474 +
        _tmp1116 * _tmp1409 + _tmp1130 * _tmp1554 + _tmp1134 * _tmp1437 + _tmp1150 * _tmp1498 +
        _tmp1167 * _tmp1531 + _tmp1170 * _tmp1483 + _tmp1186 * _tmp1550 + _tmp1190 * _tmp1396 +
        _tmp1204 * _tmp1548 + _tmp1219 * _tmp1557 + _tmp1222 * _tmp1490 + _tmp1225 * _tmp1540 +
        _tmp1230 * _tmp1374 + _tmp1234 * _tmp1403 + _tmp1239 * _tmp1465 + _tmp1243 * _tmp1466 +
        _tmp1249 * _tmp1504 + _tmp1252 * _tmp1544 + _tmp1255 * _tmp1552 + _tmp1269 * _tmp1559 +
        _tmp1273 * _tmp1507 + _tmp1277 * _tmp1523 + _tmp1282 * _tmp1449 + _tmp1295 * _tmp1382 +
        _tmp1310 * _tmp1537 + _tmp1315 * _tmp1444 + _tmp1318 * _tmp1560 + _tmp1321 * _tmp1412 +
        _tmp1325 * _tmp1528 + _tmp1328 * _tmp1536 + _tmp1331 * _tmp1430 + _tmp1335 * _tmp1481 +
        _tmp1339 * _tmp1369 + _tmp1344 * _tmp1505 + _tmp1390 * _tmp942 + _tmp1497 * _tmp981 +
        _tmp1508 * _tmp927 + _tmp1538 * _tmp912 + _tmp1555 * _tmp996 + _tmp1558 * _tmp855;
    hessian_value_ptr[2] =
        _tmp1010 * _tmp1627 + _tmp1015 * _tmp1672 + _tmp1019 * _tmp1702 + _tmp1032 * _tmp1584 +
        _tmp1045 * _tmp1707 + _tmp1049 * _tmp1703 + _tmp1062 * _tmp1601 + _tmp1066 * _tmp1572 +
        _tmp1080 * _tmp1588 + _tmp1095 * _tmp1609 + _tmp1109 * _tmp1618 + _tmp1111 * _tmp1605 +
        _tmp1116 * _tmp1687 + _tmp1130 * _tmp1706 + _tmp1134 * _tmp1701 + _tmp1150 * _tmp1682 +
        _tmp1167 * _tmp1652 + _tmp1170 * _tmp1654 + _tmp1186 * _tmp1689 + _tmp1190 * _tmp1646 +
        _tmp1204 * _tmp1623 + _tmp1219 * _tmp1705 + _tmp1222 * _tmp1650 + _tmp1225 * _tmp1708 +
        _tmp1230 * _tmp1657 + _tmp1234 * _tmp1597 + _tmp1239 * _tmp1677 + _tmp1243 * _tmp1688 +
        _tmp1249 * _tmp1709 + _tmp1252 * _tmp1580 + _tmp1255 * _tmp1662 + _tmp1269 * _tmp1669 +
        _tmp1273 * _tmp1610 + _tmp1277 * _tmp1694 + _tmp1282 * _tmp1670 + _tmp1295 * _tmp1676 +
        _tmp1310 * _tmp1710 + _tmp1315 * _tmp1664 + _tmp1318 * _tmp1655 + _tmp1321 * _tmp1645 +
        _tmp1325 * _tmp1661 + _tmp1328 * _tmp1681 + _tmp1331 * _tmp1695 + _tmp1335 * _tmp1593 +
        _tmp1339 * _tmp1671 + _tmp1344 * _tmp1711 + _tmp1614 * _tmp942 + _tmp1631 * _tmp927 +
        _tmp1686 * _tmp996 + _tmp1693 * _tmp855 + _tmp1697 * _tmp981 + _tmp1704 * _tmp912;
    hessian_value_ptr[3] =
        _tmp1010 * _tmp1890 + _tmp1015 * _tmp1788 + _tmp1019 * _tmp1913 + _tmp1032 * _tmp1861 +
        _tmp1045 * _tmp1912 + _tmp1049 * _tmp1872 + _tmp1062 * _tmp1799 + _tmp1066 * _tmp1712 +
        _tmp1080 * _tmp1752 + _tmp1095 * _tmp1910 + _tmp1109 * _tmp1891 + _tmp1111 * _tmp1914 +
        _tmp1116 * _tmp1909 + _tmp1130 * _tmp1907 + _tmp1134 * _tmp1904 + _tmp1150 * _tmp1808 +
        _tmp1167 * _tmp1733 + _tmp1170 * _tmp1835 + _tmp1186 * _tmp1722 + _tmp1190 * _tmp1916 +
        _tmp1204 * _tmp1894 + _tmp1219 * _tmp1897 + _tmp1222 * _tmp1818 + _tmp1225 * _tmp1915 +
        _tmp1230 * _tmp1761 + _tmp1234 * _tmp1792 + _tmp1239 * _tmp1801 + _tmp1243 * _tmp1873 +
        _tmp1249 * _tmp1905 + _tmp1252 * _tmp1881 + _tmp1255 * _tmp1895 + _tmp1269 * _tmp1810 +
        _tmp1273 * _tmp1851 + _tmp1277 * _tmp1911 + _tmp1282 * _tmp1769 + _tmp1295 * _tmp1908 +
        _tmp1310 * _tmp1826 + _tmp1315 * _tmp1917 + _tmp1318 * _tmp1790 + _tmp1321 * _tmp1896 +
        _tmp1325 * _tmp1863 + _tmp1328 * _tmp1724 + _tmp1331 * _tmp1744 + _tmp1335 * _tmp1906 +
        _tmp1339 * _tmp1800 + _tmp1344 * _tmp1777 + _tmp1753 * _tmp981 + _tmp1785 * _tmp942 +
        _tmp1789 * _tmp912 + _tmp1834 * _tmp996 + _tmp1843 * _tmp927 + _tmp1892 * _tmp855;
    hessian_value_ptr[4] =
        _tmp1010 * _tmp1956 + _tmp1015 * _tmp1988 + _tmp1019 * _tmp2034 + _tmp1032 * _tmp1932 +
        _tmp1045 * _tmp2027 + _tmp1049 * _tmp1996 + _tmp1062 * _tmp2001 + _tmp1066 * _tmp2028 +
        _tmp1080 * _tmp2006 + _tmp1095 * _tmp1992 + _tmp1109 * _tmp1982 + _tmp1111 * _tmp1968 +
        _tmp1116 * _tmp1950 + _tmp1130 * _tmp2000 + _tmp1134 * _tmp1945 + _tmp1150 * _tmp1927 +
        _tmp1167 * _tmp2025 + _tmp1170 * _tmp1962 + _tmp1186 * _tmp1983 + _tmp1190 * _tmp2002 +
        _tmp1204 * _tmp1978 + _tmp1219 * _tmp2022 + _tmp1222 * _tmp2035 + _tmp1225 * _tmp2036 +
        _tmp1230 * _tmp2016 + _tmp1234 * _tmp1921 + _tmp1239 * _tmp1998 + _tmp1243 * _tmp1960 +
        _tmp1249 * _tmp1974 + _tmp1252 * _tmp2011 + _tmp1255 * _tmp1963 + _tmp1269 * _tmp2007 +
        _tmp1273 * _tmp2026 + _tmp1277 * _tmp1997 + _tmp1282 * _tmp2037 + _tmp1295 * _tmp1936 +
        _tmp1310 * _tmp2015 + _tmp1315 * _tmp2014 + _tmp1318 * _tmp1999 + _tmp1321 * _tmp2029 +
        _tmp1325 * _tmp1940 + _tmp1328 * _tmp1967 + _tmp1331 * _tmp1954 + _tmp1335 * _tmp1928 +
        _tmp1339 * _tmp1969 + _tmp1344 * _tmp2024 + _tmp1987 * _tmp996 + _tmp2013 * _tmp942 +
        _tmp2017 * _tmp981 + _tmp2023 * _tmp912 + _tmp2033 * _tmp927 + _tmp2038 * _tmp855;
    hessian_value_ptr[5] =
        _tmp1010 * _tmp2097 + _tmp1015 * _tmp2099 + _tmp1019 * _tmp2084 + _tmp1032 * _tmp2059 +
        _tmp1045 * _tmp2134 + _tmp1049 * _tmp2143 + _tmp1062 * _tmp2109 + _tmp1066 * _tmp2078 +
        _tmp1080 * _tmp2064 + _tmp1095 * _tmp2091 + _tmp1109 * _tmp2104 + _tmp1111 * _tmp2073 +
        _tmp1116 * _tmp2156 + _tmp1130 * _tmp2149 + _tmp1134 * _tmp2152 + _tmp1150 * _tmp2144 +
        _tmp1167 * _tmp2121 + _tmp1170 * _tmp2100 + _tmp1186 * _tmp2054 + _tmp1190 * _tmp2141 +
        _tmp1204 * _tmp2133 + _tmp1219 * _tmp2122 + _tmp1222 * _tmp2042 + _tmp1225 * _tmp2157 +
        _tmp1230 * _tmp2155 + _tmp1234 * _tmp2135 + _tmp1239 * _tmp2079 + _tmp1243 * _tmp2116 +
        _tmp1249 * _tmp2136 + _tmp1252 * _tmp2077 + _tmp1255 * _tmp2112 + _tmp1269 * _tmp2063 +
        _tmp1273 * _tmp2110 + _tmp1277 * _tmp2072 + _tmp1282 * _tmp2150 + _tmp1295 * _tmp2087 +
        _tmp1310 * _tmp2068 + _tmp1315 * _tmp2050 + _tmp1318 * _tmp2111 + _tmp1321 * _tmp2142 +
        _tmp1325 * _tmp2129 + _tmp1328 * _tmp2154 + _tmp1331 * _tmp2098 + _tmp1335 * _tmp2140 +
        _tmp1339 * _tmp2086 + _tmp1344 * _tmp2046 + _tmp2092 * _tmp927 + _tmp2117 * _tmp942 +
        _tmp2124 * _tmp996 + _tmp2128 * _tmp855 + _tmp2151 * _tmp912 + _tmp2153 * _tmp981;
    hessian_value_ptr[6] = _tmp1310 * _tmp2170 + _tmp1325 * _tmp2171;
    hessian_value_ptr[7] = _tmp1150 * _tmp2178 + _tmp1335 * _tmp2176;
    hessian_value_ptr[8] = _tmp1243 * _tmp2184 + _tmp2183 * _tmp942;
    hessian_value_ptr[9] = _tmp1277 * _tmp2189 + _tmp2188 * _tmp996;
    hessian_value_ptr[10] = _tmp1204 * _tmp2196 + _tmp1282 * _tmp2195;
    hessian_value_ptr[11] = _tmp1109 * _tmp2202 + _tmp1230 * _tmp2201;
    hessian_value_ptr[12] = _tmp1019 * _tmp2209 + _tmp2207 * _tmp927;
    hessian_value_ptr[13] = _tmp1167 * _tmp2216 + _tmp1234 * _tmp2214;
    hessian_value_ptr[14] = _tmp1269 * _tmp2222 + _tmp1331 * _tmp2221;
    hessian_value_ptr[15] = _tmp1095 * _tmp2226 + _tmp1273 * _tmp2228;
    hessian_value_ptr[16] = _tmp1049 * _tmp2232 + _tmp2233 * _tmp855;
    hessian_value_ptr[17] = _tmp1295 * _tmp2238 + _tmp1344 * _tmp2240;
    hessian_value_ptr[18] = _tmp1219 * _tmp2244 + _tmp1222 * _tmp2246;
    hessian_value_ptr[19] = _tmp1186 * _tmp2250 + _tmp1328 * _tmp2251;
    hessian_value_ptr[20] = _tmp1032 * _tmp2259 + _tmp1190 * _tmp2256;
    hessian_value_ptr[21] = _tmp1130 * _tmp2266 + _tmp1134 * _tmp2264;
    hessian_value_ptr[22] = _tmp1045 * _tmp2271 + _tmp1252 * _tmp2272;
    hessian_value_ptr[23] = _tmp1010 * _tmp2278 + _tmp1116 * _tmp2276;
    hessian_value_ptr[24] = _tmp1080 * _tmp2283 + _tmp1315 * _tmp2282;
    hessian_value_ptr[25] = _tmp1062 * _tmp2288 + _tmp1249 * _tmp2290;
    hessian_value_ptr[26] = std::pow(_tmp1369, Scalar(2)) + std::pow(_tmp1374, Scalar(2)) +
                            std::pow(_tmp1382, Scalar(2)) + std::pow(_tmp1390, Scalar(2)) +
                            std::pow(_tmp1396, Scalar(2)) + std::pow(_tmp1403, Scalar(2)) +
                            std::pow(_tmp1409, Scalar(2)) + std::pow(_tmp1412, Scalar(2)) +
                            std::pow(_tmp1419, Scalar(2)) + std::pow(_tmp1424, Scalar(2)) +
                            std::pow(_tmp1430, Scalar(2)) + std::pow(_tmp1437, Scalar(2)) +
                            std::pow(_tmp1438, Scalar(2)) + std::pow(_tmp1444, Scalar(2)) +
                            std::pow(_tmp1449, Scalar(2)) + std::pow(_tmp1465, Scalar(2)) +
                            std::pow(_tmp1466, Scalar(2)) + std::pow(_tmp1467, Scalar(2)) +
                            std::pow(_tmp1474, Scalar(2)) + std::pow(_tmp1481, Scalar(2)) +
                            std::pow(_tmp1482, Scalar(2)) + std::pow(_tmp1483, Scalar(2)) +
                            std::pow(_tmp1490, Scalar(2)) + std::pow(_tmp1496, Scalar(2)) +
                            std::pow(_tmp1497, Scalar(2)) + std::pow(_tmp1498, Scalar(2)) +
                            std::pow(_tmp1504, Scalar(2)) + std::pow(_tmp1505, Scalar(2)) +
                            std::pow(_tmp1507, Scalar(2)) + std::pow(_tmp1508, Scalar(2)) +
                            std::pow(_tmp1509, Scalar(2)) + std::pow(_tmp1517, Scalar(2)) +
                            std::pow(_tmp1523, Scalar(2)) + std::pow(_tmp1528, Scalar(2)) +
                            std::pow(_tmp1530, Scalar(2)) + std::pow(_tmp1531, Scalar(2)) +
                            std::pow(_tmp1536, Scalar(2)) + std::pow(_tmp1537, Scalar(2)) +
                            std::pow(_tmp1538, Scalar(2)) + std::pow(_tmp1540, Scalar(2)) +
                            std::pow(_tmp1544, Scalar(2)) + std::pow(_tmp1547, Scalar(2)) +
                            std::pow(_tmp1548, Scalar(2)) + std::pow(_tmp1549, Scalar(2)) +
                            std::pow(_tmp1550, Scalar(2)) + std::pow(_tmp1552, Scalar(2)) +
                            std::pow(_tmp1554, Scalar(2)) + std::pow(_tmp1555, Scalar(2)) +
                            std::pow(_tmp1557, Scalar(2)) + std::pow(_tmp1558, Scalar(2)) +
                            std::pow(_tmp1559, Scalar(2)) + std::pow(_tmp1560, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1369 * _tmp1671 + _tmp1374 * _tmp1657 + _tmp1382 * _tmp1676 + _tmp1390 * _tmp1614 +
        _tmp1396 * _tmp1646 + _tmp1403 * _tmp1597 + _tmp1409 * _tmp1687 + _tmp1412 * _tmp1645 +
        _tmp1419 * _tmp1702 + _tmp1424 * _tmp1703 + _tmp1430 * _tmp1695 + _tmp1437 * _tmp1701 +
        _tmp1438 * _tmp1672 + _tmp1444 * _tmp1664 + _tmp1449 * _tmp1670 + _tmp1465 * _tmp1677 +
        _tmp1466 * _tmp1688 + _tmp1467 * _tmp1588 + _tmp1474 * _tmp1605 + _tmp1481 * _tmp1593 +
        _tmp1482 * _tmp1627 + _tmp1483 * _tmp1654 + _tmp1490 * _tmp1650 + _tmp1496 * _tmp1609 +
        _tmp1497 * _tmp1697 + _tmp1498 * _tmp1682 + _tmp1504 * _tmp1709 + _tmp1505 * _tmp1711 +
        _tmp1507 * _tmp1610 + _tmp1508 * _tmp1631 + _tmp1509 * _tmp1584 + _tmp1517 * _tmp1707 +
        _tmp1523 * _tmp1694 + _tmp1528 * _tmp1661 + _tmp1530 * _tmp1572 + _tmp1531 * _tmp1652 +
        _tmp1536 * _tmp1681 + _tmp1537 * _tmp1710 + _tmp1538 * _tmp1704 + _tmp1540 * _tmp1708 +
        _tmp1544 * _tmp1580 + _tmp1547 * _tmp1601 + _tmp1548 * _tmp1623 + _tmp1549 * _tmp1618 +
        _tmp1550 * _tmp1689 + _tmp1552 * _tmp1662 + _tmp1554 * _tmp1706 + _tmp1555 * _tmp1686 +
        _tmp1557 * _tmp1705 + _tmp1558 * _tmp1693 + _tmp1559 * _tmp1669 + _tmp1560 * _tmp1655;
    hessian_value_ptr[28] =
        _tmp1369 * _tmp1800 + _tmp1374 * _tmp1761 + _tmp1382 * _tmp1908 + _tmp1390 * _tmp1785 +
        _tmp1396 * _tmp1916 + _tmp1403 * _tmp1792 + _tmp1409 * _tmp1909 + _tmp1412 * _tmp1896 +
        _tmp1419 * _tmp1913 + _tmp1424 * _tmp1872 + _tmp1430 * _tmp1744 + _tmp1437 * _tmp1904 +
        _tmp1438 * _tmp1788 + _tmp1444 * _tmp1917 + _tmp1449 * _tmp1769 + _tmp1465 * _tmp1801 +
        _tmp1466 * _tmp1873 + _tmp1467 * _tmp1752 + _tmp1474 * _tmp1914 + _tmp1481 * _tmp1906 +
        _tmp1482 * _tmp1890 + _tmp1483 * _tmp1835 + _tmp1490 * _tmp1818 + _tmp1496 * _tmp1910 +
        _tmp1497 * _tmp1753 + _tmp1498 * _tmp1808 + _tmp1504 * _tmp1905 + _tmp1505 * _tmp1777 +
        _tmp1507 * _tmp1851 + _tmp1508 * _tmp1843 + _tmp1509 * _tmp1861 + _tmp1517 * _tmp1912 +
        _tmp1523 * _tmp1911 + _tmp1528 * _tmp1863 + _tmp1530 * _tmp1712 + _tmp1531 * _tmp1733 +
        _tmp1536 * _tmp1724 + _tmp1537 * _tmp1826 + _tmp1538 * _tmp1789 + _tmp1540 * _tmp1915 +
        _tmp1544 * _tmp1881 + _tmp1547 * _tmp1799 + _tmp1548 * _tmp1894 + _tmp1549 * _tmp1891 +
        _tmp1550 * _tmp1722 + _tmp1552 * _tmp1895 + _tmp1554 * _tmp1907 + _tmp1555 * _tmp1834 +
        _tmp1557 * _tmp1897 + _tmp1558 * _tmp1892 + _tmp1559 * _tmp1810 + _tmp1560 * _tmp1790;
    hessian_value_ptr[29] =
        _tmp1369 * _tmp1969 + _tmp1374 * _tmp2016 + _tmp1382 * _tmp1936 + _tmp1390 * _tmp2013 +
        _tmp1396 * _tmp2002 + _tmp1403 * _tmp1921 + _tmp1409 * _tmp1950 + _tmp1412 * _tmp2029 +
        _tmp1419 * _tmp2034 + _tmp1424 * _tmp1996 + _tmp1430 * _tmp1954 + _tmp1437 * _tmp1945 +
        _tmp1438 * _tmp1988 + _tmp1444 * _tmp2014 + _tmp1449 * _tmp2037 + _tmp1465 * _tmp1998 +
        _tmp1466 * _tmp1960 + _tmp1467 * _tmp2006 + _tmp1474 * _tmp1968 + _tmp1481 * _tmp1928 +
        _tmp1482 * _tmp1956 + _tmp1483 * _tmp1962 + _tmp1490 * _tmp2035 + _tmp1496 * _tmp1992 +
        _tmp1497 * _tmp2017 + _tmp1498 * _tmp1927 + _tmp1504 * _tmp1974 + _tmp1505 * _tmp2024 +
        _tmp1507 * _tmp2026 + _tmp1508 * _tmp2033 + _tmp1509 * _tmp1932 + _tmp1517 * _tmp2027 +
        _tmp1523 * _tmp1997 + _tmp1528 * _tmp1940 + _tmp1530 * _tmp2028 + _tmp1531 * _tmp2025 +
        _tmp1536 * _tmp1967 + _tmp1537 * _tmp2015 + _tmp1538 * _tmp2023 + _tmp1540 * _tmp2036 +
        _tmp1544 * _tmp2011 + _tmp1547 * _tmp2001 + _tmp1548 * _tmp1978 + _tmp1549 * _tmp1982 +
        _tmp1550 * _tmp1983 + _tmp1552 * _tmp1963 + _tmp1554 * _tmp2000 + _tmp1555 * _tmp1987 +
        _tmp1557 * _tmp2022 + _tmp1558 * _tmp2038 + _tmp1559 * _tmp2007 + _tmp1560 * _tmp1999;
    hessian_value_ptr[30] =
        _tmp1369 * _tmp2086 + _tmp1374 * _tmp2155 + _tmp1382 * _tmp2087 + _tmp1390 * _tmp2117 +
        _tmp1396 * _tmp2141 + _tmp1403 * _tmp2135 + _tmp1409 * _tmp2156 + _tmp1412 * _tmp2142 +
        _tmp1419 * _tmp2084 + _tmp1424 * _tmp2143 + _tmp1430 * _tmp2098 + _tmp1437 * _tmp2152 +
        _tmp1438 * _tmp2099 + _tmp1444 * _tmp2050 + _tmp1449 * _tmp2150 + _tmp1465 * _tmp2079 +
        _tmp1466 * _tmp2116 + _tmp1467 * _tmp2064 + _tmp1474 * _tmp2073 + _tmp1481 * _tmp2140 +
        _tmp1482 * _tmp2097 + _tmp1483 * _tmp2100 + _tmp1490 * _tmp2042 + _tmp1496 * _tmp2091 +
        _tmp1497 * _tmp2153 + _tmp1498 * _tmp2144 + _tmp1504 * _tmp2136 + _tmp1505 * _tmp2046 +
        _tmp1507 * _tmp2110 + _tmp1508 * _tmp2092 + _tmp1509 * _tmp2059 + _tmp1517 * _tmp2134 +
        _tmp1523 * _tmp2072 + _tmp1528 * _tmp2129 + _tmp1530 * _tmp2078 + _tmp1531 * _tmp2121 +
        _tmp1536 * _tmp2154 + _tmp1537 * _tmp2068 + _tmp1538 * _tmp2151 + _tmp1540 * _tmp2157 +
        _tmp1544 * _tmp2077 + _tmp1547 * _tmp2109 + _tmp1548 * _tmp2133 + _tmp1549 * _tmp2104 +
        _tmp1550 * _tmp2054 + _tmp1552 * _tmp2112 + _tmp1554 * _tmp2149 + _tmp1555 * _tmp2124 +
        _tmp1557 * _tmp2122 + _tmp1558 * _tmp2128 + _tmp1559 * _tmp2063 + _tmp1560 * _tmp2111;
    hessian_value_ptr[31] = _tmp1528 * _tmp2171 + _tmp1537 * _tmp2170;
    hessian_value_ptr[32] = _tmp1481 * _tmp2176 + _tmp1498 * _tmp2178;
    hessian_value_ptr[33] = _tmp1390 * _tmp2183 + _tmp1466 * _tmp2184;
    hessian_value_ptr[34] = _tmp1523 * _tmp2189 + _tmp1555 * _tmp2188;
    hessian_value_ptr[35] = _tmp1449 * _tmp2195 + _tmp1548 * _tmp2196;
    hessian_value_ptr[36] = _tmp1374 * _tmp2201 + _tmp1549 * _tmp2202;
    hessian_value_ptr[37] = _tmp1419 * _tmp2209 + _tmp1508 * _tmp2207;
    hessian_value_ptr[38] = _tmp1403 * _tmp2214 + _tmp1531 * _tmp2216;
    hessian_value_ptr[39] = _tmp1430 * _tmp2221 + _tmp1559 * _tmp2222;
    hessian_value_ptr[40] = _tmp1496 * _tmp2226 + _tmp1507 * _tmp2228;
    hessian_value_ptr[41] = _tmp1424 * _tmp2232 + _tmp1558 * _tmp2233;
    hessian_value_ptr[42] = _tmp1382 * _tmp2238 + _tmp1505 * _tmp2240;
    hessian_value_ptr[43] = _tmp1490 * _tmp2246 + _tmp1557 * _tmp2244;
    hessian_value_ptr[44] = _tmp1536 * _tmp2251 + _tmp1550 * _tmp2250;
    hessian_value_ptr[45] = _tmp1396 * _tmp2256 + _tmp1509 * _tmp2259;
    hessian_value_ptr[46] = _tmp1437 * _tmp2264 + _tmp1554 * _tmp2266;
    hessian_value_ptr[47] = _tmp1517 * _tmp2271 + _tmp1544 * _tmp2272;
    hessian_value_ptr[48] = _tmp1409 * _tmp2276 + _tmp1482 * _tmp2278;
    hessian_value_ptr[49] = _tmp1444 * _tmp2282 + _tmp1467 * _tmp2283;
    hessian_value_ptr[50] = _tmp1504 * _tmp2290 + _tmp1547 * _tmp2288;
    hessian_value_ptr[51] = std::pow(_tmp1572, Scalar(2)) + std::pow(_tmp1580, Scalar(2)) +
                            std::pow(_tmp1584, Scalar(2)) + std::pow(_tmp1588, Scalar(2)) +
                            std::pow(_tmp1593, Scalar(2)) + std::pow(_tmp1597, Scalar(2)) +
                            std::pow(_tmp1601, Scalar(2)) + std::pow(_tmp1605, Scalar(2)) +
                            std::pow(_tmp1609, Scalar(2)) + std::pow(_tmp1610, Scalar(2)) +
                            std::pow(_tmp1614, Scalar(2)) + std::pow(_tmp1618, Scalar(2)) +
                            std::pow(_tmp1623, Scalar(2)) + std::pow(_tmp1627, Scalar(2)) +
                            std::pow(_tmp1631, Scalar(2)) + std::pow(_tmp1645, Scalar(2)) +
                            std::pow(_tmp1646, Scalar(2)) + std::pow(_tmp1650, Scalar(2)) +
                            std::pow(_tmp1652, Scalar(2)) + std::pow(_tmp1654, Scalar(2)) +
                            std::pow(_tmp1655, Scalar(2)) + std::pow(_tmp1657, Scalar(2)) +
                            std::pow(_tmp1661, Scalar(2)) + std::pow(_tmp1662, Scalar(2)) +
                            std::pow(_tmp1664, Scalar(2)) + std::pow(_tmp1669, Scalar(2)) +
                            std::pow(_tmp1670, Scalar(2)) + std::pow(_tmp1671, Scalar(2)) +
                            std::pow(_tmp1672, Scalar(2)) + std::pow(_tmp1676, Scalar(2)) +
                            std::pow(_tmp1677, Scalar(2)) + std::pow(_tmp1681, Scalar(2)) +
                            std::pow(_tmp1682, Scalar(2)) + std::pow(_tmp1686, Scalar(2)) +
                            std::pow(_tmp1687, Scalar(2)) + std::pow(_tmp1688, Scalar(2)) +
                            std::pow(_tmp1689, Scalar(2)) + std::pow(_tmp1693, Scalar(2)) +
                            std::pow(_tmp1694, Scalar(2)) + std::pow(_tmp1695, Scalar(2)) +
                            std::pow(_tmp1697, Scalar(2)) + std::pow(_tmp1701, Scalar(2)) +
                            std::pow(_tmp1702, Scalar(2)) + std::pow(_tmp1703, Scalar(2)) +
                            std::pow(_tmp1704, Scalar(2)) + std::pow(_tmp1705, Scalar(2)) +
                            std::pow(_tmp1706, Scalar(2)) + std::pow(_tmp1707, Scalar(2)) +
                            std::pow(_tmp1708, Scalar(2)) + std::pow(_tmp1709, Scalar(2)) +
                            std::pow(_tmp1710, Scalar(2)) + std::pow(_tmp1711, Scalar(2));
    hessian_value_ptr[52] =
        _tmp1572 * _tmp1712 + _tmp1580 * _tmp1881 + _tmp1584 * _tmp1861 + _tmp1588 * _tmp1752 +
        _tmp1593 * _tmp1906 + _tmp1597 * _tmp1792 + _tmp1601 * _tmp1799 + _tmp1605 * _tmp1914 +
        _tmp1609 * _tmp1910 + _tmp1610 * _tmp1851 + _tmp1614 * _tmp1785 + _tmp1618 * _tmp1891 +
        _tmp1623 * _tmp1894 + _tmp1627 * _tmp1890 + _tmp1631 * _tmp1843 + _tmp1645 * _tmp1896 +
        _tmp1646 * _tmp1916 + _tmp1650 * _tmp1818 + _tmp1652 * _tmp1733 + _tmp1654 * _tmp1835 +
        _tmp1655 * _tmp1790 + _tmp1657 * _tmp1761 + _tmp1661 * _tmp1863 + _tmp1662 * _tmp1895 +
        _tmp1664 * _tmp1917 + _tmp1669 * _tmp1810 + _tmp1670 * _tmp1769 + _tmp1671 * _tmp1800 +
        _tmp1672 * _tmp1788 + _tmp1676 * _tmp1908 + _tmp1677 * _tmp1801 + _tmp1681 * _tmp1724 +
        _tmp1682 * _tmp1808 + _tmp1686 * _tmp1834 + _tmp1687 * _tmp1909 + _tmp1688 * _tmp1873 +
        _tmp1689 * _tmp1722 + _tmp1693 * _tmp1892 + _tmp1694 * _tmp1911 + _tmp1695 * _tmp1744 +
        _tmp1697 * _tmp1753 + _tmp1701 * _tmp1904 + _tmp1702 * _tmp1913 + _tmp1703 * _tmp1872 +
        _tmp1704 * _tmp1789 + _tmp1705 * _tmp1897 + _tmp1706 * _tmp1907 + _tmp1707 * _tmp1912 +
        _tmp1708 * _tmp1915 + _tmp1709 * _tmp1905 + _tmp1710 * _tmp1826 + _tmp1711 * _tmp1777;
    hessian_value_ptr[53] =
        _tmp1572 * _tmp2028 + _tmp1580 * _tmp2011 + _tmp1584 * _tmp1932 + _tmp1588 * _tmp2006 +
        _tmp1593 * _tmp1928 + _tmp1597 * _tmp1921 + _tmp1601 * _tmp2001 + _tmp1605 * _tmp1968 +
        _tmp1609 * _tmp1992 + _tmp1610 * _tmp2026 + _tmp1614 * _tmp2013 + _tmp1618 * _tmp1982 +
        _tmp1623 * _tmp1978 + _tmp1627 * _tmp1956 + _tmp1631 * _tmp2033 + _tmp1645 * _tmp2029 +
        _tmp1646 * _tmp2002 + _tmp1650 * _tmp2035 + _tmp1652 * _tmp2025 + _tmp1654 * _tmp1962 +
        _tmp1655 * _tmp1999 + _tmp1657 * _tmp2016 + _tmp1661 * _tmp1940 + _tmp1662 * _tmp1963 +
        _tmp1664 * _tmp2014 + _tmp1669 * _tmp2007 + _tmp1670 * _tmp2037 + _tmp1671 * _tmp1969 +
        _tmp1672 * _tmp1988 + _tmp1676 * _tmp1936 + _tmp1677 * _tmp1998 + _tmp1681 * _tmp1967 +
        _tmp1682 * _tmp1927 + _tmp1686 * _tmp1987 + _tmp1687 * _tmp1950 + _tmp1688 * _tmp1960 +
        _tmp1689 * _tmp1983 + _tmp1693 * _tmp2038 + _tmp1694 * _tmp1997 + _tmp1695 * _tmp1954 +
        _tmp1697 * _tmp2017 + _tmp1701 * _tmp1945 + _tmp1702 * _tmp2034 + _tmp1703 * _tmp1996 +
        _tmp1704 * _tmp2023 + _tmp1705 * _tmp2022 + _tmp1706 * _tmp2000 + _tmp1707 * _tmp2027 +
        _tmp1708 * _tmp2036 + _tmp1709 * _tmp1974 + _tmp1710 * _tmp2015 + _tmp1711 * _tmp2024;
    hessian_value_ptr[54] =
        _tmp1572 * _tmp2078 + _tmp1580 * _tmp2077 + _tmp1584 * _tmp2059 + _tmp1588 * _tmp2064 +
        _tmp1593 * _tmp2140 + _tmp1597 * _tmp2135 + _tmp1601 * _tmp2109 + _tmp1605 * _tmp2073 +
        _tmp1609 * _tmp2091 + _tmp1610 * _tmp2110 + _tmp1614 * _tmp2117 + _tmp1618 * _tmp2104 +
        _tmp1623 * _tmp2133 + _tmp1627 * _tmp2097 + _tmp1631 * _tmp2092 + _tmp1645 * _tmp2142 +
        _tmp1646 * _tmp2141 + _tmp1650 * _tmp2042 + _tmp1652 * _tmp2121 + _tmp1654 * _tmp2100 +
        _tmp1655 * _tmp2111 + _tmp1657 * _tmp2155 + _tmp1661 * _tmp2129 + _tmp1662 * _tmp2112 +
        _tmp1664 * _tmp2050 + _tmp1669 * _tmp2063 + _tmp1670 * _tmp2150 + _tmp1671 * _tmp2086 +
        _tmp1672 * _tmp2099 + _tmp1676 * _tmp2087 + _tmp1677 * _tmp2079 + _tmp1681 * _tmp2154 +
        _tmp1682 * _tmp2144 + _tmp1686 * _tmp2124 + _tmp1687 * _tmp2156 + _tmp1688 * _tmp2116 +
        _tmp1689 * _tmp2054 + _tmp1693 * _tmp2128 + _tmp1694 * _tmp2072 + _tmp1695 * _tmp2098 +
        _tmp1697 * _tmp2153 + _tmp1701 * _tmp2152 + _tmp1702 * _tmp2084 + _tmp1703 * _tmp2143 +
        _tmp1704 * _tmp2151 + _tmp1705 * _tmp2122 + _tmp1706 * _tmp2149 + _tmp1707 * _tmp2134 +
        _tmp1708 * _tmp2157 + _tmp1709 * _tmp2136 + _tmp1710 * _tmp2068 + _tmp1711 * _tmp2046;
    hessian_value_ptr[55] = _tmp1661 * _tmp2171 + _tmp1710 * _tmp2170;
    hessian_value_ptr[56] = _tmp1593 * _tmp2176 + _tmp1682 * _tmp2178;
    hessian_value_ptr[57] = _tmp1614 * _tmp2183 + _tmp1688 * _tmp2184;
    hessian_value_ptr[58] = _tmp1686 * _tmp2188 + _tmp1694 * _tmp2189;
    hessian_value_ptr[59] = _tmp1623 * _tmp2196 + _tmp1670 * _tmp2195;
    hessian_value_ptr[60] = _tmp1618 * _tmp2202 + _tmp1657 * _tmp2201;
    hessian_value_ptr[61] = _tmp1631 * _tmp2207 + _tmp1702 * _tmp2209;
    hessian_value_ptr[62] = _tmp1597 * _tmp2214 + _tmp1652 * _tmp2216;
    hessian_value_ptr[63] = _tmp1669 * _tmp2222 + _tmp1695 * _tmp2221;
    hessian_value_ptr[64] = _tmp1609 * _tmp2226 + _tmp1610 * _tmp2228;
    hessian_value_ptr[65] = _tmp1693 * _tmp2233 + _tmp1703 * _tmp2232;
    hessian_value_ptr[66] = _tmp1676 * _tmp2238 + _tmp1711 * _tmp2240;
    hessian_value_ptr[67] = _tmp1650 * _tmp2246 + _tmp1705 * _tmp2244;
    hessian_value_ptr[68] = _tmp1681 * _tmp2251 + _tmp1689 * _tmp2250;
    hessian_value_ptr[69] = _tmp1584 * _tmp2259 + _tmp1646 * _tmp2256;
    hessian_value_ptr[70] = _tmp1701 * _tmp2264 + _tmp1706 * _tmp2266;
    hessian_value_ptr[71] = _tmp1580 * _tmp2272 + _tmp1707 * _tmp2271;
    hessian_value_ptr[72] = _tmp1627 * _tmp2278 + _tmp1687 * _tmp2276;
    hessian_value_ptr[73] = _tmp1588 * _tmp2283 + _tmp1664 * _tmp2282;
    hessian_value_ptr[74] = _tmp1601 * _tmp2288 + _tmp1709 * _tmp2290;
    hessian_value_ptr[75] = std::pow(_tmp1712, Scalar(2)) + std::pow(_tmp1722, Scalar(2)) +
                            std::pow(_tmp1724, Scalar(2)) + std::pow(_tmp1733, Scalar(2)) +
                            std::pow(_tmp1744, Scalar(2)) + std::pow(_tmp1752, Scalar(2)) +
                            std::pow(_tmp1753, Scalar(2)) + std::pow(_tmp1761, Scalar(2)) +
                            std::pow(_tmp1769, Scalar(2)) + std::pow(_tmp1777, Scalar(2)) +
                            std::pow(_tmp1785, Scalar(2)) + std::pow(_tmp1788, Scalar(2)) +
                            std::pow(_tmp1789, Scalar(2)) + std::pow(_tmp1790, Scalar(2)) +
                            std::pow(_tmp1792, Scalar(2)) + std::pow(_tmp1799, Scalar(2)) +
                            std::pow(_tmp1800, Scalar(2)) + std::pow(_tmp1801, Scalar(2)) +
                            std::pow(_tmp1808, Scalar(2)) + std::pow(_tmp1810, Scalar(2)) +
                            std::pow(_tmp1818, Scalar(2)) + std::pow(_tmp1826, Scalar(2)) +
                            std::pow(_tmp1834, Scalar(2)) + std::pow(_tmp1835, Scalar(2)) +
                            std::pow(_tmp1843, Scalar(2)) + std::pow(_tmp1851, Scalar(2)) +
                            std::pow(_tmp1861, Scalar(2)) + std::pow(_tmp1863, Scalar(2)) +
                            std::pow(_tmp1872, Scalar(2)) + std::pow(_tmp1873, Scalar(2)) +
                            std::pow(_tmp1881, Scalar(2)) + std::pow(_tmp1890, Scalar(2)) +
                            std::pow(_tmp1891, Scalar(2)) + std::pow(_tmp1892, Scalar(2)) +
                            std::pow(_tmp1894, Scalar(2)) + std::pow(_tmp1895, Scalar(2)) +
                            std::pow(_tmp1896, Scalar(2)) + std::pow(_tmp1897, Scalar(2)) +
                            std::pow(_tmp1904, Scalar(2)) + std::pow(_tmp1905, Scalar(2)) +
                            std::pow(_tmp1906, Scalar(2)) + std::pow(_tmp1907, Scalar(2)) +
                            std::pow(_tmp1908, Scalar(2)) + std::pow(_tmp1909, Scalar(2)) +
                            std::pow(_tmp1910, Scalar(2)) + std::pow(_tmp1911, Scalar(2)) +
                            std::pow(_tmp1912, Scalar(2)) + std::pow(_tmp1913, Scalar(2)) +
                            std::pow(_tmp1914, Scalar(2)) + std::pow(_tmp1915, Scalar(2)) +
                            std::pow(_tmp1916, Scalar(2)) + std::pow(_tmp1917, Scalar(2));
    hessian_value_ptr[76] =
        _tmp1712 * _tmp2028 + _tmp1722 * _tmp1983 + _tmp1724 * _tmp1967 + _tmp1733 * _tmp2025 +
        _tmp1744 * _tmp1954 + _tmp1752 * _tmp2006 + _tmp1753 * _tmp2017 + _tmp1761 * _tmp2016 +
        _tmp1769 * _tmp2037 + _tmp1777 * _tmp2024 + _tmp1785 * _tmp2013 + _tmp1788 * _tmp1988 +
        _tmp1789 * _tmp2023 + _tmp1790 * _tmp1999 + _tmp1792 * _tmp1921 + _tmp1799 * _tmp2001 +
        _tmp1800 * _tmp1969 + _tmp1801 * _tmp1998 + _tmp1808 * _tmp1927 + _tmp1810 * _tmp2007 +
        _tmp1818 * _tmp2035 + _tmp1826 * _tmp2015 + _tmp1834 * _tmp1987 + _tmp1835 * _tmp1962 +
        _tmp1843 * _tmp2033 + _tmp1851 * _tmp2026 + _tmp1861 * _tmp1932 + _tmp1863 * _tmp1940 +
        _tmp1872 * _tmp1996 + _tmp1873 * _tmp1960 + _tmp1881 * _tmp2011 + _tmp1890 * _tmp1956 +
        _tmp1891 * _tmp1982 + _tmp1892 * _tmp2038 + _tmp1894 * _tmp1978 + _tmp1895 * _tmp1963 +
        _tmp1896 * _tmp2029 + _tmp1897 * _tmp2022 + _tmp1904 * _tmp1945 + _tmp1905 * _tmp1974 +
        _tmp1906 * _tmp1928 + _tmp1907 * _tmp2000 + _tmp1908 * _tmp1936 + _tmp1909 * _tmp1950 +
        _tmp1910 * _tmp1992 + _tmp1911 * _tmp1997 + _tmp1912 * _tmp2027 + _tmp1913 * _tmp2034 +
        _tmp1914 * _tmp1968 + _tmp1915 * _tmp2036 + _tmp1916 * _tmp2002 + _tmp1917 * _tmp2014;
    hessian_value_ptr[77] =
        _tmp1712 * _tmp2078 + _tmp1722 * _tmp2054 + _tmp1724 * _tmp2154 + _tmp1733 * _tmp2121 +
        _tmp1744 * _tmp2098 + _tmp1752 * _tmp2064 + _tmp1753 * _tmp2153 + _tmp1761 * _tmp2155 +
        _tmp1769 * _tmp2150 + _tmp1777 * _tmp2046 + _tmp1785 * _tmp2117 + _tmp1788 * _tmp2099 +
        _tmp1789 * _tmp2151 + _tmp1790 * _tmp2111 + _tmp1792 * _tmp2135 + _tmp1799 * _tmp2109 +
        _tmp1800 * _tmp2086 + _tmp1801 * _tmp2079 + _tmp1808 * _tmp2144 + _tmp1810 * _tmp2063 +
        _tmp1818 * _tmp2042 + _tmp1826 * _tmp2068 + _tmp1834 * _tmp2124 + _tmp1835 * _tmp2100 +
        _tmp1843 * _tmp2092 + _tmp1851 * _tmp2110 + _tmp1861 * _tmp2059 + _tmp1863 * _tmp2129 +
        _tmp1872 * _tmp2143 + _tmp1873 * _tmp2116 + _tmp1881 * _tmp2077 + _tmp1890 * _tmp2097 +
        _tmp1891 * _tmp2104 + _tmp1892 * _tmp2128 + _tmp1894 * _tmp2133 + _tmp1895 * _tmp2112 +
        _tmp1896 * _tmp2142 + _tmp1897 * _tmp2122 + _tmp1904 * _tmp2152 + _tmp1905 * _tmp2136 +
        _tmp1906 * _tmp2140 + _tmp1907 * _tmp2149 + _tmp1908 * _tmp2087 + _tmp1909 * _tmp2156 +
        _tmp1910 * _tmp2091 + _tmp1911 * _tmp2072 + _tmp1912 * _tmp2134 + _tmp1913 * _tmp2084 +
        _tmp1914 * _tmp2073 + _tmp1915 * _tmp2157 + _tmp1916 * _tmp2141 + _tmp1917 * _tmp2050;
    hessian_value_ptr[78] = _tmp1826 * _tmp2170 + _tmp1863 * _tmp2171;
    hessian_value_ptr[79] = _tmp1808 * _tmp2178 + _tmp1906 * _tmp2176;
    hessian_value_ptr[80] = _tmp1785 * _tmp2183 + _tmp1873 * _tmp2184;
    hessian_value_ptr[81] = _tmp1834 * _tmp2188 + _tmp1911 * _tmp2189;
    hessian_value_ptr[82] = _tmp1769 * _tmp2195 + _tmp1894 * _tmp2196;
    hessian_value_ptr[83] = _tmp1761 * _tmp2201 + _tmp1891 * _tmp2202;
    hessian_value_ptr[84] = _tmp1843 * _tmp2207 + _tmp1913 * _tmp2209;
    hessian_value_ptr[85] = _tmp1733 * _tmp2216 + _tmp1792 * _tmp2214;
    hessian_value_ptr[86] = _tmp1744 * _tmp2221 + _tmp1810 * _tmp2222;
    hessian_value_ptr[87] = _tmp1851 * _tmp2228 + _tmp1910 * _tmp2226;
    hessian_value_ptr[88] = _tmp1872 * _tmp2232 + _tmp1892 * _tmp2233;
    hessian_value_ptr[89] = _tmp1777 * _tmp2240 + _tmp1908 * _tmp2238;
    hessian_value_ptr[90] = _tmp1818 * _tmp2246 + _tmp1897 * _tmp2244;
    hessian_value_ptr[91] = _tmp1722 * _tmp2250 + _tmp1724 * _tmp2251;
    hessian_value_ptr[92] = _tmp1861 * _tmp2259 + _tmp1916 * _tmp2256;
    hessian_value_ptr[93] = _tmp1904 * _tmp2264 + _tmp1907 * _tmp2266;
    hessian_value_ptr[94] = _tmp1881 * _tmp2272 + _tmp1912 * _tmp2271;
    hessian_value_ptr[95] = _tmp1890 * _tmp2278 + _tmp1909 * _tmp2276;
    hessian_value_ptr[96] = _tmp1752 * _tmp2283 + _tmp1917 * _tmp2282;
    hessian_value_ptr[97] = _tmp1799 * _tmp2288 + _tmp1905 * _tmp2290;
    hessian_value_ptr[98] = std::pow(_tmp1921, Scalar(2)) + std::pow(_tmp1927, Scalar(2)) +
                            std::pow(_tmp1928, Scalar(2)) + std::pow(_tmp1932, Scalar(2)) +
                            std::pow(_tmp1936, Scalar(2)) + std::pow(_tmp1940, Scalar(2)) +
                            std::pow(_tmp1945, Scalar(2)) + std::pow(_tmp1950, Scalar(2)) +
                            std::pow(_tmp1954, Scalar(2)) + std::pow(_tmp1956, Scalar(2)) +
                            std::pow(_tmp1960, Scalar(2)) + std::pow(_tmp1962, Scalar(2)) +
                            std::pow(_tmp1963, Scalar(2)) + std::pow(_tmp1967, Scalar(2)) +
                            std::pow(_tmp1968, Scalar(2)) + std::pow(_tmp1969, Scalar(2)) +
                            std::pow(_tmp1974, Scalar(2)) + std::pow(_tmp1978, Scalar(2)) +
                            std::pow(_tmp1982, Scalar(2)) + std::pow(_tmp1983, Scalar(2)) +
                            std::pow(_tmp1987, Scalar(2)) + std::pow(_tmp1988, Scalar(2)) +
                            std::pow(_tmp1992, Scalar(2)) + std::pow(_tmp1996, Scalar(2)) +
                            std::pow(_tmp1997, Scalar(2)) + std::pow(_tmp1998, Scalar(2)) +
                            std::pow(_tmp1999, Scalar(2)) + std::pow(_tmp2000, Scalar(2)) +
                            std::pow(_tmp2001, Scalar(2)) + std::pow(_tmp2002, Scalar(2)) +
                            std::pow(_tmp2006, Scalar(2)) + std::pow(_tmp2007, Scalar(2)) +
                            std::pow(_tmp2011, Scalar(2)) + std::pow(_tmp2013, Scalar(2)) +
                            std::pow(_tmp2014, Scalar(2)) + std::pow(_tmp2015, Scalar(2)) +
                            std::pow(_tmp2016, Scalar(2)) + std::pow(_tmp2017, Scalar(2)) +
                            std::pow(_tmp2022, Scalar(2)) + std::pow(_tmp2023, Scalar(2)) +
                            std::pow(_tmp2024, Scalar(2)) + std::pow(_tmp2025, Scalar(2)) +
                            std::pow(_tmp2026, Scalar(2)) + std::pow(_tmp2027, Scalar(2)) +
                            std::pow(_tmp2028, Scalar(2)) + std::pow(_tmp2029, Scalar(2)) +
                            std::pow(_tmp2033, Scalar(2)) + std::pow(_tmp2034, Scalar(2)) +
                            std::pow(_tmp2035, Scalar(2)) + std::pow(_tmp2036, Scalar(2)) +
                            std::pow(_tmp2037, Scalar(2)) + std::pow(_tmp2038, Scalar(2));
    hessian_value_ptr[99] =
        _tmp1921 * _tmp2135 + _tmp1927 * _tmp2144 + _tmp1928 * _tmp2140 + _tmp1932 * _tmp2059 +
        _tmp1936 * _tmp2087 + _tmp1940 * _tmp2129 + _tmp1945 * _tmp2152 + _tmp1950 * _tmp2156 +
        _tmp1954 * _tmp2098 + _tmp1956 * _tmp2097 + _tmp1960 * _tmp2116 + _tmp1962 * _tmp2100 +
        _tmp1963 * _tmp2112 + _tmp1967 * _tmp2154 + _tmp1968 * _tmp2073 + _tmp1969 * _tmp2086 +
        _tmp1974 * _tmp2136 + _tmp1978 * _tmp2133 + _tmp1982 * _tmp2104 + _tmp1983 * _tmp2054 +
        _tmp1987 * _tmp2124 + _tmp1988 * _tmp2099 + _tmp1992 * _tmp2091 + _tmp1996 * _tmp2143 +
        _tmp1997 * _tmp2072 + _tmp1998 * _tmp2079 + _tmp1999 * _tmp2111 + _tmp2000 * _tmp2149 +
        _tmp2001 * _tmp2109 + _tmp2002 * _tmp2141 + _tmp2006 * _tmp2064 + _tmp2007 * _tmp2063 +
        _tmp2011 * _tmp2077 + _tmp2013 * _tmp2117 + _tmp2014 * _tmp2050 + _tmp2015 * _tmp2068 +
        _tmp2016 * _tmp2155 + _tmp2017 * _tmp2153 + _tmp2022 * _tmp2122 + _tmp2023 * _tmp2151 +
        _tmp2024 * _tmp2046 + _tmp2025 * _tmp2121 + _tmp2026 * _tmp2110 + _tmp2027 * _tmp2134 +
        _tmp2028 * _tmp2078 + _tmp2029 * _tmp2142 + _tmp2033 * _tmp2092 + _tmp2034 * _tmp2084 +
        _tmp2035 * _tmp2042 + _tmp2036 * _tmp2157 + _tmp2037 * _tmp2150 + _tmp2038 * _tmp2128;
    hessian_value_ptr[100] = _tmp1940 * _tmp2171 + _tmp2015 * _tmp2170;
    hessian_value_ptr[101] = _tmp1927 * _tmp2178 + _tmp1928 * _tmp2176;
    hessian_value_ptr[102] = _tmp1960 * _tmp2184 + _tmp2013 * _tmp2183;
    hessian_value_ptr[103] = _tmp1987 * _tmp2188 + _tmp1997 * _tmp2189;
    hessian_value_ptr[104] = _tmp1978 * _tmp2196 + _tmp2037 * _tmp2195;
    hessian_value_ptr[105] = _tmp1982 * _tmp2202 + _tmp2016 * _tmp2201;
    hessian_value_ptr[106] = _tmp2033 * _tmp2207 + _tmp2034 * _tmp2209;
    hessian_value_ptr[107] = _tmp1921 * _tmp2214 + _tmp2025 * _tmp2216;
    hessian_value_ptr[108] = _tmp1954 * _tmp2221 + _tmp2007 * _tmp2222;
    hessian_value_ptr[109] = _tmp1992 * _tmp2226 + _tmp2026 * _tmp2228;
    hessian_value_ptr[110] = _tmp1996 * _tmp2232 + _tmp2038 * _tmp2233;
    hessian_value_ptr[111] = _tmp1936 * _tmp2238 + _tmp2024 * _tmp2240;
    hessian_value_ptr[112] = _tmp2022 * _tmp2244 + _tmp2035 * _tmp2246;
    hessian_value_ptr[113] = _tmp1967 * _tmp2251 + _tmp1983 * _tmp2250;
    hessian_value_ptr[114] = _tmp1932 * _tmp2259 + _tmp2002 * _tmp2256;
    hessian_value_ptr[115] = _tmp1945 * _tmp2264 + _tmp2000 * _tmp2266;
    hessian_value_ptr[116] = _tmp2011 * _tmp2272 + _tmp2027 * _tmp2271;
    hessian_value_ptr[117] = _tmp1950 * _tmp2276 + _tmp1956 * _tmp2278;
    hessian_value_ptr[118] = _tmp2006 * _tmp2283 + _tmp2014 * _tmp2282;
    hessian_value_ptr[119] = _tmp1974 * _tmp2290 + _tmp2001 * _tmp2288;
    hessian_value_ptr[120] = std::pow(_tmp2042, Scalar(2)) + std::pow(_tmp2046, Scalar(2)) +
                             std::pow(_tmp2050, Scalar(2)) + std::pow(_tmp2054, Scalar(2)) +
                             std::pow(_tmp2059, Scalar(2)) + std::pow(_tmp2063, Scalar(2)) +
                             std::pow(_tmp2064, Scalar(2)) + std::pow(_tmp2068, Scalar(2)) +
                             std::pow(_tmp2072, Scalar(2)) + std::pow(_tmp2073, Scalar(2)) +
                             std::pow(_tmp2077, Scalar(2)) + std::pow(_tmp2078, Scalar(2)) +
                             std::pow(_tmp2079, Scalar(2)) + std::pow(_tmp2084, Scalar(2)) +
                             std::pow(_tmp2086, Scalar(2)) + std::pow(_tmp2087, Scalar(2)) +
                             std::pow(_tmp2091, Scalar(2)) + std::pow(_tmp2092, Scalar(2)) +
                             std::pow(_tmp2097, Scalar(2)) + std::pow(_tmp2098, Scalar(2)) +
                             std::pow(_tmp2099, Scalar(2)) + std::pow(_tmp2100, Scalar(2)) +
                             std::pow(_tmp2104, Scalar(2)) + std::pow(_tmp2109, Scalar(2)) +
                             std::pow(_tmp2110, Scalar(2)) + std::pow(_tmp2111, Scalar(2)) +
                             std::pow(_tmp2112, Scalar(2)) + std::pow(_tmp2116, Scalar(2)) +
                             std::pow(_tmp2117, Scalar(2)) + std::pow(_tmp2121, Scalar(2)) +
                             std::pow(_tmp2122, Scalar(2)) + std::pow(_tmp2124, Scalar(2)) +
                             std::pow(_tmp2128, Scalar(2)) + std::pow(_tmp2129, Scalar(2)) +
                             std::pow(_tmp2133, Scalar(2)) + std::pow(_tmp2134, Scalar(2)) +
                             std::pow(_tmp2135, Scalar(2)) + std::pow(_tmp2136, Scalar(2)) +
                             std::pow(_tmp2140, Scalar(2)) + std::pow(_tmp2141, Scalar(2)) +
                             std::pow(_tmp2142, Scalar(2)) + std::pow(_tmp2143, Scalar(2)) +
                             std::pow(_tmp2144, Scalar(2)) + std::pow(_tmp2149, Scalar(2)) +
                             std::pow(_tmp2150, Scalar(2)) + std::pow(_tmp2151, Scalar(2)) +
                             std::pow(_tmp2152, Scalar(2)) + std::pow(_tmp2153, Scalar(2)) +
                             std::pow(_tmp2154, Scalar(2)) + std::pow(_tmp2155, Scalar(2)) +
                             std::pow(_tmp2156, Scalar(2)) + std::pow(_tmp2157, Scalar(2));
    hessian_value_ptr[121] = _tmp2068 * _tmp2170 + _tmp2129 * _tmp2171;
    hessian_value_ptr[122] = _tmp2140 * _tmp2176 + _tmp2144 * _tmp2178;
    hessian_value_ptr[123] = _tmp2116 * _tmp2184 + _tmp2117 * _tmp2183;
    hessian_value_ptr[124] = _tmp2072 * _tmp2189 + _tmp2124 * _tmp2188;
    hessian_value_ptr[125] = _tmp2133 * _tmp2196 + _tmp2150 * _tmp2195;
    hessian_value_ptr[126] = _tmp2104 * _tmp2202 + _tmp2155 * _tmp2201;
    hessian_value_ptr[127] = _tmp2084 * _tmp2209 + _tmp2092 * _tmp2207;
    hessian_value_ptr[128] = _tmp2121 * _tmp2216 + _tmp2135 * _tmp2214;
    hessian_value_ptr[129] = _tmp2063 * _tmp2222 + _tmp2098 * _tmp2221;
    hessian_value_ptr[130] = _tmp2091 * _tmp2226 + _tmp2110 * _tmp2228;
    hessian_value_ptr[131] = _tmp2128 * _tmp2233 + _tmp2143 * _tmp2232;
    hessian_value_ptr[132] = _tmp2046 * _tmp2240 + _tmp2087 * _tmp2238;
    hessian_value_ptr[133] = _tmp2042 * _tmp2246 + _tmp2122 * _tmp2244;
    hessian_value_ptr[134] = _tmp2054 * _tmp2250 + _tmp2154 * _tmp2251;
    hessian_value_ptr[135] = _tmp2059 * _tmp2259 + _tmp2141 * _tmp2256;
    hessian_value_ptr[136] = _tmp2149 * _tmp2266 + _tmp2152 * _tmp2264;
    hessian_value_ptr[137] = _tmp2077 * _tmp2272 + _tmp2134 * _tmp2271;
    hessian_value_ptr[138] = _tmp2097 * _tmp2278 + _tmp2156 * _tmp2276;
    hessian_value_ptr[139] = _tmp2050 * _tmp2282 + _tmp2064 * _tmp2283;
    hessian_value_ptr[140] = _tmp2109 * _tmp2288 + _tmp2136 * _tmp2290;
    hessian_value_ptr[141] =
        _tmp2158 + std::pow(_tmp2170, Scalar(2)) + std::pow(_tmp2171, Scalar(2));
    hessian_value_ptr[142] =
        _tmp2172 + std::pow(_tmp2176, Scalar(2)) + std::pow(_tmp2178, Scalar(2));
    hessian_value_ptr[143] =
        _tmp2179 + std::pow(_tmp2183, Scalar(2)) + std::pow(_tmp2184, Scalar(2));
    hessian_value_ptr[144] =
        std::pow(_tmp2188, Scalar(2)) + std::pow(_tmp2189, Scalar(2)) + _tmp2190;
    hessian_value_ptr[145] =
        _tmp2191 + std::pow(_tmp2195, Scalar(2)) + std::pow(_tmp2196, Scalar(2));
    hessian_value_ptr[146] =
        _tmp2197 + std::pow(_tmp2201, Scalar(2)) + std::pow(_tmp2202, Scalar(2));
    hessian_value_ptr[147] =
        std::pow(_tmp2207, Scalar(2)) + _tmp2208 + std::pow(_tmp2209, Scalar(2));
    hessian_value_ptr[148] =
        std::pow(_tmp2214, Scalar(2)) + _tmp2215 + std::pow(_tmp2216, Scalar(2));
    hessian_value_ptr[149] =
        _tmp2217 + std::pow(_tmp2221, Scalar(2)) + std::pow(_tmp2222, Scalar(2));
    hessian_value_ptr[150] =
        std::pow(_tmp2226, Scalar(2)) + _tmp2227 + std::pow(_tmp2228, Scalar(2));
    hessian_value_ptr[151] =
        std::pow(_tmp2232, Scalar(2)) + std::pow(_tmp2233, Scalar(2)) + _tmp2234;
    hessian_value_ptr[152] =
        std::pow(_tmp2238, Scalar(2)) + _tmp2239 + std::pow(_tmp2240, Scalar(2));
    hessian_value_ptr[153] =
        std::pow(_tmp2244, Scalar(2)) + _tmp2245 + std::pow(_tmp2246, Scalar(2));
    hessian_value_ptr[154] =
        std::pow(_tmp2250, Scalar(2)) + std::pow(_tmp2251, Scalar(2)) + _tmp2252;
    hessian_value_ptr[155] =
        std::pow(_tmp2256, Scalar(2)) + _tmp2257 + std::pow(_tmp2259, Scalar(2));
    hessian_value_ptr[156] =
        std::pow(_tmp2264, Scalar(2)) + _tmp2265 + std::pow(_tmp2266, Scalar(2));
    hessian_value_ptr[157] =
        _tmp2267 + std::pow(_tmp2271, Scalar(2)) + std::pow(_tmp2272, Scalar(2));
    hessian_value_ptr[158] =
        std::pow(_tmp2276, Scalar(2)) + _tmp2277 + std::pow(_tmp2278, Scalar(2));
    hessian_value_ptr[159] =
        std::pow(_tmp2282, Scalar(2)) + std::pow(_tmp2283, Scalar(2)) + _tmp2284;
    hessian_value_ptr[160] =
        std::pow(_tmp2288, Scalar(2)) + _tmp2289 + std::pow(_tmp2290, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
